@startuml

participant Client
participant TEAPServer
participant MASA


TEAPServer->Client: EAP-Request/\nType=Identity

Client->TEAPServer: EAP-Response/\nType=Identity

TEAPServer->Client: EAP-Request/\nType=TEAP,\nTEAP Start,\nAuthority-ID TLV

note left
(1)
end note
Client->TEAPServer: EAP-Response/\nType=TEAP,\nTLS(ClientHello)

TEAPServer->Client: EAP-Request/\nType=TEAP,\nTLS(ServerHello,\nCertificate,\nServerKeyExchange,\nCertificateRequest,\nServerHelloDone)

Client->TEAPServer: EAP-Response/\nType=TEAP,\nTLS(Certificate\nClientKeyExchange,\nCertificateVerify,\nChangeCipherSpec,\nFinished)

TEAPServer->Client: EAP-Request/\nType=TEAP,\nTLS(ChangeCipherSpec,\nFinished),\n{Crypto-Binding TLV,\nResult TLV=Success}

Client->TEAPServer: EAP-Response/\n,Type=TEAP,\n{Crypto-Binding TLV,\nResult TLV=Success}

note over Client,TEAPServer
At this stage the outer TLS tunnel is established
The following message exchanges are for BRSKI
end note
TEAPServer->Client: EAP-Request/\nType=TEAP,\n{Request-Action TLV:\nStatus=Failure,\nAction=Process-TLV,\nTLV=Request-Voucher,\nTLV=Trusted-Server-Root,\nTLV=CSR-Attributes,\nTLV=PKCS#10}
note left
(2)
end note

Client->TEAPServer:  EAP-Response/\nType=TEAP,\n{Request-Voucher TLV}
note left
(3)
end note
TEAPServer->MASA: RequestVoucher
MASA->TEAPServer: Voucher
TEAPServer->Client: EAP-Request/\nType=TEAP,\n{Voucher TLV}
note left
(4)
end note

Client->TEAPServer: EAP-Response/\nType=TEAP,{Trusted-Server-Root TLV}

TEAPServer->Client: EAP-Request/\nType=TEAP,\n{Trusted-Server-Root TLV}
note left
(5)
end note

Client->TEAPServer: EAP-Response/\nType=TEAP,{CSR-Attributes TLV}

TEAPServer->Client: EAP-Request/\nType=TEAP,\n{CSR-Attributes TLV}

@enduml