<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.12 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-lear-eap-teap-brski-05" category="std" updates="RFC7170">

  <front>
    <title abbrev="TEAP Update and Extensions">TEAP Update and Extensions for Bootstrapping</title>

    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="O." surname="Friel" fullname="Owen Friel">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 W. Tasman Dr.</street>
          <city>San Jose, CA</city>
          <code>95134</code>
          <country>United States</country>
        </postal>
        <email>ofriel@cisco.com</email>
      </address>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="Nancy Cam-Winget">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 W. Tasman Dr.</street>
          <city>San Jose, CA</city>
          <code>95134</code>
          <country>United States</country>
        </postal>
        <email>ncamwing@cisco.com</email>
      </address>
    </author>
    <author initials="D." surname="Harkins" fullname="Dan Harkins">
      <organization>HP Enterprise</organization>
      <address>
        <postal>
          <street>3333 Scott Boulevard</street>
          <city>Santa Clara, CA</city>
          <code>95054</code>
          <country>United States</country>
        </postal>
        <email>dharkins@arubanetworks.com</email>
      </address>
    </author>

    <date year="2019" month="November" day="01"/>

    
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>In certain environments, in order for a device to establish any layer
three communications, it is necessary for that device to be properly
credentialed.  This is a relatively easy problem to solve when a
device is associated with a human being and has both input and display
functions.  It is less easy when the human, input, and display
functions are not present.  To address this case, this memo specifies
extensions to the Tunnel Extensible Authentication Protocol (TEAP)
method that leverages Bootstrapping Remote Secure Key Infrastructures
(BRSKI) in order to provide a credential to a device at layer two.
The basis of this work is that a manufacturer will introduce the
device and the local deployment through cryptographic means.  In this
sense the same trust model as BRSKI is used.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t><xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> (BRSKI) specifies a means to
provision credentials to be used as credentials to operationally
access networks.  It was designed as a standalone means where some
limited access to an IP network is already available.  This is not
always the case.  For example, IEEE 802.11 networks generally require
authentication prior to any form of address assignment.  While it is
possible to assign an IP address to a device on some form of an open
network, or to accept some sort of default credential to establish
initial IP connectivity, the steps that would then follow might well
require that the device is placed on a new network, requiring reseting
all layer three parameters.</t>

<t>A more  natural approach  in such  cases is to  more tightly  bind the
provisioning  of credentials with  the authentication  mechanism.  One
such way  to do this is  to make use of  the Extensible Authentication
Protocol (EAP)  <xref target="RFC3748"/> and the  Tunnel Extensible Authentication
Protocol  (TEAP)  method  <xref target="RFC7170"/>.    Thus  we  define  new  TEAP
Type-Length-Value  (TLV) objects  that can  be used  to  transport the
BRSKI protocol messages within the context of a TEAP TLS tunnel.</t>

<t><xref target="RFC7170"/> discusses the notion of provisioning peers.  Several
different mechanisms are available.  Section 3.8 of that document
acknowledges the concept of not initially authenticating the outer TLS
session so that provisioning may occur.  In addition, exchange of
multiple TLV messages between client and EAP server permits multiple
provisioning steps.</t>

<section anchor="terminology" title="Terminology">

<t>The reader is presumed to be familiar with EAP terminology as stated
in <xref target="RFC3748"/>.  In addition, the following terms are commonly used in
this document.</t>

<t><list style="symbols">
  <t>BRSKI: Bootstrapping Remote Secure Key Infrastructures, as defined in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.  The term is also used
to refer to the flow described in that document.</t>
  <t>EST: Enrollment over Secure Transport, as defined in <xref target="RFC7030"/>.</t>
  <t>Voucher: a signed JSON object as defined in <xref target="RFC8366"/>.</t>
</list></t>

</section>
</section>
<section anchor="arch" title="TEAP BRSKI Architecture">

<t>The TEAP BRSKI architecture is illustrated in
<xref target="brski-architecture"/>. The device talks to the TEAP server via the
Authenticator using any compliant transport such as <xref target="IEEE8021X"></xref>.
The architecture illustrated shows an Authenticator distinct from
the TEAP server. This is a deployment optimization and when so
deployed the communication between Authenticator and TEAP server
is a AAA protocol such as RADIUS or DIAMETER.</t>

<t>The architecture illustrated shows a co-located TEAP server and
BRSKI registrar. Not only are these two functions co-located, they
MUST be the same entity. This ensures that the entity identified in
the device’s voucher request (the TEAP server) is the same entity
that signs the voucher request (the registrar).</t>

<t>The registrar communicates with the BRSKI MASA service for the
purposes of getting signed vouchers.</t>

<t>The registrar also communicates with a Certificate Authority in order
to issue LDevIDs. The architecture shows the registrar and CA as being
two logically separate entities, however the CA may be integrated into
the registrar. The device is not explicitly aware of whether the CA
and registrar functions are integrated.</t>

<figure><artwork><![CDATA[
+--------+     +---------+     +---------+     +------+
|        |     |         |     |  TEAP   |<--->| MASA |
|        |     | Authen- |     | server  |     +------+
| Device |<--->| ticator |<--->|         |
|        |     |         |     |  BRSKI  |     +------+
|        |     |         |     |Registrar|<--->|  CA  |
+--------+     +---------+     +---------+     +------+

]]></artwork></figure>

</section>
<section title="BRSKI Bootstrap and Enroll Operation" anchor="brski-architecture">

<t>This section summarises the current BRSKI operation. The BRSKI flow
assumes the device has an IDevID and has a manufacturer installed
trust anchor that can be used to validate the BRSKI voucher. The BRSKI
flow compromises serveral main steps from the perspective of the
device:</t>

<t><list style="symbols">
  <t>Step 1: Device discovers the registrar</t>
  <t>Step 2: Device establishes provisional TLS connection to registrar</t>
  <t>Step 3: Device sends voucher request message and receives signed voucher response</t>
  <t>Step 4: Device validates voucher and validates provisional TLS connection to registrar</t>
  <t>Step 5: Device downloads additional local domain CA information</t>
  <t>Step 6: Device downloads Certificate Signing Request (CSR) attributes</t>
  <t>Step 7: Device does a certificate enroll to obtain an LDevID</t>
  <t>Step 8: Device periodically reenrolls via EST to refresh its LDevID</t>
</list></t>

<t>Most of the operational steps require the device, and thus its internal state machine, to automatically complete the next step without being explicitly instructed to do so by the registrar. For example, the registrar does not explicitly tell the device to download additional local domain CA information, or to do an EST enroll to obtain an LDevID.</t>

<section anchor="discovery-of-trusted-masa" title="Discovery of Trusted MASA">

<t>BRSKI section 2.8 outlines how the Registrar discovers the correct MASA to connect with. BRSKI section 5.3 outlines how the Registrar can make policy decisions about which devices to trust.</t>

<t>Similar approaches are applicable for TEAP servers executing BRSKI. For example, the TEAP server may be configured with a list of trusted manufacturing CAs. During device bootstrap, only devices with an IDevID signed by a trusted manufacturing CA may be allowed to etablishes a TLS connection with the TEAP server, and the TEAP server could then extract the MASA URI from the device’s IDevID.</t>

</section>
<section anchor="bint" title="Executing BRSKI in a TEAP Tunnel">

<t>This section outlines how the main BRSKI steps outlined above map to TEAP, and how BRSKI and enrollment can be accomplished inside a TEAP TLS tunnel. The following new TEAP TLVs are introduced:</t>

<t><list style="symbols">
  <t>BRSKI-VoucherRequest</t>
  <t>BRSKI-Voucher</t>
  <t>CSR-Attributes</t>
</list></t>

<t>The following steps outline how the above BRSKI flow maps to TEAP.</t>

<t><list style="symbols">
  <t>Step 1: Device discovers the registrar</t>
</list></t>

<t>When BRSKI is executed in a TEAP tunnel, the device exchanges BRSKI TLVs with the TEAP server. The discovery process for devices is therefore the standard wired or wireless LAN EAP server discovery process. The discovery processes outlined in section 4 of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> are not required for initial discovery of the registrar.</t>

<t><list style="symbols">
  <t>Step 2: Device establishes provisional TLS connection to registrar</t>
</list></t>

<t>The device establishes an outer TEAP tunnel with the TEAP server and
does not validate the server certificate. 
The device presents its LDevID as its identity
certificate if it has a valid LDevID, otherwise it presents its
IDevID. The TEAP server validates the device’s certificate using
its implicit or explicit trust anchor database. If the device
presents an IDevID it is verified against a database of trusted
manufacturer certificates. Server policy may also be used to control
which certificate the device is allowed present, as described in
section {pki-certificate-authority-considerations}.</t>

<t>If the presented credential is sufficient to grant access, the TEAP server can return a TEAP Result TLV indicating success immediately. The device may still send a Request-Action TLV including a BRSKI-VoucherRequest TLV in response to the TEAP Result TLV if it does not have, but requires, provisioning of trust anchors for validating the TEAP server certificate. Note that no inner EAP method is required for this, only an exchange of TEAP TLVs.</t>

<t>[todo] Question: as the device wants the server to reply with a BRSKI-Voucher TLV, does it really send a Request-Action TLV containing a BRSKI-VoucherRequest TLV, or does it send a Request-Action TLV containing a BRSKI-Voucher TLV?? The TEAP draft is a bit ambiguous here. Normally, if one end sends a Request-Action including XXX-TLV, it means it wants the far end ot send an XXX-TLV…</t>

<t>[todo] Question: general TEAP protocol question: does the device have to send a Request-Action w/BRSKI-VoucherRequest or can it send a BRSKI-VoucherRequest on its own? I’m not clear on this.</t>

<t>If the TEAP server requires that the device execute a BRSKI flow, the server sends a Request-Action TLV that includes a BRSKI-VoucherRequest TLV. For example, if the device presented its IDevID but the TEAP server requires an LDevID.</t>

<t>[todo] Question: to nit pick, the server should send a Request-Action TLV including a PKCS#10 TLV to tell the client to enroll. How does the server really know that the client has the correct trust established (as previously received by a BRSKI-Voucher)? If the client sends an IDevID, does server always send a Request-Action including both BRSKI-VoucherRequest and PKCS#10 TLVs? Whats the client behaviour? I assume client can spontaneously send BRSKI-VoucherRequest and/or PCSK#10 without being explicitly instructed to. Just need to get the language correct here.</t>

<t>The TEAP server may also require the device to reenroll, for example, if the device presented a valid LDevID that is very closed to expiration. The server may instruct a device to reenroll by sending a Request-Action TLV that includes a zero byte length PKCS#10 TLV.</t>

<t><list style="symbols">
  <t>Step 3: Device sends voucher request message and receives signed voucher response</t>
</list></t>

<t>The device sends a BRSKI-RequestVoucher TLV to the TEAP server. The
TEAP server forwards the RequestVoucher message to the MASA server,
and the MASA server replies with a signed voucher. The TEAP server
sends a BRSKI-Voucher TLV to the device.</t>

<t>If the MASA server does not issue a signed voucher, the TEAP server
sends an EAP-Error TLV with a suitable error code to the device.</t>

<t>For wireless devices in particular, it is important that the MASA
server only return a voucher for devices known to be associated with a
particular registrar.  In this sense, success indicates that the
device is on the correct network, while failure indicates the device
should try to provision itself within wireless networks (e.g, go to
the next SSID).</t>

<t><list style="symbols">
  <t>Step 4: Device validates voucher and validates provisional TLS connection to registrar</t>
</list></t>

<t>The device validates the signed voucher using its manufacturer
installed trust anchor, and uses the CA information in the voucher to
validate the TLS connection to the TEAP server.</t>

<t>If the device fails to validate the voucher, then it sends a TEAP-Error TLV indicating failiure to the TEAP server.</t>

<t>Similarly, if the device validates the voucher, but fails to validate the provisional TLS connection, then it sends a TEAP-Error TLV indicating failure to the TEAP server. Note that the outer TLS tunnel has already been established, thus allowing the client to send a TEAP-Error TLV to the server inside that tunnel to indicate that it failed to verify the provisionally accepted outer TLS tunnel server identity.</t>

<t><list style="symbols">
  <t>Step 5: Device downloads additional local domain CA information</t>
</list></t>

<t>On completion of the BRSKI flow, the device SHOULD send a
Trusted-Server-Root TLV to the TEAP server in order to discover
additional local domain CAs. This is equivalent to section [todo] from <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<t><list style="symbols">
  <t>Step 6: Device downloads CSR attributes</t>
</list></t>

<t>No later than the completion of step 5, server MUST send a
CSR-Attributes TLV to peer server in order to discover the correct
fields to include when it enrolls to get an LDevID.</t>

<t><list style="symbols">
  <t>Step 7: Device does a certificate enroll to obtain an LDevID</t>
</list></t>

<t>When executing the BRSKI flow inside a TEAP tunnel, the device does
not directly leverage EST when doing its initial enroll. Instead, the
device uses the existing TEAP PKCS#10 and PCKS#7 TEAP mechanisms.</t>

<t>Once the BRSKI flow is complete, the device can now send a PKCS#10 TLV
to enroll and request an LDevID. If the TEAP server instructed the
device to start the BRSKI flow via a Request-Action TLV that includes
a BRSKI-RequestVoucher TLV, then the device MUST send a PKCS#10 in
order to start the enroll process. The TEAP server will handle the
PKCS#10 and ultimately return a PKCS#7 including an LDevID to the
device.</t>

<t>If the TEAP server granted the device access on completion of the
outer TEAP TLS tunnel in step 2 without sending a Request-Action TLV,
the device does not have to send a PKCS#10 to enroll.</t>

<t>At this point, the device is said to be provisioned for local network
access, and may authenticate in the future via 802.1X with its newly
acquired credentials.</t>

<t><list style="symbols">
  <t>Step 8: Device periodically reenrolls to refresh its LDevID</t>
</list></t>

<t>When a device’s LDevID is close to expiration, there are two options
for re-enrollment in order to obtain a fresh LDevID. As outlined in
Step 2 above, the TEAP server may instruct the device to reenroll by
sending a Request-Action TLV including a PKCS#10 TLV. If the TEAP
server explicilty instructs the device to reenroll via these TLV
exchange, then the device MUST send a PKCS#10 to reenroll and request
a fresh LDevID.</t>

<t>However, the device SHOULD reenroll if it determines that its LDevID
is close to expiration without waiting for explicit instruction from
the TEAP server. There are two options to do this.</t>

<t>Option 1: The device reenrolls for a new LDevID directly with the EST
CA outside the context of the 802.1X TEAP flow. The device uses the
registrar discovery mechanisms oulined in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> to discover the registrar
and the device sends the EST reenroll messages to the discovered
registrar endpoint. No new TEAP TLVs are defined to facilitate
discover of the registrar or EST endpoints inside the context of the
TEAP tunnel.</t>

<t>Option 2: When the device is performing a periodic 802.1X
authentication using its current LDevID, it reenrolls for a new LDevID
by sending a PKCS#10 TLV inside the TEAP TLS tunnel.</t>

</section>
</section>
<section anchor="pki-certificate-considerations" title="PKI Certificate Considerations">

<t>There are multiple noteworthy PKI certificate handling considerations. These include:</t>

<t><list style="symbols">
  <t>PKI CA handling when establishing the TEAP tunnel</t>
  <t>PKI CA handling establishing trust using BRSKI</t>
  <t>IDevID and LDevID expiration times</t>
  <t>Specifying LDevID Subject and Subject Alternative Names</t>
  <t>PKCS#10 retry handling</t>
</list></t>

<t>These are described in more detail here.</t>

<section anchor="teap-tunnel-establishment" title="TEAP Tunnel Establishment">

<t>Because this method establishes a client identity, if the peer has not
been previously bootstrapped, or otherwise cannot successfully
authenticate, it will use a generic identity string of teap-bootstrap@TBD1
as its network access identifier (NAI).</t>

<t>BRSKI section 5.3 outlines the policy decisions a Registrar may make when deciding whether to accept connections from clients. Similarly, the TEAP server operator may configure a set of trusted CAs for validating incoming TLS connections from clients. The operator may want to ‘allow any device from a specific vendor’, or from a set of vendors, to access the network. Network operators may do this by restricting network access to clients that have a certificate signed by one of a small set of trusted manufacturer/supplier CAs.</t>

<t>When the client sends its ClientHello to initiate TLS tunnel establishment, it is possible for the TEAP server to restrict the certificates that the client can use for tunnel establishment by including a list of CA distinguished names in the certificate_authorities field in the CertificateRequest message. The client should only continue with the handshake if it has a certificate signed by one of the indicated CAs.</t>

<t>In practice, network operators will likely want to onboard devices from a large number of device manufacturers, with each manufacturer using a different root CA when issuing IDevIDs. If the number of different manufacturer root CAs is large, this could result in very large TLS handshake messages. Therefore, the TEAP server may send a CertificateRequest message and not specify any certificate_authorities, thus allowing the client present a certificate signed by any authority in its Certificate message.</t>

<t>If the client has both an IDevID and an LDevID, the client should present the LDevID in preference to its IDevID, if allowed by server policy.</t>

<t>Once the client has sent its TLS Finished message, the TEAP server can make a policy decision, based on the CA used to sign the client’s certificate, on whether to establish the outer TLS tunnel or not.</t>

<t>The TEAP server may delegate policy decisions to the MASA or CA function. For example, the TEAP server may declare EAP success and grant network access if the client presents a valid LDevID signed by a trusted domain CA. However, if the client presents an IDevID signed by a trusted manufacturer CA, the TEAP server may establish the TLS tunnel but not declare EAP success and grant network access until the client successfully completes a BRSKI Voucher exchange and PKCS#10/PKCS#7 exchange inside that tunnel.</t>

<t>It is recommended that the client validate the certificate presented
by the server in the server’s Certificate message, but this may not be
possible for clients that have not yet provisioned appropriate trust
anchors. If the client is in the provisioning phase and
has not yet completed a BRSKI flow, it will not have trust anchors
installed yet, and thus will not be able to validate the server’s
certificate. The client must however note the certificate presented by
the server for (i) inclusion in the BRSKI-RequestVoucher TLV and for
(ii) validation once the client has discovered the local domain trust
anchors.</t>

<t>If the client does not present a suitable certificate to the server, the server MUST terminate the connection and fail the EAP request. If the TEAP server is unable to validate the client’s certificate using its implicit or explicit trust anchor database it MUST fail the EAP request.</t>

<t>On establishment of the outer TLS tunnel, the TEAP server will make a policy decision on next steps. Possible policy decisions include:</t>

<t><list style="symbols">
  <t>Option 1: Server grants client full network access and returns EAP-Success. This will typically happen when the client presents a valid LDevID. Network policy may grant client network access based on IDevID without requiring the device to enroll to obtain an LDevID.</t>
  <t>Option 2: Server requires that client perform a full BRSKI flow, and then enroll to get an LDevID. This will typically happen when the client presents a valid IDevID and network policy requires all clients to have LDevIDs. The server sends a Request-Action TLV that includes a BRSKI-RequestVoucher TLV to the client to instruct it to start the BRSKI flow.</t>
  <t>Option 3: Server requires that the client reenroll to obtain a new LDevID. This could happen when the client presents a valid LDevID that is very close to expiration time, or the server’s policy requires an LDevID update. The server sends an Action-Request TLV including a PKCS#10 TLV to the client to instruct it to reenroll.</t>
</list></t>

</section>
<section anchor="brski-trust-establishment" title="BRSKI Trust Establishment">

<t>If the server requires that client perform a full BRSKI flow, it sends a Request-Action TLV that includes a zero byte length BRSKI-RequestVoucher TLV to the client. The client sends a new BRSKI-RequestVoucher TLV to the server, which contains all data specified in <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.2. The client includes the server certificate it received in the server’s Certificate message during outer TLS tunnel establishment in the proximity-registrar-cert field. The client signs the request using its IDevID.</t>

<t>The server includes all additional information as required by <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.4 and signs the request prior to forwarding to the MASA.</t>

<t>The MASA responds as per <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.5. The response may indicate failure and the server should react accordingly to failures by sending a failure response to the client, and failing the TEAP method.</t>

<t>If the MASA replies with a signed voucher and a successful result, the server then forwards this response to the client in a BRSKI-Voucher TLV.</t>

<t>When the client receives the signed voucher, it validates the signature using its built in trust anchor list, and extracts the pinned-domain-cert field. The client must use the CA included in the pinned-domain-cert to validate the certificate that was presented by the server when establishing the outer TLS tunnel. If this certificate validation fails, the client must fail the TEAP request and not connect to the network.</t>

<t>[TBD- based on client responses, the registrar sends a status update
to the MASA]</t>

</section>
<section anchor="certificate-expiration-times" title="Certificate Expiration Times">

<t><xref target="IEEE8021AR"></xref> section 7.2.7.2 states:</t>

<t><list style='empty'>
  <t>notAfter: The latest time a DevID is expected to be used. Devices possessing an IDevID are expected to operate indefinitely into the future and should use the value 99991231235959Z. Solutions verifying an IDevID are expected to accept this value indefinitely.</t>
</list></t>

<t>TEAP servers SHOULD follow the 802.1AR standard when validating IDevIDs.</t>

<t>TEAP servers SHOULD reject LDevIDs with expired certificates and SHOULD NOT allow clients to connect with recently expired LDevIDs. If a client presents a recently expired LDevID it SHOULD be forced to authenticate using its IDevID and then reenroll to obtain a valid LDevID.</t>

</section>
<section anchor="ldevid-subject-and-subject-alternative-names" title="LDevID Subject and Subject Alternative Names">

<t>BRSKI section 5.9.2 specifies that the pledge MUST send a CSR Attributes request to the registrar. The registrar MAY use this mechanism to instruct the pledge about the identities it should include in the CSR request it sends as part of enrollment. The registrar may use this mechanism to tell the pledge what Subject or Subject Alternative Name identity information to include in its CSR request. This can be useful if the Subject must have a specific value in order to complete enrollment with the CA.</t>

</section>
<section anchor="pkcs10-retry-handling" title="PKCS#10 Retry Handling">

<t>They will be scenarios where the TEAP server is willing to handle a PKCS#10 request from a client and issue a certificate via a PKCS#7 response, however, the TEAP server is unable to immediately completely the request and needs to instruct the client to retry later after a specified time interval.</t>

<t>A new Retry-After TLV is defined that the TEAP server uses to specify a retry interval in seconds. New error codes are defined to handle these two alternate retry scenarios.</t>

<t><list style="symbols">
  <t>The TEAP tunnel remains up: The client is instructed to resend the PKCS#10 request after a retry interval but inside the same TEAP tunnel. The TEAP server returns a Retry-After TLV to the client, and returns an Error TLV with a new code in the 1000-1999 range.</t>
  <t>The TEAP tunnel is torn down: The client is instructed to establish a new TEAP connection and TEAP tunnel after a retry interval, and resend the PKCS#10 request indside the new tunnel.  The TEAP server returns a Retry-After TLV to the client, and returns an Error TLV with a new code in the 2000-2999 range.</t>
</list></t>

</section>
</section>
<section anchor="peer-identity" title="Peer Identity">

<t>EAP <xref target="RFC3748"/> recommends that “the Identity Response be used primarily for routing purposes and selecting which EAP method to use”. NAI <xref target="RFC7542"/> recommends ommitting the username part of an NAI in order to support username privacy, where appropriate.</t>

<t>A device that has not been bootstrapped at all SHOULD send an identity of
teap-bootstrap@TBD1.  Otherwise, a device SHOULD send its configured NAI.</t>

<t>The TEAP server may specify an NAI that it wishes the device to use. For example, the server may want a bootstrapped device to use an NAI of “abc123@example.com”, or simply an NAI of “@example.com”. This could be desirable in order to facilitate roaming scenarios. The server can do this by sending the device an NAI TLV inside the TEAP tunnel.</t>

<t>If the server specifies an NAI TLV, and the device handles the TLV, the device MAY use the specified NAI in all subsequent EAP authentication flows. If the device is not willing to handle the NAI TLV, it MUST reply with an Error TLV.</t>

<t>Authentication servers implementing this specification MAY reply with
an Error TLV to any unrecognized NAI, or MAY attempt to bootstrap the
device, regardless of the NAI.  A device receving an Error from the
server MAY attempt a new session without the NAI in order to
bootstrap.</t>

</section>
<section anchor="channel-and-crypto-binding" title="Channel and Crypto Binding">

<t>As the TEAP BRSKI flow does not define or require an inner EAP method, there is no explicit need for exchange of Channel-Binding TLVs between the device and the TEAP server.</t>

<t>The TEAP BRSKI TLVs are expected to occur at the beginning of the TEAP Phase 2 and MUST occur before the final Crypto-Binding TLV.  This draft does not exclude the possibility of having other EAP methods occur following the TEAP BRSKI TLVs and as such, the Crypto-Binding TLV process rules as defined in <xref target="RFC7170"/> apply.</t>

</section>
<section anchor="protocol-flows" title="Protocol Flows">

<t>This section outlines protocol flows that map to the three server policy
options described in section <xref target="teap-tunnel-establishment"/>. The
protocol flows illustrate a TLS1.2 exchange. Pertinent notes are
outlined in the protocol flows.</t>

<section anchor="teap-server-grants-access" title="TEAP Server Grants Access">

<t>In this flow, the server grants access as server policy allows the client to access the network based on the identity certificate that the client presented. This means that either (i) the client has previously completed BRSKI and has presented a valid LDevID or (ii) the client presents an IDevID and network policy allows access based purely on IDevID.</t>

<figure title="TEAP Server Grants Access" anchor="flow-1"><artwork><![CDATA[
      ,------.             ,----------.
      |Client|             |TEAPServer|
      `--+---'             `----+-----'
         |     EAP-Request/     |      
         |     Identity         |      
         | <---------------------      
         |                      |      
         |     EAP-Response/    |      
         |     Type=Identity    |      
         | --------------------->      
         |                      |      
         |   EAP-Request/       |      
         |   Type=TEAP,         |      
         |   TEAP Start,        |      
         |   Authority-ID TLV   |      
         | <---------------------      
         |                      |      
         |   EAP-Response/      |      
         |   Type=TEAP,         |      
         |   TLS(ClientHello)   |      
         | --------------------->      
         |                      |      
         |  EAP-Request/        |      
  ,---!. |  Type=TEAP,          |      
  |(1)|_\|  TLS(ServerHello,    |      
  |(2)  ||  ServerKeyExchange,  |      
  `-----'|  ServerHelloDone)    |      
         | <---------------------      
         |                      |      
         |  EAP-Response/       |      
         |  Type=TEAP,          |      
  ,---!. |  ClientKeyExchange,  |      
  |(3)|_\|  CertificateVerify,  |      
  `-----'|  ChangeCipherSpec,   |      
         |  Finished)           |      
         | --------------------->      
         |                      |      
         | EAP-Request/         |      
         | Type=TEAP,           |      
         | TLS(ChangeCipherSpec,|      
         | Finished),           |      
         | {Crypto-Binding TLV, |      
         | Result TLV=Success}  |      
         | <---------------------      
         |                      |      
         | EAP-Response/        |      
         | Type=TEAP,           |      
         | {Crypto-Binding TLV, |      
         | Result TLV=Success}  |      
         | --------------------->      
         |                      |      
         |      EAP-Success     |      
         | <---------------------      
      ,--+---.             ,----+-----.
      |Client|             |TEAPServer|
      `------'             `----------'
]]></artwork></figure>

<t>Notes:</t>

<t>(1) If the client has completed the BRSKI flow and has locally significant trust anchors, it must validate the Certificate received from the server. If the client has not yet completed the BRSKI flow, then it provisionally accepts the server Certificate and must validate it later once BRSKI is complete.</t>

<t>(2) The server may include certificate_authorities field in the CertificateRequest message in order to restrict the identity certificates that the device is allowed present.</t>

<t>(3) The device will present its LDevID, if it has one, in preference to its IDevID, if allowed by server policy.</t>

</section>
<section anchor="teap-server-instructs-client-to-perform-brski-flow" title="TEAP Server Instructs Client to Perform BRSKI Flow">

<t>In this two part flow, the server instructs the client to perform a BRSKI flow by exchanging TLVs once the outer TLS tunnel is established.  After that, enrollment takes place.</t>

<t>In the first part of the flow, the MASA is depicted on the right.</t>

<figure title="TEAP Server Instructs Client to Perform BRSKI Flow" anchor="flow-2a"><artwork><![CDATA[
      ,------.                           ,----------.          ,----.
      |Client|                           |TEAPServer|          |MASA|
      `--+---'                           `----+-----'          `-+--'
         |            EAP-Request/            |                  |   
         |            Type=Identity           |                  |   
         | <-----------------------------------                  |   
         |                                    |                  |   
         |            EAP-Response/           |                  |   
         |            Type=Identity           |                  |   
         | ----------------------------------->                  |   
         |                                    |                  |   
         |          EAP-Request/              |                  |   
  ,---!. |          Type=TEAP,                |                  |   
  |(1)|_\|          TEAP Start,               |                  |   
  `-----'|          Authority-ID TLV          |                  |   
         | <-----------------------------------                  |   
         |                                    |                  |   
         |          EAP-Response/             |                  |   
         |          Type=TEAP,                |                  |   
         |          TLS(ClientHello)          |                  |   
         | ----------------------------------->                  |   
         |                                    |                  |   
         |         EAP-Request/               |                  |   
         |         Type=TEAP,                 |                  |   
         |         TLS(ServerHello,           |                  |   
         |         Certificate,               |                  |   
         |         ServerKeyExchange,         |                  |   
         |         CertificateRequest,        |                  |   
         |         ServerHelloDone)           |                  |   
         | <-----------------------------------                  |   
         |                                    |                  |   
         |         EAP-Response/              |                  |   
         |         Type=TEAP,                 |                  |   
         |         TLS(Certificate            |                  |   
         |         ClientKeyExchange,         |                  |   
         |         CertificateVerify,         |                  |   
         |         ChangeCipherSpec,          |                  |   
         |         Finished)                  |                  |   
         | ----------------------------------->                  |   
         |                                    |                  |   
         |        EAP-Request/                |                  |   
         |        Type=TEAP,                  |                  |   
         |        TLS(ChangeCipherSpec,       |                  |   
         |        Finished),                  |                  |   
         |        {Crypto-Binding TLV,        |                  |   
         |        Result TLV=Success}         |                  |   
         | <-----------------------------------                  |   
         |                                    |                  |   
         |        EAP-Response/               |                  |   
         |        ,Type=TEAP,                 |                  |   
         |        {Crypto-Binding TLV,        |                  |   
         |        Result TLV=Success}         |                  |   
         | ----------------------------------->                  |   
         |                                    |                  |   
  ,-------------------------------------------------!.           |   
  |At this stage the outer TLS tunnel is established|_\          |   
  |The following message exchanges are for BRSKI      |          |   
  `---------------------------------------------------'          |   
         |      EAP-Request/                  |                  |   
         |      Type=TEAP,                    |                  |   
         |      {Request-Action TLV:          |                  |   
         |      Status=Failure,               |                  |   
  ,---!. |      Action=Process-TLV,           |                  |   
  |(2)|_\|      TLV=Request-Voucher,          |                  |   
  `-----'|      TLV=Trusted-Server-Root,      |                  |   
         |      TLV=CSR-Attributes,           |                  |   
         |      TLV=PKCS#10}                  |                  |   
         | <-----------------------------------                  |   
         |                                    |                  |   
         |        EAP-Response/               |                  |   
  ,---!. |        Type=TEAP,                  |                  |   
  |(3)|_\|        {Request-Voucher TLV}       |                  |   
  `-----'| ----------------------------------->                  |   
         |                                    |                  |   
         |                                    |  RequestVoucher  |   
         |                                    | ----------------->   
         |                                    |                  |   
         |                                    |      Voucher     |   
         |                                    | <-----------------   
         |                                    |                  |   
         |            EAP-Request/            |                  |   
  ,---!. |            Type=TEAP,              |                  |   
  |(4)|_\|            {Voucher TLV}           |                  |   
  `-----'| <-----------------------------------                  |   
         |                                    |                  |   
         | EAP-Response/                      |                  |   
         | Type=TEAP,{Trusted-Server-Root TLV}|                  |   
         | ----------------------------------->                  |   
         |                                    |                  |   
         |      EAP-Request/                  |                  |   
  ,---!. |      Type=TEAP,                    |                  |   
  |(5)|_\|      {Trusted-Server-Root TLV}     |                  |   
  `-----'| <-----------------------------------                  |   
         |                                    |                  |   
         |   EAP-Response/                    |                  |   
         |   Type=TEAP,{CSR-Attributes TLV}   |                  |   
         | ----------------------------------->                  |   
         |                                    |                  |   
         |        EAP-Request/                |                  |   
         |        Type=TEAP,                  |                  |   
         |        {CSR-Attributes TLV}        |                  |   
         | <-----------------------------------                  |   
      ,--+---.                           ,----+-----.          ,-+--.
      |Client|                           |TEAPServer|          |MASA|
      `------'                           `----------'          `----'
]]></artwork></figure>

<t>The second part of the flow depicts the CA on the right.</t>

<figure title="Enrollment after BRSKI Flow" anchor="flow-2b"><artwork><![CDATA[
     ,------.            ,----------.          ,--.
     |Client|            |TEAPServer|          |CA|
     `--+---'            `----+-----'          `+-'
        |    EAP-Response/    |                 |  
        |    Type=TEAP        |                 |  
        |    {PKCS#10 TLV}    |                 |  
        | -------------------->                 |  
        |                     |                 |  
        |                     |     PKCS#10     |  
        |                     | ---------------->  
        |                     |                 |  
        |                     |      PKCS#7     |  
        |                     | <----------------  
        |                     |                 |  
        | EAP-Request/        |                 |  
        | Type=TEAP,          |                 |  
        | {PKCS#7 TLV,        |                 |  
        | Result TLV=Success} |                 |  
        | <--------------------                 |  
        |                     |                 |  
        | Eap-Response/       |                 |  
        | Type=TEAP           |                 |  
        | {Result TLV=Success}|                 |  
        | -------------------->                 |  
        |                     |                 |  
        |     EAP-Success     |                 |  
        | <--------------------                 |  
     ,--+---.            ,----+-----.          ,+-.
     |Client|            |TEAPServer|          |CA|
     `------'            `----------'          `--'
]]></artwork></figure>

<t>Notes:</t>

<t>(1) If the client has not yet completed the BRSKI flow, then it provisionally accepts the server certificate and must validate it later once BRSKI is complete. The server validates the client certificate using its trust anchor database.</t>

<t>(2) The server instructs the client to start the BRSKI flow by sending a Request-Action TLV that includes a BRSKI-RequestVoucher TLV. The server also instructs the client to request trust anchors, to request CSR Attrites, and to initiate a PKCS certificate enrolment. As outlined in <xref target="RFC7170"/>, the Request-Action TLV is sent after the Crypto-Binding TLV and Result TLV exchange.</t>

<t>(3) The client includes the certificate it received from the server in the RequestVoucher message.</t>

<t>(4) Once the client receives and validates the voucher signed by the MASA, it must verify the certificate it previously received from the server.</t>

<t>(5) As outlined in <xref target="RFC7170"/>, the Trusted-Server-Root TLV is exchanged after the Crypto-Binding TLV exchange, and after the client has used the Voucher to authenticate the TEAP server identity. This is equivalent to section [todo] from <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<t>(6) There is no need for an additional Crypto-Binding TLV exchange as there is no inner EAP method. All BRSKI exchanges are simply TLVs exchanged inside the outer TLS tunnel.</t>

</section>
<section anchor="teap-server-instructs-client-to-reenroll" title="TEAP Server Instructs Client to Reenroll">

<t>In this flow, the server instructs the client to reenroll and get a new LDevID by exchanging TLVs once the outer TLS tunnel is established.</t>

<figure title="TEAP Server Instructs Client to Reenroll" anchor="flow-3"><artwork><![CDATA[
      ,------.                      ,----------.          ,--.
      |Client|                      |TEAPServer|          |CA|
      `--+---'                      `----+-----'          `+-'
         |          EAP-Request/         |                 |  
         |          Identity             |                 |  
         | <------------------------------                 |  
         |                               |                 |  
         |         EAP-Response/         |                 |  
         |         Type=Identity         |                 |  
         | ------------------------------>                 |  
         |                               |                 |  
         |        EAP-Request/           |                 |  
         |        Type=TEAP,             |                 |  
         |        TEAP Start,            |                 |  
         |        Authority-ID TLV       |                 |  
         | <------------------------------                 |  
         |                               |                 |  
         |        EAP-Response/          |                 |  
         |        Type=TEAP,             |                 |  
         |        TLS(ClientHello)       |                 |  
         | ------------------------------>                 |  
         |                               |                 |  
         |       EAP-Request/            |                 |  
         |       Type=TEAP,              |                 |  
         |       TLS(ServerHello,        |                 |  
         |       ServerKeyExchange,      |                 |  
         |       ServerHelloDone)        |                 |  
         | <------------------------------                 |  
         |                               |                 |  
         |       EAP-Response/           |                 |  
         |       Type=TEAP,              |                 |  
         |       ClientKeyExchange,      |                 |  
         |       CertificateVerify,      |                 |  
         |       ChangeCipherSpec,       |                 |  
         |       Finished)               |                 |  
         | ------------------------------>                 |  
         |                               |                 |  
         |     EAP-Request/              |                 |  
         |     Type=TEAP,                |                 |  
         |     TLS(ChangeCipherSpec,     |                 |  
         |     Finished),                |                 |  
         |     {Crypto-Binding TLV,      |                 |  
         |     Result TLV=Success}       |                 |  
         | <------------------------------                 |  
         |                               |                 |  
         |      EAP-Response/            |                 |  
         |      Type=TEAP,               |                 |  
         |      {Crypto-Binding TLV,     |                 |  
         |      Result TLV=Success}      |                 |  
         | ------------------------------>                 |  
         |                               |                 |  
         | EAP-Request/                  |                 |  
         | Type=TEAP,{Request-Action TLV:|                 |  
  ,---!. | Status=Failure,               |                 |  
  |(1)|_\| Action=Process-TLV,           |                 |  
  `-----'| TLV=PKCS#10}                  |                 |  
         | <------------------------------                 |  
         |                               |                 |  
         |         EAP-Response/         |                 |  
         |         Type=TEAP             |                 |  
         |         {PKCS#10 TLV}         |                 |  
         | ------------------------------>                 |  
         |                               |                 |  
         |                               |     PKCS#10     |  
         |                               | ---------------->  
         |                               |                 |  
         |                               |      PKCS#7     |  
         |                               | <----------------  
         |                               |                 |  
         |      EAP-Request/             |                 |  
         |      Type=TEAP,               |                 |  
         |      {PKCS#7 TLV,             |                 |  
         |      Result TLV=Success}      |                 |  
         | <------------------------------                 |  
         |                               |                 |  
         |      Eap-Response/            |                 |  
         |      Type=TEAP                |                 |  
         |      {Result TLV=Success}     |                 |  
         | ------------------------------>                 |  
         |                               |                 |  
         |          EAP-Success          |                 |  
         | <------------------------------                 |  
         |                               |                 |  
         |          EAP-Success          |                 |  
         | <------------------------------                 |  
      ,--+---.                      ,----+-----.          ,+-.
      |Client|                      |TEAPServer|          |CA|
      `------'                      `----------'          `--'
]]></artwork></figure>

<t>(1) The server instructs the client to reenroll by sending a Request-Action TLV that includes a PKCS#10 TLV.</t>

</section>
<section anchor="out-of-band-reenroll" title="Out of Band Reenroll">

<t>This section shows how the device does a reenroll to refresh its LDEvID directly against the registrar outside the context of the TEAP tunnel.</t>

</section>
</section>
<section anchor="teap-tlv-formats" title="TEAP TLV Formats">

<section anchor="new-tlvs" title="New TLVs">

<t>This document defines 5 new TEAP TLVs. The following table indicates whether
the TLVs can be included in Request messages from TEAP server to
device, or Response messages from device to TEAP server.</t>

<figure><artwork><![CDATA[
+------------------------+----------+
| TLV                    | Message  |
+------------------------+----------+
| BRSKI-VoucherRequest   | Response |
| BRSKI-Voucher          | Request  |
| CSR-Attributes         | Response |
| Retry-After            | Response |
| NAI-Identity           | Request  |
+------------------------+----------+

]]></artwork></figure>

<t>These new TLVs are detailed in this section.</t>

<section anchor="brski-requestvoucher-tlv" title="BRSKI-RequestVoucher TLV">

<t>This TLV is used by the server as part of a Request-Action TLV to
request from the peer that it initiate a voucher request.  When used
in this fashion, the length of this TLV will be set to zero. The Status field of the Request-Action TLV MUST be set to Failure.</t>

<t>It is also used by the peer to initiate the voucher request.  When
used in this fashion, the length of the TLV will be set to that of the
voucher request, as encoded and described in Section 3.3 in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD1-VoucherRequest   |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                              Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>The M and R bits are always expected to be set to 0.</t>

<t>The server is expected to forward the voucher request to the MASA, and
then return a voucher in a BRSKI-Voucher TLV as described below.  If
it is unable to do so, it returns an TEAP Error TLV with one of
the defined errors or the following:</t>

<figure><artwork><![CDATA[
TBD2-MASA-Notavailable  MASA unavailable
TBD3-MASA-Refused       MASA refuses to sign the voucher

]]></artwork></figure>

<t>The peer terminates the TEAP connection, but may retry at some later
point.  The backoff mechanism for such retries should be appropriate
for the device.  Retries MUST occur no more frequently than once
every two (TBD) minutes.</t>

</section>
<section anchor="brski-voucher-tlv" title="BRSKI-Voucher TLV">

<t>This TLV is transmitted from the server to the peer.  It contains a
signed voucher, as describe in <xref target="RFC8366"/>.</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD4-Voucher          |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                              Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>Upon receiving this TLV the peer will validate the signature of the
voucher, using its pre-installed manufacturer trust anchor (LDevID).
It MUST also validate the certificate used by the server to establish
the TLS connection.</t>

<t>If successful, it installs the new trust anchor contained in the
voucher.</t>

<t>Otherwise, the peer transmits an TEAP error TLV with one of the
following error messages:</t>

<figure><artwork><![CDATA[
TBD5-Invalid-Signature  The signature on the voucher is invalid
TBD6-Invalid-Voucher    The form or content of the voucher is invalid
TBD7-Invalid-TLS-Signer The certificate used for the TLS connection
                        could not be validated.

]]></artwork></figure>

</section>
<section anchor="csr-attributes-tlv" title="CSR-Attributes TLV">

<t>The server SHALL transmit this TLV to the peer, either along with the
BRSKI-Voucher TLV or at any time earlier in a communication.  The peer
shall include attributes required by the server in any following CSR.
The value of this TLV is the base64 encoding described in Section
4.5.2 of <xref target="RFC7030"/>.</t>

<t>The TEAP server MAY use this TLV to specify the subject identity information to include in Subject or Subjecet Alternate Name fields in any following CSR.</t>

<figure><artwork><![CDATA[
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD8-CSR-Attributes |         length                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>Again, the M and R values are set to 0.  In the case where the client
is unable to provide the requested attributes, an TEAP-Error is
returned as follows:</t>

<t>TBD9-CSR-Attribute-Fail Unable to supply the requested attributes.</t>

</section>
<section anchor="retry-after-tlv" title="Retry-After TLV">

<t>The server MUST transmit this TLV to the peer when repling to a PKCS#10 TLV request from the peer where the server is willing to fulfill the request and issue a certificate via a PKCS#7 response, but is unable to fulfill the request immediately. This TLV is used to tell the peer the mimimum lenght of time it MUST wait before resending the PKCS#10 request. The value of this TLV is the time in seconds that the peer MUST wait before resending the PKCS#10 request. The peer MUST resend the exact same PKCS#10 request.</t>

<figure><artwork><![CDATA[
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD10-Retry-After   |         length                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>Again, the M and R values are set to 0.</t>

</section>
<section anchor="nai-tlv" title="NAI TLV">

<t>The server may use this TLV to provision a realm-specific NAI on the device.</t>

<figure><artwork><![CDATA[
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD10-NAI           |         length                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>Again, the M and R values are set to 0.</t>

</section>
</section>
<section anchor="existing-teap-tlv-specifications" title="Existing TEAP TLV Specifications">

<t>This section documents allowed usage of existing TEAP TLVs. The definition of the TLV is not changed, however clarifications on allowed values for the TLV fields is documented.</t>

<section anchor="pkcs10-tlv" title="PKCS#10 TLV">

<t><xref target="RFC7170"/> defines the PKCS#10 TLV as follows:</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R|         TLV Type          |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           PKCS#10 Data...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-

]]></artwork></figure>

<t><xref target="RFC7170"/> does not explicitly allow a Length value of zero.</t>

<t>A Length value of zero is allowed for this TLV when the TEAP server sends a Request-Action TLV with a child PKCS#10 TLV to the client. In this scenario, there is no PKCS#10 Data included in the TLV. Clients MUST NOT send a zero length PKCS#10 TLV to the server.</t>

</section>
</section>
<section anchor="tlv-rules" title="TLV Rules">

<t>BRSKI TLVs can only be transported inside the TLS tunnel. The following table provides a guide to which TLVs may be encapsulated in which kind of packets, and in what quantity. The messages are as follows: Request is a TEAP Request, Response is a TEAP Response, Success is a message containing a successful Result TLV, and Failure is a message containing a failed Result TLV.</t>

<t>The following define the meaning of the table entries in the sections below:</t>

<t>0   This TLV MUST NOT be present in the message.</t>

<t>0+  Zero or more instances of this TLV MAY be present in the
    message.</t>

<t>0-1 Zero or one instance of this TLV MAY be present in the message.</t>

<t>1   Exactly one instance of this TLV MUST be present in the
    message.</t>

<t>Request Response Success Failure TLVs
0       0-1      0       0       BRSKI-VoucherRequest
0-1     0        0       0       BRSKI-Voucher
0       0-1      0       0       CSR-Attributes</t>

</section>
</section>
<section anchor="fragmentation" title="Fragmentation">

<t>TEAP is expected to provide fragmentation support. Thus EAP-TEAP-BRSKI
does not specifically provide any, as it is only expected to be used
as an inner method to TEAP.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>The IANA is requested to add entries into the following tables:</t>

<t>The following new TEAP TLVs are defined:</t>

<figure><artwork><![CDATA[
TBD1-VoucherRequest   Described in this document.
TBD4-Voucher          Described in this document.
TBD8-CSR-Attributes   Described in this document.
TBD10-Retry-After Described in this document.

]]></artwork></figure>

<t>The following TEAP Error Codes are defined, with their meanings
listed here and in previous sections:</t>

<figure><artwork><![CDATA[
TBD2-MASA-Notavailable  MASA unavailable
TBD3-MASA-Refused       MASA refuses to sign the voucher
TBD5-Invalid-Signature  The signature on the voucher is invalid
TBD6-Invalid-Voucher    The form or content of the voucher is invalid
TBD7-Invalid-TLS-Signer The certificate used for the TLS connection
                        could not be validated.
TBD9-CSR-Attribute-Fail Unable to supply the requested attributes.
TBD11-Retry-PKCS#10     Retry PKCS#10 Request (1000 range code)
TBD12-Retry-PKCS#10     Retry PKCS#10 Request (2000 range code)
TBD13-NAI-Rejected      The device will not use the indicated
                        NAI (1000 range code)

]]></artwork></figure>

<t>[[ TODO: is there a registry of NAIs that map to TEAP methods? e.g. @eap-teap.net is reserved to indicate the peer wants to use TEAP method ]]</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>BRSKI <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> provides a zero touch
  way for devices to enroll in a certification authority (CA). It assumes
  the device has IP connectivity. For networks that will not grant
  IP connectivitiy before authenticating (with a local credential)
  this poses a Catch-22– can’t get on the network without a credential
  and can’t get a credential without getting on the network.</t>

<t>This protocol provides a way for BRSKI to be in an EAP method
  which allows the BRSKI conversation to happen as part of EAP
  authentication and prior to obtaining IP connectivity.</t>

<t>The  security considerations of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>
  apply to this protocol. Running BRSKI through EAP introduces some
  additional areas of concern though.</t>

<section anchor="issues-with-provisionally-authenticated-teap" title="Issues with Provisionally Authenticated TEAP">

<t>This protocol establishes an unauthenticated TLS connection and passes
  data through it. Provided that the only messages passed in this state
  are self-protected BRSKI messages this does not present a problem.
  Passing any other messages or TLVs prior to authentication of the
  provisional TLS connection could potentially introduce security issues.</t>

<t>While the TLS connection is unauthenticated, it must still be validated
  to the fullest extent possible. It is critical that the device and the
  TEAP server perform all steps in TLS– checking the validity of the
  presented certificate, validating the signature using the public key
  of the certificate, etc– except ensuring the trust of the presented
  certificate.</t>

</section>
<section anchor="attack-against-discovery" title="Attack Against Discovery">

<t>The device discovery technique specified in this protocol is the standard
  EAP server discovery process. Since it is trivial to set up an 802.11
  wireless access point and advertise any network, an attacker can impersonate
  a legitimate wireless network and attract unprovisioned pledges. Given that
  an unprovisioned device will not know the legitimate network to connect
  to, it will probably attempt the first network it finds, making the attack
  that much easier. This allows for a “rogue registrar” to provision and
  take control of the device.</t>

<t>If the MASA verifies ownership prior to issuance of a voucher, this attack
  can be thwarted. But if the MASA is in reduced security mode and does not
  verify ownership this attack cannot be prevented. Registrars SHOULD use the
  audit log of a MASA when deploying newly purchased equipment in order to
  mitigate this attack.</t>

<t>Another way to mitigate this attack is through normal “rogue AP” detection
  and prevention.</t>

</section>
<section anchor="teap-server-as-registration-authority" title="TEAP Server as Registration Authority">

<t>If the TEAP server is logically separate from the Certification Authority (CA)
  (see <xref target="arch"/>) it will be acting as a Registration Authority (RA) when it
  obtains the PKCS#10 TLV and replies with a PKCS#7 TLV (see <xref target="RFC7170"/>, Sections
  4.2.16 and 4.2.17, respectively). The assurance a RA makes to a CA is that the
  public key in the presented CSR is bound to an authenticated identity in way
  that will assure non-repudiation.</t>

<t>To make such an assurance, the TEAP server MUST authenticate the provisional
  TLS connection with the device by validating the voucher response received
  from the MASA. In addition, it is RECOMMENDED that the TEAP server indicate
  that proof-of-possession (see <xref target="RFC7170"/>, Section 3.8.2) is required by
  including the challengePassword OID in the CSR Attributes TLV.</t>

</section>
<section anchor="trust-of-registrar" title="Trust of Registrar">

<t>The device accepts a trusted server (CA) certificate and installs it
  in its trust anchor database during step 5 (see <xref target="bint"/>). This can
  happen only after the provisional TLS connection has been authenticated
  using the voucher and the Crypto-Binding TLV has been validated.</t>

</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>The authors would like to thank Brian Weis for his assistance, and
Alan Dakok for improving language consistency.  In addition, with
ruthlessly “borrowed” the concept around NAI handling from Tuomas Aura
and Mohit Sethi.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

<reference anchor="IEEE8021AR" >
  <front>
    <title>Secure Device Identity</title>
    <author >
      <organization>Institute for Electrical and Electronics Engineers</organization>
    </author>
    <date year="1998"/>
  </front>
</reference>
<reference anchor="IEEE8021X" >
  <front>
    <title>IEEE Standard for Local and metropolitan area networks--Port-Based Network Access Control</title>
    <author >
      <organization>Institute for Electrical and Electronics Engineers</organization>
    </author>
    <date year="2010"/>
  </front>
</reference>




<reference anchor="I-D.ietf-anima-bootstrapping-keyinfra">
<front>
<title>Bootstrapping Remote Secure Key Infrastructures (BRSKI)</title>

<author initials='M' surname='Pritikin' fullname='Max Pritikin'>
    <organization />
</author>

<author initials='M' surname='Richardson' fullname='Michael Richardson'>
    <organization />
</author>

<author initials='T' surname='Eckert' fullname='Toerless Eckert'>
    <organization />
</author>

<author initials='M' surname='Behringer' fullname='Michael Behringer'>
    <organization />
</author>

<author initials='K' surname='Watsen' fullname='Kent Watsen'>
    <organization />
</author>

<date month='October' day='28' year='2019' />

<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur using a routable address and a cloud service, or using only link-local connectivity, or on limited/ disconnected networks.  Support for deployment models with less stringent security requirements is included.  Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-anima-bootstrapping-keyinfra-29' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-anima-bootstrapping-keyinfra-29.txt' />
</reference>



<reference  anchor="RFC3748" target='https://www.rfc-editor.org/info/rfc3748'>
<front>
<title>Extensible Authentication Protocol (EAP)</title>
<author initials='B.' surname='Aboba' fullname='B. Aboba'><organization /></author>
<author initials='L.' surname='Blunk' fullname='L. Blunk'><organization /></author>
<author initials='J.' surname='Vollbrecht' fullname='J. Vollbrecht'><organization /></author>
<author initials='J.' surname='Carlson' fullname='J. Carlson'><organization /></author>
<author initials='H.' surname='Levkowetz' fullname='H. Levkowetz' role='editor'><organization /></author>
<date year='2004' month='June' />
<abstract><t>This document defines the Extensible Authentication Protocol (EAP), an authentication framework which supports multiple authentication methods.  EAP typically runs directly over data link layers such as Point-to-Point Protocol (PPP) or IEEE 802, without requiring IP.  EAP provides its own support for duplicate elimination and retransmission, but is reliant on lower layer ordering guarantees.  Fragmentation is not supported within EAP itself; however, individual EAP methods may support this.  This document obsoletes RFC 2284.  A summary of the changes between this document and RFC 2284 is available in Appendix A.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3748'/>
<seriesInfo name='DOI' value='10.17487/RFC3748'/>
</reference>



<reference  anchor="RFC7170" target='https://www.rfc-editor.org/info/rfc7170'>
<front>
<title>Tunnel Extensible Authentication Protocol (TEAP) Version 1</title>
<author initials='H.' surname='Zhou' fullname='H. Zhou'><organization /></author>
<author initials='N.' surname='Cam-Winget' fullname='N. Cam-Winget'><organization /></author>
<author initials='J.' surname='Salowey' fullname='J. Salowey'><organization /></author>
<author initials='S.' surname='Hanna' fullname='S. Hanna'><organization /></author>
<date year='2014' month='May' />
<abstract><t>This document defines the Tunnel Extensible Authentication Protocol (TEAP) version 1.  TEAP is a tunnel-based EAP method that enables secure communication between a peer and a server by using the Transport Layer Security (TLS) protocol to establish a mutually authenticated tunnel.  Within the tunnel, TLV objects are used to convey authentication-related data between the EAP peer and the EAP server.</t></abstract>
</front>
<seriesInfo name='RFC' value='7170'/>
<seriesInfo name='DOI' value='10.17487/RFC7170'/>
</reference>



<reference  anchor="RFC7030" target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author initials='M.' surname='Pritikin' fullname='M. Pritikin' role='editor'><organization /></author>
<author initials='P.' surname='Yee' fullname='P. Yee' role='editor'><organization /></author>
<author initials='D.' surname='Harkins' fullname='D. Harkins' role='editor'><organization /></author>
<date year='2013' month='October' />
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference  anchor="RFC8366" target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author initials='K.' surname='Watsen' fullname='K. Watsen'><organization /></author>
<author initials='M.' surname='Richardson' fullname='M. Richardson'><organization /></author>
<author initials='M.' surname='Pritikin' fullname='M. Pritikin'><organization /></author>
<author initials='T.' surname='Eckert' fullname='T. Eckert'><organization /></author>
<date year='2018' month='May' />
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7542" target='https://www.rfc-editor.org/info/rfc7542'>
<front>
<title>The Network Access Identifier</title>
<author initials='A.' surname='DeKok' fullname='A. DeKok'><organization /></author>
<date year='2015' month='May' />
<abstract><t>In order to provide inter-domain authentication services, it is necessary to have a standardized method that domains can use to identify each other's users.  This document defines the syntax for the Network Access Identifier (NAI), the user identifier submitted by the client prior to accessing resources.  This document is a revised version of RFC 4282.  It addresses issues with international character sets and makes a number of other corrections to RFC 4282.</t></abstract>
</front>
<seriesInfo name='RFC' value='7542'/>
<seriesInfo name='DOI' value='10.17487/RFC7542'/>
</reference>




    </references>


<section anchor="changes-from-earlier-versions" title="Changes from Earlier Versions">

<t>Draft -03:
  * Merge EAP server and Registrar
  * Security considerations
  * References improvements
  * Add Dan Harkins as co-author</t>

<t>Draft -02:
  * Flow corrections</t>

<t>Draft -01:
  * Add packet descriptions, IANA considerations, smooth out language.</t>

<t>Draft -00:</t>

<t><list style="symbols">
  <t>Initial revision</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
ksJSir8GVByvMvZxROoTurMYOHLvT9y0eIFhOmRNsw/xF+y2t86OFsT21Ngx
SUv9iy7EpFxfTavaGqzdgYYmPYsCmsUqpdKzKdcrcmLQRrzeeKYUR++scXdc
5fic9xWzzc++OhwGpcifF5931bwa7Dgu3lkG04UFWKLo76efSchoDnYUBOQZ
hT6SH0ON0Z89qT0CBgr/x9ehK1A1/4hL3z+vsewOnhumBsGeUMjCCnxkHOSv
dZed5erSSKLv7GnFelCcFeG0odJGo9hRSF5FjNtllF6BBThoV5IKQNyI6doh
DZXTNJ/D5/7uHvz34ecPP//vkTkt5iv2r3PG2eaXS0yAjpwn1MtAdqZvAUuQ
WQrC1S7Qun+ibicininvv/M2ds9UWooyicInjk08MExt0J5niknxmOcvztj/
pfVGfY2a6D3HiLGb6qlyeaYdelbPAOQN8tIx2f0TAZpO2WjKq6BSd+qCkfVA
yHqj6FsrRPQ54qwv4ejV0SUVMovSDDDdTeWoOSIVPGsUegk092z//xsVjZPo
eKTnqRfyzXNykk9dvRlSzRh3XWqbc+LDktw6gv5WUVo12pghiaS5KpSD3avy
V0tkRVcIEgdQYNp9sA3BPK1LqHQ85wYOa3bavC8dgiJNvHnuNewc4dBQCFgJ
pYW8GF9lQeXN+DDFwT5jitO6Tyjw+o0OvK7ZRINlVIDKKWgprpZmhzsBHxXF
RRK9UhXU5eOQgIQqN+ey7SPJQJls4stzbNvXF2q7AyJfhrrl6Pc/d5UilASx
1uVFKnwL5gaHoTlzMz2n/1XqNPFrKnYBQKeykqiuEwSHxN3Ztgkl1DwJ6XVz
ykgRwg7yVjex3J9GdQ9dAlfqLkErJSPk1knJrVQw0cqk/gTJ9vQ+cNG4Syyp
naPwexIp/FWj8gZxN9YLm2froNTYA3o9Vd4EFd3S+R6tVEHnVElb8OzQH/3D
uWldwcAjoXsXwhfu37t3b3gfJJsp0TmMYZY2IKjuZ5lTQu9mUKjC0CFbpuGO
0zN3w8dtoxesIDk98PA1Dmy/Hdx2EW67AW6U6oI5Eb5ceoLLeP36y1B11HvX
RXrcwonc83ghmFVvdy0bDCAs2TTnotllwYnDvkga6SkWa4Vz8gFau+omb03V
FG8BjewfyzIePXywGy8D/n9W+3xkeL7E8LAXCgAIHK25J4bMsVZgeLbMLtPJ
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

-->

</rfc>

