<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-lear-eap-teap-brski-02" category="std">

  <front>
    <title abbrev="BRSKI TEAP EAP">Bootstrapping Key Infrastructure over EAP</title>

    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="O." surname="Friel" fullname="Owen Friel">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 W. Tasman Dr.</street>
          <city>San Jose, CA</city>
          <code>95134</code>
          <country>United States</country>
        </postal>
        <email>ofriel@cisco.com</email>
      </address>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="Nancy Cam-Winget">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 W. Tasman Dr.</street>
          <city>San Jose, CA</city>
          <code>95134</code>
          <country>United States</country>
        </postal>
        <email>ncamwing@cisco.com</email>
      </address>
    </author>

    <date year="2019" month="February" day="22"/>

    
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>In certain environments, in order for a device to establish any layer
three communications, it is necessary for that device to be properly
credentialed.  This is a relatively easy problem to solve when a
device is associated with a human being and has both input and display
functions.  It is less easy when the human, input, and display
functions are not present.  To address this case, this memo specifies
extensions to the Tunnel Extensible Authentication Protocol (TEAP)
method that leverages Bootstrapping Remote Secure Key Infrastructures
(BRSKI) in order to provide a credential to a device at layer two.
The basis of this work is that a manufacturer will introduce the
device and the local deployment through cryptographic means.  In this
sense the same trust model as BRSKI is used.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t><xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> (BRSKI) specifies a means to
provision credentials to be used as credentials to operationally
access networks.  It was designed as a standalone means where some
limited access to an IP network is already available.  This is not
always the case.  For example, IEEE 802.11 networks generally require
authentication prior to any form of address assignment.  While it is
possible to assign an IP address to a device on some form of an open
network, or to accept some sort of default credential to establish
initial IP connectivity, the steps that would then follow might well
require that the device is placed on a new network, requiring reseting
all layer three parameters.</t>

<t>A more  natural approach  in such  cases is to  more tightly  bind the
provisioning  of credentials with  the authentication  mechanism.  One
such way  to do this is  to make use of  the Extensible Authentication
Protocol (EAP)  <xref target="RFC3748"/> and the  Tunnel Extensible Authentication
Protocol  (TEAP)  method  <xref target="RFC7170"/>.    Thus  we  define  new  TEAP
Type-Length-Value  (TLV) objects  that can  be used  to  transport the
BRSKI protocol messages within the context of a TEAP TLS tunnel.</t>

<t><xref target="RFC7170"/> discusses the notion of provisioning peers.  Several
different mechanisms are available.  Section 3.8 of that document
acknowledges the concept of not initially authenticating the outer TLS
session so that provisioning may occur.  In addition, exchange of
multiple TLV messages between client and EAP server permits multiple
provisioning steps.</t>

<section anchor="terminology" title="Terminology">

<t>The reader is presumed to be familiar with EAP terminology as stated
in <xref target="RFC3748"/>.  In addition, the following terms are commonly used in
this document.</t>

<t><list style="symbols">
  <t>BRSKI: Bootstrapping Remote Secure Key Infrastructures, as defined in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.  The term is also used
to refer to the flow described in that document.</t>
  <t>EST: Enrollment over Secure Transport, as defined in <xref target="RFC7030"/>.</t>
  <t>Voucher: a signed JSON object as defined in <xref target="RFC8366"/>.</t>
</list></t>

</section>
</section>
<section anchor="teap-brski-architecture" title="TEAP BRSKI Architecture">

<t>The TEAP BRSKI architecture is illustrated in
<xref target="brski-architecture"/>. The device talks to the TEAP server via the
Authenticator as per any normal EAP exchange. There is no need for an
inner EAP method server, and there is no explicit EAP method type
defined for BRSKI.</t>

<t>The architecture illustrated shows the TEAP server and registrar
function as being two logically separate entities, however the BRSKI
registrar functionality may be integrated into the TEAP server. The
device is not explicitly aware of where the registrar functionality is
deployed when executing BRSKI inside a TEAP tunnel. Note that the
device may connect directly to the registrar for the purposes of
certificate reenrollment, but this happens outside the context to
801.1X and TEAP authentication.</t>

<t>The registrar in turn communicates with the BRSKI MASA service for the
purposes of getting signed vouchers. [[TODO: I guess we should
mention TEAP server talking to vendor default registrar in the
cloud]]</t>

<t>The registrar also comunicates with a Certificate Authority in order
to issue LDevIDs. The architecture shows the registrar and CA as being
two logically separate entities, however the CA may be integrated into
the registrar. The device is not explicitly aware of whether the CA
and registrar functions are integrated.</t>

<figure><artwork><![CDATA[
+--------+     +---------+     +--------+     +---------+     +------+
|        |     |         |     |        |     |         |<--->| MASA |
|        |     | Authen- |     |  TEAP  |     | BRSKI   |     +------+
| Device |<--->| ticator |<--->| server |<--->|Registrar|
|        |     |         |     |        |     |         |     +------+
|        |     |         |     |        |     |         |<--->|  CA  |
+--------+     +---------+     +--------+     +---------+     +------+

]]></artwork></figure>

</section>
<section title="BRSKI Bootstrap and Enroll Operation" anchor="brski-architecture">

<t>This section summarises the current BRSKI operation. The BRSKI flow
assumes the device has an IDevID and has a manufacturer installed
trust anchor that can be used to validate the BRSKI voucher. The BRSKI
flow compromises serveral main steps from the perspective of the
device:</t>

<t><list style="symbols">
  <t>Step 1: Device discovers the registrar</t>
  <t>Step 2: Device establishes provisional TLS connection to registrar</t>
  <t>Step 3: Device sends voucher request message and receives signed voucher response</t>
  <t>Step 4: Device validates voucher and validates provisional TLS connection to registrar</t>
  <t>Step 5: Device downloads additional local domain CA information</t>
  <t>Step 6: Device downloads Certificate Signing Reqeust (CSR) attributes</t>
  <t>Step 7: Device does an EST enroll to obtain an LDevID</t>
  <t>Step 8: Device periodically reenrolls via EST to refresh its LDevID</t>
</list></t>

<t>Most of the operational steps require the device, and thus its internal state machine, to automatically complete the next step without being explicitly instructed to do so by the registrar. For example, the registrar does not explicitly tell the device to download additional local domain CA information, or to do an EST enroll to obtain an LDevID.</t>

<section anchor="executing-brski-in-a-teap-tunnel" title="Executing BRSKI in a TEAP Tunnel">

<t>This section outlines how the main BRSKI steps outlined above map to TEAP, and how BRSKI and enrollment can be accomplished inside a TEAP TLS tunnel. The following new TEAP TLVs are introduced:</t>

<t><list style="symbols">
  <t>BRSKI-VoucherRequest</t>
  <t>BRSKI-Voucher</t>
  <t>CSR-Attributes</t>
</list></t>

<t>The following steps outline how the above BRSKI flow maps to TEAP.</t>

<t><list style="symbols">
  <t>Step 1: Device discovers the registrar</t>
</list></t>

<t>When BRSKI is executed in a TEAP tunnel, the device exchanges BRSKI TLVs with the TEAP server. The discovery process for devices is therefore the standard wired or wireless LAN EAP server discovery process. The discovery processes outlined in section 4 of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> are not required for initial discovery of the registrar.</t>

<t><list style="symbols">
  <t>Step 2: Device establishes provisional TLS connection to registrar</t>
</list></t>

<t>The device establishes an outer TEAP tunnel with the TEAP server and
does not validate the server certificate. Similarly, at this
provisioning stage, the server does not validate the certificate of
the device.  The device presents its LDevID as its identity
certificate if it has a valid LDevID, otherwise it presents its
IDevID. Server policy may also be used to control which certificate
the device is allowed present, as described in section
<xref target="pki-certificate-authority-considerations"/>.</t>

<t>If the presented credential is sufficient to grant access, the TEAP server can return an EAP-Success immediately. The device may still send a BRSKI-RequestVoucher TLV in response to the EAP-Success if it does not have, but requires, trust anchors for validating the TEAP server certificate.</t>

<t>If the TEAP server requires that the device execute a BRSKI flow, it sends a Request-Action TLV that includes a BRSKI-VoucherRequest TLV. For example, if the device presented its IDevID but the TEAP server requires an LDevID.</t>

<t>The TEAP server may also require the device to reenroll, for example, if the device presented a valid LDevID that is very closed to expiration. The server may instruct a device to reenroll by sending a Request-Action TLV that includes a zero byte length PKCS#10 TLV.</t>

<t><list style="symbols">
  <t>Step 3: Device sends voucher request message and receives signed voucher response</t>
</list></t>

<t>The device sends a BRSKI-RequestVoucher TLV to the TEAP server. The
TEAP server forwards the RequestVoucher message to the MASA server,
and the MASA server replies with a signed voucher. The TEAP server
sends a BRSKI-Voucher TLV to the device.</t>

<t>If the MASA server does not issue a signed voucher, the TEAP server
sends an EAP-Error TLV with a suitable error code to the device.</t>

<t>For wireless devices in particular, it is important that the MASA
server only return a voucher for devices known to be associated with a
particular registrar.  In this sense, success indicates that the
device is on the correct network, while failure indicates the device
should try to provision itself within wireless networks (e.g, go to
the next SSID).</t>

<t><list style="symbols">
  <t>Step 4: Device validates voucher and validates provisional TLS connection to registrar</t>
</list></t>

<t>The device validates the signed voucher using its manufacturer
installed trust anchor, and uses the CA information in the voucher to
validate the outer TEAP TLS connection to the TEAP server.</t>

<t>If the device fails to validate the voucher, or fails to validate the
outer TEAP TLS connection, then it sends a TEAP-Error TLV indicating
failure to the TEAP server.</t>

<t><list style="symbols">
  <t>Step 5: Device downloads additional local domain CA information</t>
</list></t>

<t>On completion of the BRSKI flow, the device SHOULD send a
Trusted-Server-Root TLV to the TEAP server in order to discover
additional local domain CAs.</t>

<t><list style="symbols">
  <t>Step 6: Device downloads CSR attributes</t>
</list></t>

<t>No later than the completion of step 5, server MUST send a
CSR-Attributes TLV to peer server in order to discover the correct
fields to include when it enrolls to get an LDevID.</t>

<t><list style="symbols">
  <t>Step 7: Device does an EST enroll to obtain an LDevID</t>
</list></t>

<t>When executing the BRSKI flow inside a TEAP tunnel, the device does
not directly leverage EST when doing its initial enroll. Instead, the
device uses the existing TEAP PKCS#10 and PCKS#7 TEAP mechanisms.</t>

<t>Once the BRSKI flow is complete, the device can now send a PKCS#10 TLV
to enroll and request an LDevID. If the TEAP server instructed the
device to start the BRSKI flow via a Request-Action TLV that includes
a BRSKI-RequestVoucher TLV, then the device MUST send a PKCS#10 in
order to start the enroll process. The TEAP server will handle the
PKCS#10 and ultimately return a PKCS#7 including an LDevID to the
device.</t>

<t>If the TEAP server granted the device access on completion of the
outer TEAP TLS tunnel in step 2 without sending a Request-Action TLV,
the device does not have to send a PKCS#10 to enroll.</t>

<t>At this point, the device is said to be provisioned for local network
access, and may authenticate in the future via 802.1X with its newly
acquired credentials.</t>

<t><list style="symbols">
  <t>Step 8: Device periodically reenrolls to refresh its LDevID</t>
</list></t>

<t>When a device’s LDevID is close to expiration, there are two options
for re-enrollment in order to obtain a fresh LDevID. As outlined in
Step 2 above, the TEAP server may instruct the device to reenroll by
sending a Request-Action TLV including a PKCS#10 TLV. If the TEAP
server explicilty instructs the device to reenroll via these TLV
exchange, then the device MUST send a PKCS#10 to reenroll and request
a fresh LDevID.</t>

<t>However, the device SHOULD reenroll if it determines that its LDevID
is close to expiration wihtout waiting for explicit instruction from
the TEAP server. There are two options to do this.</t>

<t>Option 1: The device reenrolls for a new LDevID directly with the EST
CA outside the context of the 802.1X TEAP flow. The device uses the
registrar discovery mechanisms oulined in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> to discover the registrar
and the device sends the EST reenroll messages to the discovered
registrar endpoint. No new TEAP TLVs are defined to facilitate
discover of the registrar or EST endpoints inside the context of the
TEAP tunnel.</t>

<t>Option 2: When the device is performing a periodic 802.1X
authentication using its current LDevID, it reenrolls for a new LDevID
by sending a PKCS#10 TLV inside the TEAP TLS tunnel.</t>

</section>
</section>
<section anchor="pki-certificate-authority-considerations" title="PKI Certificate Authority Considerations">

<t>Careful consideration must be given to PKI certificate authority handling when:</t>

<t><list style="symbols">
  <t>Establishing the TEAP tunnel</t>
  <t>Establishing trust using BRSKI</t>
</list></t>

<t>These are described in more detail here.</t>

<section anchor="teap-tunnel-establishment" title="TEAP Tunnel Establishment">

<t>Because this method establishes a client identity, and for purposes of
partioning of responsibility, the peer uses a generic identity string
of teap-brsk@TBD1 as its network access identifier (NAI).</t>

<t>The client sends its ClientHello to initiate TLS tunnel
establishment. It is possible for the TEAP server to restrict the
certificates that the client can use for tunnel establishment by
including a list of CA distinguished names in the
certificate_authorities field in the CertificateRequest
message. Network operators may want to do this in order to restrict
netwok access to clients that have a certificate signed by one of a
small set of trusted manufacturer/supplier CAs. If the client has both
an IDevID and an LDevID, the client should present the LDevID in
preference to its IDevID if allowed by server policy.</t>

<t>In practice, network operators will likely want to onboard devices from a large number of device manufacturers, with each manufacturer using a different root CA when issuing IDevIDs. If the number of different manufacturer root CAs is large, this could result in very large TLS handshake messages. Operators may prefer to include no CAs in the certificate_authorities field thus allowing devices to present IDevIDs signed by any CA when establishing the TEAP tunnel, and instead enforce policy at LDevID enrollment time.</t>

<t>It is recommended that the client validate the certificate presented
by the server in the server’s Certificate message, but this may not be
possible for clients that have not yet provisioned appropriate trust
anchors. If the client is in the provisioning phase and
has not yet completed a BRSKI flow, it will not have trust anchors
installed yet, and thus will not be able to validate the server’s
certificate. The client must however note the certificate presented by
the server for (i) inclusion in the BRSKI-RequestVoucher TLV and for
(ii) validation once the client has discovered the local domain trust
anchors.</t>

<t>If the client does not present a suitable certificate to the server, the server MUST terminate the connection and fail the EAP request.</t>

<t>On establishment of the outer TLS tunnel, the TEAP server will make a policy decision on next steps. Possible policy decisions include:</t>

<t><list style="symbols">
  <t>Option 1: Server grants client full network access and returns EAP-Success. This will typically happen when the client presents a valid LDevID. Network policy may grant client network access based on IDevID without requiring the device to enroll to obtain an LDevID.</t>
  <t>Option 2: Server requires that client perform a full BRSKI flow, and then enroll to get an LDevID. This will typically happen when the client presents a valid IDevID and network policy requires all clients to have LDevIDs. The server sends a Request-Action TLV that includes a BRSKI-RequestVoucher TLV to the client to instruct it to start the BRSKI flow.</t>
  <t>Option 3: Server requires that the client reenroll to obtain a new LDevID. This could happen when the client presents a valid LDevID that is very close to expiration time, or the server’s policy requires an LDevID update. The server sends an Action-Request TLV including a PKCS#10 TLV to the client to instruct it to reenroll.</t>
</list></t>

</section>
<section anchor="brski-trust-establishment" title="BRSKI Trust Establishment">

<t>If the server requires that client perform a full BRSKI flow, it sends a Request-Action TLV that includes a zero byte length BRSKI-RequestVoucher TLV to the client. The client sends a new BRSKI-RequestVoucher TLV to the server, which contains all data specified in <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.2. The client includes the server certificate it received in the server’s Certificate message during outer TLS tunnel establishment in the proximity-registrar-cert field. The client signs the request using its IDevID.</t>

<t>The server includes all additional information as required by <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.4 and signs the request prior to forwarding to the MASA.</t>

<t>The MASA responds as per <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.5. The response may indicate failure and the server should react accordingly to failures by sending a failure response to the client, and failing the TEAP method.</t>

<t>If the MASA replies with a signed voucher and a successful result, the server then forwards this response to the client in a BRSKI-Voucher TLV.</t>

<t>When the client receives the signed voucher, it validates the signature using its built in trust anchor list, and extracts the pinned-domain-cert field. The client must use the CA included in the pinned-domain-cert to validate the certificate that was presented by the server when establishing the outer TLS tunnel. If this certificate validation fails, the client must fail the TEAP request and not connect to the network.</t>

<t>[TBD- based on client responses, the registrar sends a status update
to the MASA]</t>

</section>
</section>
<section anchor="channel-and-crypto-binding" title="Channel and Crypto Binding">

<t>As the TEAP BRSKI flow does not define or require an inner EAP method, there is no explicit need for exchange of Channel-Binding TLVs between the device and the TEAP server.</t>

<t>The TEAP BRSKI TLVs are expected to occur at the beginning of the TEAP Phase 2 and MUST occur before the final Crypto-Binding TLV.  This draft does not exclude the possibility of having other EAP methods occur following the TEAP BRSKI TLVs and as such, the Crypto-Binding TLV process rules as defined in <xref target="RFC7170"/> apply.</t>

</section>
<section anchor="protocol-flows" title="Protocol Flows">

<t>This section outlines protocol flows that map to the 3 server policy options described in section <xref target="teap-tunnel-establishment"/>. The protocol flows illustrate a TLS1.2 exchange. Pertinent notes are outlined in the protocol flows.</t>

<section anchor="teap-server-grants-access" title="TEAP Server Grants Access">

<t>In this flow, the server grants access as server policy allows the client to access the network based on the identity certificate that the client presented. This means that either (i) the client has previously completed BRSKI and has presented a valid LDevID or (ii) the client presents an IDevID and network policy allows access based purely on IDevID.</t>

<figure title="TEAP Server Grants Access" anchor="flow-1"><artwork><![CDATA[


+--------+             +-------------+     +------+
| Client |             | TEAP-Server |     | MASA |
+--------+             +-------------+     +------+
    |  EAP-Request/           |                |
    |   Type=Identity         |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=Identity         |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
    |   TEAP Start,           |                |
    |   Authority-ID TLV      |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
    |   TLS(ClientHello)      |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
    |   TLS(ServerHello,      |                |
 (1)|   Certificate,          |                |
    |   ServerKeyExchange,    |                |
 (2)|   CertificateRequest,   |                |
    |   ServerHelloDone)      |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
 (3)|   TLS(Certificate,      |                |
    |   ClientKeyExchange,    |                |
    |   CertificateVerify,    |                |
    |   ChangeCipherSpec,     |                |
    |   Finished)             |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
    |   TLS(ChangeCipherSpec, |                |
    |   Finished),            |                |
    |   {Crypto-Binding TLV,  |                |
    |   Result TLV=Success}   |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
    |   {Crypto-Binding TLV,  |                |
    |   Result TLV=Success}   |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Success            |                |
    |<------------------------|                |


]]></artwork></figure>

<t>Notes:</t>

<t>(1) If the client has completed the BRSKI flow and has locally significant trust anchors, it must validate the Certificate received from the server. If the client has not yet completed the BRSKI flow, then it provisionally accepts the server Certificate and must validate it later once BRSKI is complete.</t>

<t>(2) The server may include certificate_authorities field in the CertificateRequest message in order to restrict the identity certificates that the device is allowed present.</t>

<t>(3) The device will present its LDevID, if it has one, in preference to its IDevID, if allowed by server policy.</t>

</section>
<section anchor="teap-server-instructs-client-to-perform-brski-flow" title="TEAP Server Instructs Client to Perform BRSKI Flow">

<t>In this flow, the server instructs the client to perform a BRSKI flow by exchanging TLVs once the outer TLS tunnel is established.</t>

<figure title="TEAP Server Instructs Client to Perform BRSKI Flow" anchor="flow-2"><artwork><![CDATA[
+--------+             +-------------+         +------+
| Client |             | TEAP-Server |         | MASA |
+--------+             +-------------+         +------+
    |  EAP-Request/               |                |
    |   Type=Identity             |                |
    |<----------------------------|                |
    |                             |                |
    |  EAP-Response/              |                |
    |   Type=Identity             |                |
    |---------------------------->|                |
    |                             |                |
    |  EAP-Request/               |                |
    |   Type=TEAP,                |                |
    |   TEAP Start,               |                |
    |   Authority-ID TLV          |                |
    |<----------------------------|                |
    |                             |                |
    |  EAP-Response/              |                |
    |   Type=TEAP,                |                |
    |   TLS(ClientHello)          |                |
    |---------------------------->|                |
    |                             |                |
    |  EAP-Request/               |                |
    |   Type=TEAP,                |                |
    |   TLS(ServerHello,          |                |
 (1)|   Certificate,              |                |
    |   ServerKeyExchange,        |                |
    |   CertificateRequest,       |                |
    |   ServerHelloDone)          |                |
    |<----------------------------|                |
    |                             |                |
    |  EAP-Response/              |                |
    |   Type=TEAP,                |                |
    |   TLS(Certificate           |                |
    |   ClientKeyExchange,        |                |
    |   CertificateVerify,        |                |
    |   ChangeCipherSpec,         |                |
    |   Finished)                 |                |
    |---------------------------->|                |
    |                             |                |
    |  EAP-Request/               |                |
    |   Type=TEAP,                |                |
    |   TLS(ChangeCipherSpec,     |                |
    |   Finished),                |                |
    |   {Crypto-Binding TLV,      |                |
    |   Result TLV=Success}       |                |
    |<----------------------------|                |
    |                             |                |
    |  EAP-Response/              |                |
    |   Type=TEAP,                |                |
    |   {Crypto-Binding TLV,      |                |
    |   Result TLV=Success}       |                |
    |---------------------------->|                |
    |                             |                |
  ** At this stage the outer TLS tunnel is established **
  ** The following message exchanges are for BRSKI     **
    |                             |                |
    |  EAP-Request/               |                |
    |   Type=TEAP,                |                |
 (2)|   {Request-Action TLV:      |                |
    |     Status=Failure,         |                |
    |     Action=Process-TLV,     |                |
    |     TLV=Request-Voucher,    |                |
    |     TLV=Trusted-Server-Root,|                |
    |     TLV=CSR-Attributes,     |                |
    |     TLV=PKCS#10}            |                |
    |<----------------------------|                |
    |                             |                |
    |  EAP-Response/              |                |
    |   Type=TEAP,                |                |
 (3)|   {Request-Voucher TLV}     |                |
    |---------------------------->| RequestVoucher |
    |                             |--------------->|
    |                             |    Voucher     |
    |                             |<---------------|
    |  EAP-Request/               |                |
    |   Type=TEAP,                |                |
 (4)|   {Voucher TLV}             |                |
    |<----------------------------|                |
    |                             |                |
    |  EAP-Response/              |                |
    |   Type=TEAP,                |                |
 (5)|   {Trusted-Server-Root TLV} |                |
    |---------------------------->|                |
    |                             |                |
    |  EAP-Request/               |                |
    |   Type=TEAP,                |                |
    |   {Trusted-Server-Root TLV} |                |
    |<----------------------------|                |
    |                             |                |
    |  EAP-Response/              |                |
    |   Type=TEAP,                |                |
    |   {CSR-Attributes TLV}      |                |
    |---------------------------->|                |
    |                             |                |
    |  EAP-Request/               |                |
    |   Type=TEAP,                |                |
    |   {CSR-Attributes TLV}      |                |
    |<----------------------------|                |
    |                             |                |
    |  EAP-Response/              |                |
    |   Type=TEAP,                |                |
    |   {PKCS#10 TLV}             |                |
    |---------------------------->|                |
    |                             |                |
    |  EAP-Request/               |                |
    |   Type=TEAP,                |                |
    |   {PKCS#7 TLV,              |                |
 (6)|    Result TLV=Success}      |                |
    |<----------------------------|                |
    |                             |                |
    |  EAP-Response/              |                |
    |   Type=TEAP,                |                |
    |   {Result TLV=Success}      |                |
    |---------------------------->|                |
    |                             |                |
    |  EAP-Success                |                |
    |<----------------------------|                |



]]></artwork></figure>

<t>Notes:</t>

<t>(1) If the client has not yet completed the BRSKI flow, then it provisionally accepts the server certificate and must validate it later once BRSKI is complete.</t>

<t>(2) The server instructs the client to start the BRSKI flow by sending a Request-Action TLV that includes a BRSKI-RequestVoucher TLV. The server also instructs the client to request trust anchors, to request CSR Attrites, and to initiate a PKCS certificate enrolment. As outlined in <xref target="RFC7170"/>, the Request-Action TLV is sent after the Crypto-Binding TLV and Result TLV exchange.</t>

<t>(3) The client includes the certificate it received from the server in the RequestVoucher message.</t>

<t>(4) Once the client receives and validates the voucher signed by the MASA, it must verify the certificate it previously received from the server.</t>

<t>(5) As outlined in <xref target="RFC7170"/>, the Trusted-Server-Root TLV is exchanged after the Crypto-Binding TLV exchange, and after the client has used the Voucher to authenticate the TEAP server identity.</t>

<t>(6) There is not need for an additional Crypto-Binding TLV exchange as there is no inner EAP method. All BRSKI exchanges are simply TLVs exchanged inside the outer TLS tunnel.</t>

</section>
<section anchor="teap-server-instructs-client-to-reenroll" title="TEAP Server Instructs Client to Reenroll">

<t>In this flow, the server instructs the client to reenroll and get a new LDevID by exchanging TLVs once the outer TLS tunnel is established.</t>

<figure title="TEAP Server Instructs Client to Reenroll" anchor="flow-3"><artwork><![CDATA[

+--------+             +-------------+     +------+
| Client |             | TEAP-Server |     | MASA |
+--------+             +-------------+     +------+
    |  EAP-Request/           |                |
    |   Type=Identity         |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=Identity         |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
    |   TEAP Start,           |                |
    |   Authority-ID TLV      |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
    |   TLS(ClientHello)      |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
    |   TLS(ServerHello,      |                |
    |   Certificate,          |                |
    |   ServerKeyExchange,    |                |
    |   CertificateRequest,   |                |
    |   ServerHelloDone)      |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
    |   TLS(Certificate,      |                |
    |   ClientKeyExchange,    |                |
    |   CertificateVerify,    |                |
    |   ChangeCipherSpec,     |                |
    |   Finished)             |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
    |   TLS(ChangeCipherSpec, |                |
    |   Finished),            |                |
    |   {Crypto-Binding TLV,  |                |
    |   Result TLV=Success}   |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
    |   {Crypto-Binding TLV,  |                |
    |   Result TLV=Success}   |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
 (1)|   {Request-Action TLV:  |                |
    |     Status=Failure,     |                |
    |     Action=Process-TLV, |                |
    |     TLV=PKCS#10}        |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
    |   {PKCS#10 TLV}         |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
    |   {PKCS#7 TLV,          |                |
    |    Result TLV=Success}  |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
    |   {Result TLV=Success}  |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Success            |                |
    |<------------------------|                |


]]></artwork></figure>

<t>(1) The server instructs the client to reenroll by sending a Request-Action TLV that includes a PKCS#10 TLV.</t>

</section>
<section anchor="out-of-band-reenroll" title="Out of Band Reenroll">

<t>This section shows how the device does a reenroll to refresh its LDEvID directly against the registrar outside the context of the TEAP tunnel.</t>

</section>
</section>
<section anchor="teap-tlv-formats" title="TEAP TLV Formats">

<section anchor="brski-tlvs" title="BRSKI TLVs">

<t>BRSKI defines 3 new TEAP TLVs. The following table indicates whether
the TLVs can be included in Request messages from TEAP server to
device, or Response messages from device to TEAP server.</t>

<figure><artwork><![CDATA[
+------------------------+----------+
| TLV                    | Message  |
+------------------------+----------+
| BRSKI-VoucherRequest   | Response |
| BRSKI-Voucher          | Request  |
| CSR-Attributes         | Response |
+------------------------+----------+

]]></artwork></figure>

<t>These new TLVs are detailed in this section.</t>

<section anchor="brski-requestvoucher-tlv" title="BRSKI-RequestVoucher TLV">

<t>This TLV is used by the server as part of an Action-Request to
request from the peer that it initiate a voucher request.  When used
in this fashion, the length of this TLV will be set to zero.</t>

<t>It is also used by the peer to initiate the voucher request.  When
used in this fashion, the length of the TLV will be set to that of the
voucher request, as encoded and described in Section 3.3 in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD1-VoucherRequest   |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                              Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>The M and R bits are always expected to be set to 0.</t>

<t>The server is expected to forward the voucher request to the MASA, and
then return a voucher in a BRSKI-Voucher TLV as described below.  If
it is unable to do so, it returns an TEAP Error TLV with one of
the defined errors or the following:</t>

<figure><artwork><![CDATA[
TBD2-MASA-Notavailable  MASA unavailable
TBD3-MASA-Refused       MASA refuses to sign the voucher

]]></artwork></figure>

<t>The peer terminates the TEAP connection, but may retry at some later
point.  The backoff mechanism for such retries should be appropriate
for the device.  Retries MUST occur no more frequently than once
every two (XXX) minutes.</t>

</section>
<section anchor="brski-voucher-tlv" title="BRSKI-Voucher TLV">

<t>This TLV is transmitted from the server to the peer.  It contains a
signed voucher, as describe in <xref target="RFC8366"/>.</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD4-Voucher          |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                              Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>Upon receiving this TLV the peer will validate the signature of the
voucher, using its pre-installed manufacturer trust anchor (LDevID).
It MUST also validate the certificate used by the server to establish
the TLS connection.</t>

<t>If successful, it installs the new trust anchor contained in the
voucher.</t>

<t>Otherwise, the peer transmits an TEAP error TLV with one of the
following error messages:</t>

<figure><artwork><![CDATA[
TBD5-Invalid-Signature  The signature of the voucher signer is invalid
TBD6-Invalid-Voucher    The form or content of the voucher is not valid
TBD7-Invalid-TLS-Signer The certificate used for the TLS connection
                       could not be validated.

]]></artwork></figure>

</section>
<section anchor="csr-attributes-tlv" title="CSR-Attributes TLV">

<t>The server SHALL transmit this TLV to the peer, either along with the
BRSKI-Voucher TLV or at any time earlier in a communication.  The peer
shall include attributes required by the server in any following CSR.
The value of this TLV is the base64 encoding described in Section
4.5.2 of <xref target="RFC7030"/>.</t>

<figure><artwork><![CDATA[
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD8-CSR-Attributes |         length                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>Again, the M and R values are set to 0.  In the case where the client
is unable to provide the requested attributes, an TEAP-Error is
returned as follows:</t>

<t>TBD9-CSR-Attribute-Fail Unable to supply the requested attributes.</t>

</section>
</section>
<section anchor="existing-teap-tlv-specifications" title="Existing TEAP TLV Specifications">

<t>This section documents allowed usage of existing TEAP TLVs. The definition of the TLV is not changed, however clarifications on allowed values for the TLV fields is documented.</t>

<section anchor="pkcs10-tlv" title="PKCS#10 TLV">

<t><xref target="RFC7170"/> defines the PKCS#10 TLV as follows:</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R|         TLV Type          |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           PKCS#10 Data...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-

]]></artwork></figure>

<t><xref target="RFC7170"/> does not explicitly allow a Length value of zero.</t>

<t>A Length value of zero is allowed for this TLV when the TEAP server sends a Request-Action TLV with a child PKCS#10 TLV to the client. In this scenario, there is no PKCS#10 Data included in the TLV. Clients MUST NOT send a zero length PKCS#10 TLV to the server.</t>

</section>
</section>
</section>
<section anchor="fragmentation" title="Fragmentation">
<t>TLS is expected to provide fragmentation support. Thus EAP-TEAP-BRSKI
does not specifically provide any, as it is only expected to be used
as an inner method to TEAP.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>The IANA is requested to add entries into the following tables:</t>

<t>The following new TEAP TLVs are defined:</t>

<figure><artwork><![CDATA[
TBD1-VoucherRequest   Described in this document.
TBD4-Voucher          Described in this document.
TBD8-CSR-Attributes   Described in this document.

]]></artwork></figure>

<t>The following TEAP Error Codes are defined, with their meanings
listed here and in previous sections:</t>

<figure><artwork><![CDATA[
TBD2-MASA-Notavailable  MASA unavailable
TBD3-MASA-Refused       MASA refuses to sign the voucher
TBD5-Invalid-Signature  The signature of the voucher signer is invalid
TBD6-Invalid-Voucher    The form or content of the voucher is not valid
TBD7-Invalid-TLS-Signer The certificate used for the TLS connection
                        could not be validated.
TBD9-CSR-Attribute-Fail Unable to supply the requested attributes.

]]></artwork></figure>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>There will be many.</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>The authors would like to thank Brian Weis for his assistance, and
Alan Dakok for improving language consistency.  In addition, with
ruthlessly “borrowed” the concept around NAI handling from Tuomas Aura
and Mohit Sethi.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>





<reference  anchor="RFC3748" target='https://www.rfc-editor.org/info/rfc3748'>
<front>
<title>Extensible Authentication Protocol (EAP)</title>
<author initials='B.' surname='Aboba' fullname='B. Aboba'><organization /></author>
<author initials='L.' surname='Blunk' fullname='L. Blunk'><organization /></author>
<author initials='J.' surname='Vollbrecht' fullname='J. Vollbrecht'><organization /></author>
<author initials='J.' surname='Carlson' fullname='J. Carlson'><organization /></author>
<author initials='H.' surname='Levkowetz' fullname='H. Levkowetz' role='editor'><organization /></author>
<date year='2004' month='June' />
<abstract><t>This document defines the Extensible Authentication Protocol (EAP), an authentication framework which supports multiple authentication methods.  EAP typically runs directly over data link layers such as Point-to-Point Protocol (PPP) or IEEE 802, without requiring IP.  EAP provides its own support for duplicate elimination and retransmission, but is reliant on lower layer ordering guarantees.  Fragmentation is not supported within EAP itself; however, individual EAP methods may support this.  This document obsoletes RFC 2284.  A summary of the changes between this document and RFC 2284 is available in Appendix A.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3748'/>
<seriesInfo name='DOI' value='10.17487/RFC3748'/>
</reference>



<reference  anchor="RFC7170" target='https://www.rfc-editor.org/info/rfc7170'>
<front>
<title>Tunnel Extensible Authentication Protocol (TEAP) Version 1</title>
<author initials='H.' surname='Zhou' fullname='H. Zhou'><organization /></author>
<author initials='N.' surname='Cam-Winget' fullname='N. Cam-Winget'><organization /></author>
<author initials='J.' surname='Salowey' fullname='J. Salowey'><organization /></author>
<author initials='S.' surname='Hanna' fullname='S. Hanna'><organization /></author>
<date year='2014' month='May' />
<abstract><t>This document defines the Tunnel Extensible Authentication Protocol (TEAP) version 1.  TEAP is a tunnel-based EAP method that enables secure communication between a peer and a server by using the Transport Layer Security (TLS) protocol to establish a mutually authenticated tunnel.  Within the tunnel, TLV objects are used to convey authentication-related data between the EAP peer and the EAP server.</t></abstract>
</front>
<seriesInfo name='RFC' value='7170'/>
<seriesInfo name='DOI' value='10.17487/RFC7170'/>
</reference>



<reference  anchor="RFC7030" target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author initials='M.' surname='Pritikin' fullname='M. Pritikin' role='editor'><organization /></author>
<author initials='P.' surname='Yee' fullname='P. Yee' role='editor'><organization /></author>
<author initials='D.' surname='Harkins' fullname='D. Harkins' role='editor'><organization /></author>
<date year='2013' month='October' />
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference  anchor="RFC8366" target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author initials='K.' surname='Watsen' fullname='K. Watsen'><organization /></author>
<author initials='M.' surname='Richardson' fullname='M. Richardson'><organization /></author>
<author initials='M.' surname='Pritikin' fullname='M. Pritikin'><organization /></author>
<author initials='T.' surname='Eckert' fullname='T. Eckert'><organization /></author>
<date year='2018' month='May' />
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor="I-D.ietf-anima-bootstrapping-keyinfra">
<front>
<title>Bootstrapping Remote Secure Key Infrastructures (BRSKI)</title>

<author initials='M' surname='Pritikin' fullname='Max Pritikin'>
    <organization />
</author>

<author initials='M' surname='Richardson' fullname='Michael Richardson'>
    <organization />
</author>

<author initials='M' surname='Behringer' fullname='Michael Behringer'>
    <organization />
</author>

<author initials='S' surname='Bjarnason' fullname='Steinthor Bjarnason'>
    <organization />
</author>

<author initials='K' surname='Watsen' fullname='Kent Watsen'>
    <organization />
</author>

<date month='January' day='17' year='2019' />

<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this a remote secure key infrastructure (BRSKI) is created using manufacturer installed X.509 certificate, in combination with a manufacturer's authorizing service, both online and offline.  Bootstrapping a new device can occur using a routable address and a cloud service, or using only link-local connectivity, or on limited/disconnected networks.  Support for lower security models, including devices with minimal identity, is described for legacy reasons but not encouraged.  Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device but the established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-anima-bootstrapping-keyinfra-18' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-anima-bootstrapping-keyinfra-18.txt' />
</reference>




    </references>


<section anchor="changes-from-earlier-versions" title="Changes from Earlier Versions">

<t>Draft -01:
  * Add packet descriptions, IANA considerations, smooth out language.</t>

<t>Draft -00:</t>

<t><list style="symbols">
  <t>Initial revision</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
JACyM65hCok3FYR84A4wY9GUYsKTKR70TBGK/zPYHBvW/zBII7ePz17u6aSq
wK6tMWrrJnoYTGSI+MC81ayWKQI0pmAtfM9aww985AcCQaTFVPSBU+mWDESc
i01sQO9cozfjpvmusJXQTxhmEmprghGON5wpCJ4vTpNS3oOex/0uEuDjHIOb
BdoDBaKLAUK6zoywQI4mBK5AKhPsC7HqAl2D3IVeBzPQFGO+erzSLXUVhZxi
fUl4bCmwyiA2A6u68Oe248m78NC02H5G7BU+6Vh33k0ny64lxAAZGWDQovom
UAkIHspnIk8AxGNgafh9iYvjjHw2OFDcDvirseycUEomdBbI4tOWrRkEDkgu
Nc4lBjbkkVdesXOsdkoCh1Ycijf1khm+8z1+ARwwPAoYIF4n2qLHAe+0kdm4
aet2PbqOvHuNBrcP+rLlzc5dZG4PQipxbpOLFhMKvOXa9hH82pSxoPDqjMxL
nIsjaugizAphKw7TlpiyKDG4V9I/KPfw9OhZGIjoTLxmPRPQCOoNoax7yOa7
x7BdGkNEAHt0LsLZrCmio+HJj6VTAks0HJ/kLiDUnFbvYSD1Ky8EIg0sDwQu
0Agk9SLNkjJbDXTC/k87zgOaaxAO75879KvAzWrISMIfsiVJDtlAFqNpTyKV
QqjVKnLR0hnGutkKofVkEMgjJKcrsBfwgXBaxeYLbE3iWAWIQXZ3yXMJ7BP0
6kBMgF2fTubhFgL4OWYDzAdDZBkJrgRRGqE19fbtEoy+YKJh4hyhISyGMoc1
jaVIyikTkUwLUwURdpSN9QxmodgcAAveBAbpKHMx6Jw6CrnSkKeJAvroxfCs
5iRHuliYKWYHs1Xk5yBCbIXpJ7RaAL8sskSGieSigGGae/PEOdnRAnRGnizm
yaVhb1pYCKENLEWWC0I8LtgZbSWgT4+j8AE3bydXIHLN7YVkJiVm2S5LtGxu
eMSch5ujOdJ8ktVTylf1CXR8sKV001m4cHOCSMliP3NAYQ3oobY8bz3kSbVr
hrCwYOU2IERuhShmHNkv2EcoxcDHF1YAayENHYUAFGeSRHlxBwQaJ4hdyjTv
gt9/mhItGjiljLIE+sW3x2e39u8Qjn8hkzqgekcJa4l9XQgsPCDA+xWoLtay
rTkcZDKPD+2YcqBcNib4EqAEm6QJosR74LMIllYx/D2Ai9T1jBOu5XmUAzHt
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
B91Uirg2Im4qRQS157sJy5tKEdJ/ozHnNw26/YAk7Hq7/r+NjK6NiE9NRj2J
vE2DrntO7Yze3b6M3m5ple2pvo+YWZt83MzaurxPb/ue67YbXHcrJLpzQ80W
14HhSqlbac/gF2xiRXqBvByqIg5uvfNVnQhpdBuHb77HzVei4llOjvX1T6F2
dQDLrHIvI+iW6CIYDYM1ZaxNprDvnsq6Cyqt1K3Lcfb3PsQ17u3p5627l/4O
QNyMDp9wtxOaO8SunDzIL1NMsQ/KoPx0ba4ZQLq/tx3b6xqhUdNkxuB0M96b
tjNUSO0fDViR28/Cd698k7u4E1H7CqdLC+MuHuyFb7GpwtfYhLdxNkCG5cRh
8Xy7tB6I0l/siuMyNgUeXnG2tUFH0O6jc5lhpyzxS7me9gG54ahnD12bDLvX
fIQk8e9lw7/q6qLfy4a3DPi9bPj3suE1A37BsuHuCr+XDa8f8HvZ8G+X434v
G96yh9/LhnfZwy9JrVKw05+c3LiHvsTkxgF9ScmNA/oyfjedWnujpzeV+HS4
6XakdNMeenn0ppPGtTb9qUjj01xnONg1+OmiBRjyxFDnDpHED35ZSfxuklu3
9POaOm895uiaC1vEr2Okl5i6V3iFra6TqDdR3AT6SdRtN7nA3jRVq/fChp67
cWvYW74nLb60ZpFUNmz88/QV/Mn/5mv7Vh/EjWzbb0HjDmfNCy3kPajcgRij
KvKKtbCDRuvOg/RejDt6KvduvaLUL31/lWhA04cr7soQV/C3P8EPGI2JqpxD
Kv5Oyo/C+MuWuXrfD4Rz+Q28az8VruhH4FOthGL4lJ9rN7gYH+fUnZaOsmlH
jE1pXYOChkzxZvwtRxM98XEhaol9UsQy7maCd/oxPo+dRTvNquBoXXA8eHGn
kbeEUjNrHx1vvdpnpLmfMb0i3QE9S+zcv/pd2kUV0iaFX0iDzG2otymQCraW
8m0i/QvX3QYYkCBCH0agYyiUvEl+CxSmDwjaqnRubs1OLxAzOb4wZ0qRy6h/
xZkIkoPRAbe/3rVpkWMLpKE7PfS+3/Pd3Z7vDmSGffj1QN/T9/UD/VA/0l9e
5zuc44vhv/l/OMm77969fMdFaI9P9vs4L/g85VOJNc1Hg6RPiDSfV0lWm9Fo
9HHW8xytv+Ncjh6jpkCeTrKrZGWjBjQN2d1pdeuKn5OuTn0kHzbRouSFooRg
55VL/T2f4lfijQ31fdenM8Uvd6pz10OUXmkqrcW5IWQiryhvvV+K2xbL+yK4
uwy9Z8q6/npePx06ZD0+uTtE8IfPiiq5BLlHi3KEHSBw3+CDB/zgSzMjFueP
9M+acZP6gtJRIaqCQ2Eh4hp5Bh2NwpcDYb9YvDcIOy2po60tFoazo0p6yJOm
HSeTN8Vs1vS/p4QOduChoXi1UDqKYTPWpnusco2y/asWX8rjQYehvOD25DM6
55zeB4sv18FMiDLUyhBfF3D7hx9+2NOwHVRFo1A5rNUKIIJyu0irqidBKMSE
aEI6qIKGe6rd/ysgnSYr9+jgwYP/CpF2r89MuMEi7XuwbCRPyy2ohKC8aiY9
Grca9v3gYn06CPrDLUszbHoZR521o45xtzk3uDdC84DYhAyEtW3dekwf7Pnp
MoViA4cvBeN+fE2LPX7BHYPm2jNdxUAJc/g+Um6D2Pi3kvecBv38HeM1stP0
yU6aqbHi+RlnXgdC8/7wNKf9D888otmtauE9ztOX3J+aRuI0D/w0AUGzI1Eu
tOwyaF3sFUrwOlmc56GfB/BKIKHw6TsW/56ACP9qDTFzy1dpae3O2yd6Ud51
C/wiXXr2zdHTpx75AeU2sm7gumQlWYGvnZC3pqiuviyoXxy2SsemsdokJTXe
J+2Kfc3rXN7PIToCZ1d2jk033TX05sVpUbfNuEwDV2hoAHY4oi1dImdHNjS/
oZkaaT24x9Ypd3zvmqbq3uj+6C6/V5kqKO4c3Ilk9b8tqn+VkvrRsEUgjfTM
ukKaPh9TUv8SwvgIAw0sWZyZSZQh9R7OpJT3ZOKr2yy9FK8MK3tUZOBR+ZhE
KcS0RC8nuAciQktek5haxZagob6DTKsongDjX8YYH2IkWn/vl6LXVazWrsQ+
rn4Svc0OSf2MW/1O3HtmovjNtJjUC24/J70PaooRALWb9kzuVeRon6bhWxeF
oaj1JpfJDHwr/EmWlM3q2KzOLSSob8TaKy2vJMT2jwIXiSyUVuF781TUddGF
dXCSsE90hN4ba1e5D+4YQ7ABN4agfzK7yp3ASVIlu7Lvtgfk+OJTbzqDcjfU
TJokgkaRzXqpLxGSo94fwgYjTIsuzOK6+oZhvA0tv6UF8WSeguJd27B81LyE
d2Jy4I0ibu4a4q/TpJdKOY+lez2Zc8+e+5e70Wa6r5mOO4LjS4rL5AJZi9+j
+lX4UWhbtJxoJ+Fm4TASRkVJ/clrfssBCTl+cZQ/G+tED9bWuolARw/4nUv8
euFs1XbuKRqW2KYTrrwzSuKiaHIePTtqv0Drq+6HDRp6OLWB1MQSxCm+hIX9
R/BNi9jJ5iAwyeXo67VvQAsMzJ6ozUloVtDhO/k2Uv1O0ZYRHeW8eUTjyTdb
CaIQx8XURLsZeFsuLakpKgywCttPw/T83j16l40vRnX6xH666MR/jym/1pb/
GDYD132CqVv3vZSuh6c8X5XGB4HBAcVyXXU0wdeSg0tKkqIznEmQe0hZfUW7
wndYSQA5f6Mflykw/WuTsl2AVJxYC3QHriMXGaujDJ44Sd4Ub+iRdEFyBQga
vr+o0XahF+jBTvPJim05VynMZK1KAABfOA6I+WxcAAeA6P/M5Zmw/h9YoaiB
wJ8dnTYv1eOMTl0sQDAd1WVCb1n8rpiDGDsD8ZTiizuGQ4puKXUsdcQ06Il4
O69MaTdh1SHphFpfD+/sHwJFfK6PQFItYVZTiXvCbaAHLNeitwXCl3ZRFOgT
15VHyKiZ8s6hojlP5QXJyL4Ik/p/VBehbnajAAA=

-->

</rfc>

