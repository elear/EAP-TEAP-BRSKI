<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-lear-eap-teap-brski-03" category="std">

  <front>
    <title abbrev="BRSKI TEAP EAP">Bootstrapping Key Infrastructure over EAP</title>

    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="O." surname="Friel" fullname="Owen Friel">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 W. Tasman Dr.</street>
          <city>San Jose, CA</city>
          <code>95134</code>
          <country>United States</country>
        </postal>
        <email>ofriel@cisco.com</email>
      </address>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="Nancy Cam-Winget">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 W. Tasman Dr.</street>
          <city>San Jose, CA</city>
          <code>95134</code>
          <country>United States</country>
        </postal>
        <email>ncamwing@cisco.com</email>
      </address>
    </author>
    <author initials="D." surname="Harkins" fullname="Dan Harkins">
      <organization>HP Enterprise</organization>
      <address>
        <postal>
          <street>3333 Scott Boulevard</street>
          <city>Santa Clara, CA</city>
          <code>95054</code>
          <country>United States</country>
        </postal>
        <email>dharkins@arubanetworks.com</email>
      </address>
    </author>

    <date year="2019" month="July" day="05"/>

    
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>In certain environments, in order for a device to establish any layer
three communications, it is necessary for that device to be properly
credentialed.  This is a relatively easy problem to solve when a
device is associated with a human being and has both input and display
functions.  It is less easy when the human, input, and display
functions are not present.  To address this case, this memo specifies
extensions to the Tunnel Extensible Authentication Protocol (TEAP)
method that leverages Bootstrapping Remote Secure Key Infrastructures
(BRSKI) in order to provide a credential to a device at layer two.
The basis of this work is that a manufacturer will introduce the
device and the local deployment through cryptographic means.  In this
sense the same trust model as BRSKI is used.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t><xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> (BRSKI) specifies a means to
provision credentials to be used as credentials to operationally
access networks.  It was designed as a standalone means where some
limited access to an IP network is already available.  This is not
always the case.  For example, IEEE 802.11 networks generally require
authentication prior to any form of address assignment.  While it is
possible to assign an IP address to a device on some form of an open
network, or to accept some sort of default credential to establish
initial IP connectivity, the steps that would then follow might well
require that the device is placed on a new network, requiring reseting
all layer three parameters.</t>

<t>A more  natural approach  in such  cases is to  more tightly  bind the
provisioning  of credentials with  the authentication  mechanism.  One
such way  to do this is  to make use of  the Extensible Authentication
Protocol (EAP)  <xref target="RFC3748"/> and the  Tunnel Extensible Authentication
Protocol  (TEAP)  method  <xref target="RFC7170"/>.    Thus  we  define  new  TEAP
Type-Length-Value  (TLV) objects  that can  be used  to  transport the
BRSKI protocol messages within the context of a TEAP TLS tunnel.</t>

<t><xref target="RFC7170"/> discusses the notion of provisioning peers.  Several
different mechanisms are available.  Section 3.8 of that document
acknowledges the concept of not initially authenticating the outer TLS
session so that provisioning may occur.  In addition, exchange of
multiple TLV messages between client and EAP server permits multiple
provisioning steps.</t>

<section anchor="terminology" title="Terminology">

<t>The reader is presumed to be familiar with EAP terminology as stated
in <xref target="RFC3748"/>.  In addition, the following terms are commonly used in
this document.</t>

<t><list style="symbols">
  <t>BRSKI: Bootstrapping Remote Secure Key Infrastructures, as defined in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.  The term is also used
to refer to the flow described in that document.</t>
  <t>EST: Enrollment over Secure Transport, as defined in <xref target="RFC7030"/>.</t>
  <t>Voucher: a signed JSON object as defined in <xref target="RFC8366"/>.</t>
</list></t>

</section>
</section>
<section anchor="arch" title="TEAP BRSKI Architecture">

<t>The TEAP BRSKI architecture is illustrated in
<xref target="brski-architecture"/>. The device talks to the TEAP server via the
Authenticator using any compliant transport such as <xref target="IEEE8021X"></xref>.
The architecture illustrated shows an Authenticator distinct from
the TEAP server. This is a deployment optimization and when so
deployed the communication between Authenticator and TEAP server
is a AAA protocol such as RADIUS or DIAMETER.</t>

<t>The architecture illustrated shows a co-located TEAP server and
BRSKI registrar. Not only are these two functions co-located, they
MUST be the same entity. This ensures that the entity identified in
the device’s voucher request (the TEAP server) is the same entity
that signs the voucher request (the registrar).</t>

<t>The registrar communicates with the BRSKI MASA service for the
purposes of getting signed vouchers.</t>

<t>The registrar also communicates with a Certificate Authority in order
to issue LDevIDs. The architecture shows the registrar and CA as being
two logically separate entities, however the CA may be integrated into
the registrar. The device is not explicitly aware of whether the CA
and registrar functions are integrated.</t>

<figure><artwork><![CDATA[
+--------+     +---------+     +---------+     +------+
|        |     |         |     |  TEAP   |<--->| MASA |
|        |     | Authen- |     | server  |     +------+
| Device |<--->| ticator |<--->|         |
|        |     |         |     |  BRSKI  |     +------+
|        |     |         |     |Registrar|<--->|  CA  |
+--------+     +---------+     +---------+     +------+

]]></artwork></figure>

</section>
<section title="BRSKI Bootstrap and Enroll Operation" anchor="brski-architecture">

<t>This section summarises the current BRSKI operation. The BRSKI flow
assumes the device has an IDevID and has a manufacturer installed
trust anchor that can be used to validate the BRSKI voucher. The BRSKI
flow compromises serveral main steps from the perspective of the
device:</t>

<t><list style="symbols">
  <t>Step 1: Device discovers the registrar</t>
  <t>Step 2: Device establishes provisional TLS connection to registrar</t>
  <t>Step 3: Device sends voucher request message and receives signed voucher response</t>
  <t>Step 4: Device validates voucher and validates provisional TLS connection to registrar</t>
  <t>Step 5: Device downloads additional local domain CA information</t>
  <t>Step 6: Device downloads Certificate Signing Request (CSR) attributes</t>
  <t>Step 7: Device does a certificate enroll to obtain an LDevID</t>
  <t>Step 8: Device periodically reenrolls via EST to refresh its LDevID</t>
</list></t>

<t>Most of the operational steps require the device, and thus its internal state machine, to automatically complete the next step without being explicitly instructed to do so by the registrar. For example, the registrar does not explicitly tell the device to download additional local domain CA information, or to do an EST enroll to obtain an LDevID.</t>

<section anchor="discovery-of-trusted-masa" title="Discovery of Trusted MASA">

<t>BRSKI section 2.8 outlines how the Registrar discovers the correct MASA to connect with. BRSKI section 5.3 outlines how the Registrar can make policy decisions about which devices to trust.</t>

<t>Similar approaches are applicable for TEAP servers executing BRSKI. For example, the TEAP server may be configured with a list of trusted manufacturing CAs. During device bootstrap, only devices with an IDevID signed by a trusted manufacturing CA may be allowed to etablishes a TLS connection with the TEAP server, and the TEAP server could then extract the MASA URI from the device’s IDevID.</t>

</section>
<section anchor="bint" title="Executing BRSKI in a TEAP Tunnel">

<t>This section outlines how the main BRSKI steps outlined above map to TEAP, and how BRSKI and enrollment can be accomplished inside a TEAP TLS tunnel. The following new TEAP TLVs are introduced:</t>

<t><list style="symbols">
  <t>BRSKI-VoucherRequest</t>
  <t>BRSKI-Voucher</t>
  <t>CSR-Attributes</t>
</list></t>

<t>The following steps outline how the above BRSKI flow maps to TEAP.</t>

<t><list style="symbols">
  <t>Step 1: Device discovers the registrar</t>
</list></t>

<t>When BRSKI is executed in a TEAP tunnel, the device exchanges BRSKI TLVs with the TEAP server. The discovery process for devices is therefore the standard wired or wireless LAN EAP server discovery process. The discovery processes outlined in section 4 of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> are not required for initial discovery of the registrar.</t>

<t><list style="symbols">
  <t>Step 2: Device establishes provisional TLS connection to registrar</t>
</list></t>

<t>The device establishes an outer TEAP tunnel with the TEAP server and
does not validate the server certificate. 
The device presents its LDevID as its identity
certificate if it has a valid LDevID, otherwise it presents its
IDevID. The TEAP server validates the device’s certificate using
its implicit or explicit trust anchor database. If the device
presents an IDevID it is verified against a database of trusted
manufacturer certificates. Server policy may also be used to control
which certificate the device is allowed present, as described in
section {pki-certificate-authority-considerations}.</t>

<t>If the presented credential is sufficient to grant access, the TEAP server can return a TEAP Result TLV indicating success immediately. The device may still send a Request-Action TLV including a BRSKI-VoucherRequest TLV in response to the TEAP Result TLV if it does not have, but requires, provisioning of trust anchors for validating the TEAP server certificate. Note that no inner EAP method is required for this, only an exchange of TEAP TLVs.</t>

<t>[todo] Question: as the device wants the server to reply with a BRSKI-Voucher TLV, does it really send a Request-Action TLV containing a BRSKI-VoucherRequest TLV, or does it send a Request-Action TLV containing a BRSKI-Voucher TLV?? The TEAP draft is a bit ambiguous here. Normally, if one end sends a Request-Action including XXX-TLV, it means it wants the far end ot send an XXX-TLV…</t>

<t>[todo] Question: general TEAP protocol question: does the device have to send a Request-Action w/BRSKI-VoucherRequest or can it send a BRSKI-VoucherRequest on its own? I’m not clear on this.</t>

<t>If the TEAP server requires that the device execute a BRSKI flow, the server sends a Request-Action TLV that includes a BRSKI-VoucherRequest TLV. For example, if the device presented its IDevID but the TEAP server requires an LDevID.</t>

<t>[todo] Question: to nit pick, the server should send a Request-Action TLV including a PKCS#10 TLV to tell the client to enroll. How does the server really know that the client has the correct trust established (as previously received by a BRSKI-Voucher)? If the client sends an IDevID, does server always send a Request-Action including both BRSKI-VoucherRequest and PKCS#10 TLVs? Whats the client behaviour? I assume client can spontaneously send BRSKI-VoucherRequest and/or PCSK#10 without being explicitly instructed to. Just need to get the language correct here.</t>

<t>The TEAP server may also require the device to reenroll, for example, if the device presented a valid LDevID that is very closed to expiration. The server may instruct a device to reenroll by sending a Request-Action TLV that includes a zero byte length PKCS#10 TLV.</t>

<t><list style="symbols">
  <t>Step 3: Device sends voucher request message and receives signed voucher response</t>
</list></t>

<t>The device sends a BRSKI-RequestVoucher TLV to the TEAP server. The
TEAP server forwards the RequestVoucher message to the MASA server,
and the MASA server replies with a signed voucher. The TEAP server
sends a BRSKI-Voucher TLV to the device.</t>

<t>If the MASA server does not issue a signed voucher, the TEAP server
sends an EAP-Error TLV with a suitable error code to the device.</t>

<t>For wireless devices in particular, it is important that the MASA
server only return a voucher for devices known to be associated with a
particular registrar.  In this sense, success indicates that the
device is on the correct network, while failure indicates the device
should try to provision itself within wireless networks (e.g, go to
the next SSID).</t>

<t><list style="symbols">
  <t>Step 4: Device validates voucher and validates provisional TLS connection to registrar</t>
</list></t>

<t>The device validates the signed voucher using its manufacturer
installed trust anchor, and uses the CA information in the voucher to
validate the TLS connection to the TEAP server.</t>

<t>If the device fails to validate the voucher, then it sends a TEAP-Error TLV indicating failiure to the TEAP server.</t>

<t>Similarly, if the device validates the voucher, but fails to validate the provisional TLS connection, then it sends a TEAP-Error TLV indicating failure to the TEAP server. Note that the outer TLS tunnel has already been established, thus allowing the client to send a TEAP-Error TLV to the server inside that tunnel to indicate that it failed to verify the provisionally accepted outer TLS tunnel server identity.</t>

<t><list style="symbols">
  <t>Step 5: Device downloads additional local domain CA information</t>
</list></t>

<t>On completion of the BRSKI flow, the device SHOULD send a
Trusted-Server-Root TLV to the TEAP server in order to discover
additional local domain CAs. This is equivalent to section [todo] from <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<t><list style="symbols">
  <t>Step 6: Device downloads CSR attributes</t>
</list></t>

<t>No later than the completion of step 5, server MUST send a
CSR-Attributes TLV to peer server in order to discover the correct
fields to include when it enrolls to get an LDevID.</t>

<t><list style="symbols">
  <t>Step 7: Device does a certificate enroll to obtain an LDevID</t>
</list></t>

<t>When executing the BRSKI flow inside a TEAP tunnel, the device does
not directly leverage EST when doing its initial enroll. Instead, the
device uses the existing TEAP PKCS#10 and PCKS#7 TEAP mechanisms.</t>

<t>Once the BRSKI flow is complete, the device can now send a PKCS#10 TLV
to enroll and request an LDevID. If the TEAP server instructed the
device to start the BRSKI flow via a Request-Action TLV that includes
a BRSKI-RequestVoucher TLV, then the device MUST send a PKCS#10 in
order to start the enroll process. The TEAP server will handle the
PKCS#10 and ultimately return a PKCS#7 including an LDevID to the
device.</t>

<t>If the TEAP server granted the device access on completion of the
outer TEAP TLS tunnel in step 2 without sending a Request-Action TLV,
the device does not have to send a PKCS#10 to enroll.</t>

<t>At this point, the device is said to be provisioned for local network
access, and may authenticate in the future via 802.1X with its newly
acquired credentials.</t>

<t><list style="symbols">
  <t>Step 8: Device periodically reenrolls to refresh its LDevID</t>
</list></t>

<t>When a device’s LDevID is close to expiration, there are two options
for re-enrollment in order to obtain a fresh LDevID. As outlined in
Step 2 above, the TEAP server may instruct the device to reenroll by
sending a Request-Action TLV including a PKCS#10 TLV. If the TEAP
server explicilty instructs the device to reenroll via these TLV
exchange, then the device MUST send a PKCS#10 to reenroll and request
a fresh LDevID.</t>

<t>However, the device SHOULD reenroll if it determines that its LDevID
is close to expiration without waiting for explicit instruction from
the TEAP server. There are two options to do this.</t>

<t>Option 1: The device reenrolls for a new LDevID directly with the EST
CA outside the context of the 802.1X TEAP flow. The device uses the
registrar discovery mechanisms oulined in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> to discover the registrar
and the device sends the EST reenroll messages to the discovered
registrar endpoint. No new TEAP TLVs are defined to facilitate
discover of the registrar or EST endpoints inside the context of the
TEAP tunnel.</t>

<t>Option 2: When the device is performing a periodic 802.1X
authentication using its current LDevID, it reenrolls for a new LDevID
by sending a PKCS#10 TLV inside the TEAP TLS tunnel.</t>

</section>
</section>
<section anchor="pki-certificate-considerations" title="PKI Certificate Considerations">

<t>Careful consideration must be given to PKI certificate authority handling when:</t>

<t><list style="symbols">
  <t>Establishing the TEAP tunnel</t>
  <t>Establishing trust using BRSKI</t>
</list></t>

<t>Additionally, consideration must be given to IDevID and LDevID expiration times.</t>

<t>These are described in more detail here.</t>

<section anchor="teap-tunnel-establishment" title="TEAP Tunnel Establishment">

<t>Because this method establishes a client identity, and for purposes of
partioning of responsibility, the peer uses a generic identity string
of teap-brsk@TBD1 as its network access identifier (NAI).</t>

<t>BRSKI section 5.3 outlines the policy decisions a Registrar may make when deciding whether to accept connections from clients. Similarly, the TEAP server operator may configure a set of trusted CAs for validating incoming TLS connections from clients. The operator may want to ‘allow any device from a specific vendor’, or from a set of vendors, to access the network. Network operators may do this by restricting network access to clients that have a certificate signed by one of a small set of trusted manufacturer/supplier CAs.</t>

<t>When the client sends its ClientHello to initiate TLS tunnel establishment, it is possible for the TEAP server to restrict the certificates that the client can use for tunnel establishment by including a list of CA distinguished names in the certificate_authorities field in the CertificateRequest message. The client should only continue with the handshake if it has a certificate signed by one of the indicated CAs.</t>

<t>In practice, network operators will likely want to onboard devices from a large number of device manufacturers, with each manufacturer using a different root CA when issuing IDevIDs. If the number of different manufacturer root CAs is large, this could result in very large TLS handshake messages. Therefore, the TEAP server may send a CertificateRequest message and not specify any certificate_authorities, thus allowing the client present a certificate signed by any authority in its Certificate message.</t>

<t>If the client has both an IDevID and an LDevID, the client should present the LDevID in preference to its IDevID, if allowed by server policy.</t>

<t>Once the client has sent its TLS Finished message, the TEAP server can make a policy decision, based on the CA used to sign the client’s certificate, on whether to establish the outer TLS tunnel or not.</t>

<t>The TEAP server may delegate policy decisions to the MASA or CA function. For example, the TEAP server may declare EAP success and grant network access if the client presents a valid LDevID signed by a trusted domain CA. However, if the client presents an IDevID signed by a trusted manufacturer CA, the TEAP server may establish the TLS tunnel but not declare EAP success and grant network access until the client successfully completes a BRSKI Voucher exchange and PKCS#10/PKCS#7 exchange inside that tunnel.</t>

<t>It is recommended that the client validate the certificate presented
by the server in the server’s Certificate message, but this may not be
possible for clients that have not yet provisioned appropriate trust
anchors. If the client is in the provisioning phase and
has not yet completed a BRSKI flow, it will not have trust anchors
installed yet, and thus will not be able to validate the server’s
certificate. The client must however note the certificate presented by
the server for (i) inclusion in the BRSKI-RequestVoucher TLV and for
(ii) validation once the client has discovered the local domain trust
anchors.</t>

<t>If the client does not present a suitable certificate to the server, the server MUST terminate the connection and fail the EAP request. If the TEAP server is unable to validate the client’s certificate using its implicit or explicit trust anchor database it MUST fail the EAP request.</t>

<t>On establishment of the outer TLS tunnel, the TEAP server will make a policy decision on next steps. Possible policy decisions include:</t>

<t><list style="symbols">
  <t>Option 1: Server grants client full network access and returns EAP-Success. This will typically happen when the client presents a valid LDevID. Network policy may grant client network access based on IDevID without requiring the device to enroll to obtain an LDevID.</t>
  <t>Option 2: Server requires that client perform a full BRSKI flow, and then enroll to get an LDevID. This will typically happen when the client presents a valid IDevID and network policy requires all clients to have LDevIDs. The server sends a Request-Action TLV that includes a BRSKI-RequestVoucher TLV to the client to instruct it to start the BRSKI flow.</t>
  <t>Option 3: Server requires that the client reenroll to obtain a new LDevID. This could happen when the client presents a valid LDevID that is very close to expiration time, or the server’s policy requires an LDevID update. The server sends an Action-Request TLV including a PKCS#10 TLV to the client to instruct it to reenroll.</t>
</list></t>

</section>
<section anchor="brski-trust-establishment" title="BRSKI Trust Establishment">

<t>If the server requires that client perform a full BRSKI flow, it sends a Request-Action TLV that includes a zero byte length BRSKI-RequestVoucher TLV to the client. The client sends a new BRSKI-RequestVoucher TLV to the server, which contains all data specified in <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.2. The client includes the server certificate it received in the server’s Certificate message during outer TLS tunnel establishment in the proximity-registrar-cert field. The client signs the request using its IDevID.</t>

<t>The server includes all additional information as required by <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.4 and signs the request prior to forwarding to the MASA.</t>

<t>The MASA responds as per <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.5. The response may indicate failure and the server should react accordingly to failures by sending a failure response to the client, and failing the TEAP method.</t>

<t>If the MASA replies with a signed voucher and a successful result, the server then forwards this response to the client in a BRSKI-Voucher TLV.</t>

<t>When the client receives the signed voucher, it validates the signature using its built in trust anchor list, and extracts the pinned-domain-cert field. The client must use the CA included in the pinned-domain-cert to validate the certificate that was presented by the server when establishing the outer TLS tunnel. If this certificate validation fails, the client must fail the TEAP request and not connect to the network.</t>

<t>[TBD- based on client responses, the registrar sends a status update
to the MASA]</t>

</section>
<section anchor="certificate-expiration-times" title="Certificate Expiration Times">

<t><xref target="IEEE8021AR"></xref> section 7.2.7.2 states:</t>

<t><list style='empty'>
  <t>notAfter: The latest time a DevID is expected to be used. Devices possessing an IDevID are expected to operate indefinitely into the future and should use the value 99991231235959Z. Solutions verifying an IDevID are expected to accept this value indefinitely.</t>
</list></t>

<t>TEAP servers SHOULD follow the 802.1AR standard when validating IDevIDs.</t>

<t>TEAP servers SHOULD reject LDevIDs with expired certificates and SHOULD NOT allow clients to connect with recently expired LDevIDs. If a client presents a recently expired LDevID it SHOULD be forced to authenticate using its IDevID and then reenroll to obtain a valid LDevID.</t>

</section>
</section>
<section anchor="channel-and-crypto-binding" title="Channel and Crypto Binding">

<t>As the TEAP BRSKI flow does not define or require an inner EAP method, there is no explicit need for exchange of Channel-Binding TLVs between the device and the TEAP server.</t>

<t>The TEAP BRSKI TLVs are expected to occur at the beginning of the TEAP Phase 2 and MUST occur before the final Crypto-Binding TLV.  This draft does not exclude the possibility of having other EAP methods occur following the TEAP BRSKI TLVs and as such, the Crypto-Binding TLV process rules as defined in <xref target="RFC7170"/> apply.</t>

</section>
<section anchor="protocol-flows" title="Protocol Flows">

<t>This section outlines protocol flows that map to the three server policy
options described in section <xref target="teap-tunnel-establishment"/>. The
protocol flows illustrate a TLS1.2 exchange. Pertinent notes are
outlined in the protocol flows.</t>

<section anchor="teap-server-grants-access" title="TEAP Server Grants Access">

<t>In this flow, the server grants access as server policy allows the client to access the network based on the identity certificate that the client presented. This means that either (i) the client has previously completed BRSKI and has presented a valid LDevID or (ii) the client presents an IDevID and network policy allows access based purely on IDevID.</t>

<figure title="TEAP Server Grants Access" anchor="flow-1"><artwork><![CDATA[

                      +----------------+
+--------+            | Authenticator/ |    +------+
| Client |            |   TEAP-Server  |    | MASA |
+--------+            +----------------+    +------+
    |  EAP-Request/           |                |
    |   Type=Identity         |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=Identity         |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
    |   TEAP Start,           |                |
    |   Authority-ID TLV      |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
    |   TLS(ClientHello)      |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
    |   TLS(ServerHello,      |                |
 (1)|   Certificate,          |                |
    |   ServerKeyExchange,    |                |
 (2)|   CertificateRequest,   |                |
    |   ServerHelloDone)      |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
 (3)|   TLS(Certificate,      |                |
    |   ClientKeyExchange,    |                |
    |   CertificateVerify,    |                |
    |   ChangeCipherSpec,     |                |
    |   Finished)             |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
    |   TLS(ChangeCipherSpec, |                |
    |   Finished),            |                |
    |   {Crypto-Binding TLV,  |                |
    |   Result TLV=Success}   |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
    |   {Crypto-Binding TLV,  |                |
    |   Result TLV=Success}   |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Success            |                |
    |<------------------------|                |


]]></artwork></figure>

<t>Notes:</t>

<t>(1) If the client has completed the BRSKI flow and has locally significant trust anchors, it must validate the Certificate received from the server. If the client has not yet completed the BRSKI flow, then it provisionally accepts the server Certificate and must validate it later once BRSKI is complete.</t>

<t>(2) The server may include certificate_authorities field in the CertificateRequest message in order to restrict the identity certificates that the device is allowed present.</t>

<t>(3) The device will present its LDevID, if it has one, in preference to its IDevID, if allowed by server policy.</t>

</section>
<section anchor="teap-server-instructs-client-to-perform-brski-flow" title="TEAP Server Instructs Client to Perform BRSKI Flow">

<t>In this flow, the server instructs the client to perform a BRSKI flow by exchanging TLVs once the outer TLS tunnel is established.</t>

<figure title="TEAP Server Instructs Client to Perform BRSKI Flow" anchor="flow-2"><artwork><![CDATA[
                          +----------------+
+--------+                | Authenticator/ |    +------+  +----+
| Client |                |   TEAP-Server  |    | MASA |  | CA |
+--------+                +----------------+    +------+  +----+
    |  EAP-Request/               |                |        |
    |   Type=Identity             |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=Identity             |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
    |   TEAP Start,               |                |        |
    |   Authority-ID TLV          |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   TLS(ClientHello)          |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
    |   TLS(ServerHello,          |                |        |
 (1)|   Certificate,              |                |        |
    |   ServerKeyExchange,        |                |        |
    |   CertificateRequest,       |                |        |
    |   ServerHelloDone)          |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   TLS(Certificate           |                |        |
    |   ClientKeyExchange,        |                |        |
    |   CertificateVerify,        |                |        |
    |   ChangeCipherSpec,         |                |        |
    |   Finished)                 |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
    |   TLS(ChangeCipherSpec,     |                |        |
    |   Finished),                |                |        |
    |   {Crypto-Binding TLV,      |                |        |
    |   Result TLV=Success}       |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   {Crypto-Binding TLV,      |                |        |
    |   Result TLV=Success}       |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
  ** At this stage the outer TLS tunnel is established ** 
  ** The following message exchanges are for BRSKI     **
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
 (2)|   {Request-Action TLV:      |                |        |
    |     Status=Failure,         |                |        |
    |     Action=Process-TLV,     |                |        |
    |     TLV=Request-Voucher,    |                |        |
    |     TLV=Trusted-Server-Root,|                |        |
    |     TLV=CSR-Attributes,     |                |        |
    |     TLV=PKCS#10}            |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
 (3)|   {Request-Voucher TLV}     |                |        |
    |---------------------------->| RequestVoucher |        |
    |                             |--------------->|        |
    |                             |    Voucher     |        |
    |                             |<---------------|        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
 (4)|   {Voucher TLV}             |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
 (5)|   {Trusted-Server-Root TLV} |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
    |   {Trusted-Server-Root TLV} |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   {CSR-Attributes TLV}      |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
    |   {CSR-Attributes TLV}      |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   {PKCS#10 TLV}             |                |        |
    |---------------------------->|                |        |
    |                             |   PKCS#10      |        |
    |  EAP-Request/               |--------------/ | \----->|
    |   Type=TEAP,                |                |        |
    |   {PKCS#7 TLV,              |   PKCS#7       |        |
 (6)|    Result TLV=Success}      |<-------------/ | \------|
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   {Result TLV=Success}      |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Success                |                |        |
    |<----------------------------|                |        |



]]></artwork></figure>

<t>Notes:</t>

<t>(1) If the client has not yet completed the BRSKI flow, then it provisionally accepts the server certificate and must validate it later once BRSKI is complete. The server validates the client certificate using its trust anchor database.</t>

<t>(2) The server instructs the client to start the BRSKI flow by sending a Request-Action TLV that includes a BRSKI-RequestVoucher TLV. The server also instructs the client to request trust anchors, to request CSR Attrites, and to initiate a PKCS certificate enrolment. As outlined in <xref target="RFC7170"/>, the Request-Action TLV is sent after the Crypto-Binding TLV and Result TLV exchange.</t>

<t>(3) The client includes the certificate it received from the server in the RequestVoucher message.</t>

<t>(4) Once the client receives and validates the voucher signed by the MASA, it must verify the certificate it previously received from the server.</t>

<t>(5) As outlined in <xref target="RFC7170"/>, the Trusted-Server-Root TLV is exchanged after the Crypto-Binding TLV exchange, and after the client has used the Voucher to authenticate the TEAP server identity. This is equivalent to section [todo] from <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<t>(6) There is no need for an additional Crypto-Binding TLV exchange as there is no inner EAP method. All BRSKI exchanges are simply TLVs exchanged inside the outer TLS tunnel.</t>

</section>
<section anchor="teap-server-instructs-client-to-reenroll" title="TEAP Server Instructs Client to Reenroll">

<t>In this flow, the server instructs the client to reenroll and get a new LDevID by exchanging TLVs once the outer TLS tunnel is established.</t>

<figure title="TEAP Server Instructs Client to Reenroll" anchor="flow-3"><artwork><![CDATA[
                      +----------------+
+--------+            | Authenticator/ |    +------+  +----+
| Client |            |   TEAP-Server  |    | MASA |  | CA |
+--------+            +----------------+    +------+  +----+
    |  EAP-Request/           |                |        |
    |   Type=Identity         |                |        |
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=Identity         |                |        |
    |------------------------>|                |        |
    |                         |                |        |
    |  EAP-Request/           |                |        |
    |   Type=TEAP,            |                |        |
    |   TEAP Start,           |                |        |
    |   Authority-ID TLV      |                |        |
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=TEAP,            |                |        |
    |   TLS(ClientHello)      |                |        |
    |------------------------>|                |        |
    |                         |                |        |
    |  EAP-Request/           |                |        |
    |   Type=TEAP,            |                |        |
    |   TLS(ServerHello,      |                |        |
    |   Certificate,          |                |        |
    |   ServerKeyExchange,    |                |        |
    |   CertificateRequest,   |                |        |
    |   ServerHelloDone)      |                |        |
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=TEAP,            |                |        |
    |   TLS(Certificate,      |                |        |
    |   ClientKeyExchange,    |                |        |
    |   CertificateVerify,    |                |        |
    |   ChangeCipherSpec,     |                |        |
    |   Finished)             |                |        |
    |------------------------>|                |        |
    |                         |                |        |
    |  EAP-Request/           |                |        |
    |   Type=TEAP,            |                |        |
    |   TLS(ChangeCipherSpec, |                |        |
    |   Finished),            |                |        |
    |   {Crypto-Binding TLV,  |                |        |
    |   Result TLV=Success}   |                |        |
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=TEAP,            |                |        |
    |   {Crypto-Binding TLV,  |                |        |
    |   Result TLV=Success}   |                |        |
    |------------------------>|                |        |
    |                         |                |        |
    |  EAP-Request/           |                |        |
    |   Type=TEAP,            |                |        |
 (1)|   {Request-Action TLV:  |                |        |
    |     Status=Failure,     |                |        |
    |     Action=Process-TLV, |                |        |
    |     TLV=PKCS#10}        |                |        |
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=TEAP,            |                |        |
    |   {PKCS#10 TLV}         |                |        |
    |------------------------>|                |        |
    |                         |   PKCS#10      |        |
    |  EAP-Request/           |--------------/ | \----->|
    |   Type=TEAP,            |                |        |
    |   {PKCS#7 TLV,          |   PKCS#7       |        |
    |    Result TLV=Success}  |<-------------/ | \------|
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=TEAP,            |                |        |
    |   {Result TLV=Success}  |                |        |
    |------------------------>|                |        |
    |                         |                |        |
    |  EAP-Success            |                |        |
    |<------------------------|                |        |

]]></artwork></figure>

<t>(1) The server instructs the client to reenroll by sending a Request-Action TLV that includes a PKCS#10 TLV.</t>

</section>
<section anchor="out-of-band-reenroll" title="Out of Band Reenroll">

<t>This section shows how the device does a reenroll to refresh its LDEvID directly against the registrar outside the context of the TEAP tunnel.</t>

</section>
</section>
<section anchor="teap-tlv-formats" title="TEAP TLV Formats">

<section anchor="brski-tlvs" title="BRSKI TLVs">

<t>BRSKI defines 3 new TEAP TLVs. The following table indicates whether
the TLVs can be included in Request messages from TEAP server to
device, or Response messages from device to TEAP server.</t>

<figure><artwork><![CDATA[
+------------------------+----------+
| TLV                    | Message  |
+------------------------+----------+
| BRSKI-VoucherRequest   | Response |
| BRSKI-Voucher          | Request  |
| CSR-Attributes         | Response |
+------------------------+----------+

]]></artwork></figure>

<t>These new TLVs are detailed in this section.</t>

<section anchor="brski-requestvoucher-tlv" title="BRSKI-RequestVoucher TLV">

<t>This TLV is used by the server as part of a Request-Action TLV to
request from the peer that it initiate a voucher request.  When used
in this fashion, the length of this TLV will be set to zero. The Status field of the Request-Action TLV MUST be set to Failure.</t>

<t>It is also used by the peer to initiate the voucher request.  When
used in this fashion, the length of the TLV will be set to that of the
voucher request, as encoded and described in Section 3.3 in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD1-VoucherRequest   |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                              Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>The M and R bits are always expected to be set to 0.</t>

<t>The server is expected to forward the voucher request to the MASA, and
then return a voucher in a BRSKI-Voucher TLV as described below.  If
it is unable to do so, it returns an TEAP Error TLV with one of
the defined errors or the following:</t>

<figure><artwork><![CDATA[
TBD2-MASA-Notavailable  MASA unavailable
TBD3-MASA-Refused       MASA refuses to sign the voucher

]]></artwork></figure>

<t>The peer terminates the TEAP connection, but may retry at some later
point.  The backoff mechanism for such retries should be appropriate
for the device.  Retries MUST occur no more frequently than once
every two (TBD) minutes.</t>

</section>
<section anchor="brski-voucher-tlv" title="BRSKI-Voucher TLV">

<t>This TLV is transmitted from the server to the peer.  It contains a
signed voucher, as describe in <xref target="RFC8366"/>.</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD4-Voucher          |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                              Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>Upon receiving this TLV the peer will validate the signature of the
voucher, using its pre-installed manufacturer trust anchor (LDevID).
It MUST also validate the certificate used by the server to establish
the TLS connection.</t>

<t>If successful, it installs the new trust anchor contained in the
voucher.</t>

<t>Otherwise, the peer transmits an TEAP error TLV with one of the
following error messages:</t>

<figure><artwork><![CDATA[
TBD5-Invalid-Signature  The signature of the voucher signer is invalid
TBD6-Invalid-Voucher    The form or content of the voucher is not valid
TBD7-Invalid-TLS-Signer The certificate used for the TLS connection
                       could not be validated.

]]></artwork></figure>

</section>
<section anchor="csr-attributes-tlv" title="CSR-Attributes TLV">

<t>The server SHALL transmit this TLV to the peer, either along with the
BRSKI-Voucher TLV or at any time earlier in a communication.  The peer
shall include attributes required by the server in any following CSR.
The value of this TLV is the base64 encoding described in Section
4.5.2 of <xref target="RFC7030"/>.</t>

<figure><artwork><![CDATA[
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD8-CSR-Attributes |         length                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>Again, the M and R values are set to 0.  In the case where the client
is unable to provide the requested attributes, an TEAP-Error is
returned as follows:</t>

<t>TBD9-CSR-Attribute-Fail Unable to supply the requested attributes.</t>

</section>
</section>
<section anchor="existing-teap-tlv-specifications" title="Existing TEAP TLV Specifications">

<t>This section documents allowed usage of existing TEAP TLVs. The definition of the TLV is not changed, however clarifications on allowed values for the TLV fields is documented.</t>

<section anchor="pkcs10-tlv" title="PKCS#10 TLV">

<t><xref target="RFC7170"/> defines the PKCS#10 TLV as follows:</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R|         TLV Type          |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           PKCS#10 Data...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-

]]></artwork></figure>

<t><xref target="RFC7170"/> does not explicitly allow a Length value of zero.</t>

<t>A Length value of zero is allowed for this TLV when the TEAP server sends a Request-Action TLV with a child PKCS#10 TLV to the client. In this scenario, there is no PKCS#10 Data included in the TLV. Clients MUST NOT send a zero length PKCS#10 TLV to the server.</t>

</section>
</section>
<section anchor="tlv-rules" title="TLV Rules">

<t>BRSKI TLVs can only be transported inside the TLS tunnel. The following table provides a guide to which TLVs may be encapsulated in which kind of packets, and in what quantity. The messages are as follows: Request is a TEAP Request, Response is a TEAP Response, Success is a message containing a successful Result TLV, and Failure is a message containing a failed Result TLV.</t>

<t>The following define the meaning of the table entries in the sections below:</t>

<t>0   This TLV MUST NOT be present in the message.</t>

<t>0+  Zero or more instances of this TLV MAY be present in the
    message.</t>

<t>0-1 Zero or one instance of this TLV MAY be present in the message.</t>

<t>1   Exactly one instance of this TLV MUST be present in the
    message.</t>

<t>Request Response Success Failure TLVs
0       0-1      0       0       BRSKI-VoucherRequest
0-1     0        0       0       BRSKI-Voucher
0       0-1      0       0       CSR-Attributes</t>

</section>
</section>
<section anchor="fragmentation" title="Fragmentation">

<t>TEAP is expected to provide fragmentation support. Thus EAP-TEAP-BRSKI
does not specifically provide any, as it is only expected to be used
as an inner method to TEAP.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>The IANA is requested to add entries into the following tables:</t>

<t>The following new TEAP TLVs are defined:</t>

<figure><artwork><![CDATA[
TBD1-VoucherRequest   Described in this document.
TBD4-Voucher          Described in this document.
TBD8-CSR-Attributes   Described in this document.

]]></artwork></figure>

<t>The following TEAP Error Codes are defined, with their meanings
listed here and in previous sections:</t>

<figure><artwork><![CDATA[
TBD2-MASA-Notavailable  MASA unavailable
TBD3-MASA-Refused       MASA refuses to sign the voucher
TBD5-Invalid-Signature  The signature of the voucher signer is invalid
TBD6-Invalid-Voucher    The form or content of the voucher is not valid
TBD7-Invalid-TLS-Signer The certificate used for the TLS connection
                        could not be validated.
TBD9-CSR-Attribute-Fail Unable to supply the requested attributes.

]]></artwork></figure>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>BRSKI <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> provides a zero touch
  way for devices to enroll in a certification authority (CA). It assumes
  the device has IP connectivity. For networks that will not grant
  IP connectivitiy before authenticating (with a local credential)
  this poses a Catch-22– can’t get on the network without a credential
  and can’t get a credential without getting on the network.</t>

<t>This protocol provides a way for BRSKI to be in an EAP method
  which allows the BRSKI conversation to happen as part of EAP
  authentication and prior to obtaining IP connectivity.</t>

<t>The  security considerations of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>
  apply to this protocol. Running BRSKI through EAP introduces some
  additional areas of concern though.</t>

<section anchor="issues-with-provisionally-authenticated-teap" title="Issues with Provisionally Authenticated TEAP">

<t>This protocol establishes an unauthenticated TLS connection and passes
  data through it. Provided that the only messages passed in this state
  are self-protected BRSKI messages this does not present a problem.
  Passing any other messages or TLVs prior to authentication of the
  provisional TLS connection could potentially introduce security issues.</t>

<t>While the TLS connection is unauthenticated, it must still be validated
  to the fullest extent possible. It is critical that the device and the
  TEAP server perform all steps in TLS– checking the validity of the
  presented certificate, validating the signature using the public key
  of the certificate, etc– except ensuring the trust of the presented
  certificate.</t>

</section>
<section anchor="attack-against-discovery" title="Attack Against Discovery">

<t>The device discovery technique specified in this protocol is the standard
  EAP server discovery process. Since it is trivial to set up an 802.11
  wireless access point and advertise any network, an attacker can impersonate
  a legitimate wireless network and attract unprovisioned pledges. Given that
  an unprovisioned device will not know the legitimate network to connect
  to, it will probably attempt the first network it finds, making the attack
  that much easier. This allows for a “rogue registrar” to provision and
  take control of the device.</t>

<t>If the MASA verifies ownership prior to issuance of a voucher, this attack
  can be thwarted. But if the MASA is in reduced security mode and does not
  verify ownership this attack cannot be prevented. Registrars SHOULD use the
  audit log of a MASA when deploying newly purchased equipment in order to
  mitigate this attack.</t>

<t>Another way to mitigate this attack is through normal “rogue AP” detection
  and prevention.</t>

</section>
<section anchor="teap-server-as-registration-authority" title="TEAP Server as Registration Authority">

<t>If the TEAP server is logically separate from the Certification Authority (CA)
  (see <xref target="arch"/>) it will be acting as a Registration Authority (RA) when it
  obtains the PKCS#10 TLV and replies with a PKCS#7 TLV (see <xref target="RFC7170"/>, Sections
  4.2.16 and 4.2.17, respectively). The assurance a RA makes to a CA is that the
  public key in the presented CSR is bound to an authenticated identity in way
  that will assure non-repudiation.</t>

<t>To make such an assurance, the TEAP server MUST authenticate the provisional
  TLS connection with the device by validating the voucher response received
  from the MASA. In addition, it is RECOMMENDED that the TEAP server indicate
  that proof-of-possession (see <xref target="RFC7170"/>, Section 3.8.2) is required by
  including the challengePassword OID in the CSR Attributes TLV.</t>

</section>
<section anchor="trust-of-registrar" title="Trust of Registrar">

<t>The device accepts a trusted server (CA) certificate and installs it
  in its trust anchor database during step 5 (see <xref target="bint"/>). This can
  happen only after the provisional TLS connection has been authenticated
  using the voucher and the Crypto-Binding TLV has been validated.</t>

</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>The authors would like to thank Brian Weis for his assistance, and
Alan Dakok for improving language consistency.  In addition, with
ruthlessly “borrowed” the concept around NAI handling from Tuomas Aura
and Mohit Sethi.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

<reference anchor="IEEE8021AR" >
  <front>
    <title>Secure Device Identity</title>
    <author >
      <organization>Institute for Electrical and Electronics Engineers</organization>
    </author>
    <date year="1998"/>
  </front>
</reference>
<reference anchor="IEEE8021X" >
  <front>
    <title>IEEE Standard for Local and metropolitan area networks--Port-Based Network Access Control</title>
    <author >
      <organization>Institute for Electrical and Electronics Engineers</organization>
    </author>
    <date year="2010"/>
  </front>
</reference>




<reference anchor="I-D.ietf-anima-bootstrapping-keyinfra">
<front>
<title>Bootstrapping Remote Secure Key Infrastructures (BRSKI)</title>

<author initials='M' surname='Pritikin' fullname='Max Pritikin'>
    <organization />
</author>

<author initials='M' surname='Richardson' fullname='Michael Richardson'>
    <organization />
</author>

<author initials='M' surname='Behringer' fullname='Michael Behringer'>
    <organization />
</author>

<author initials='S' surname='Bjarnason' fullname='Steinthor Bjarnason'>
    <organization />
</author>

<author initials='K' surname='Watsen' fullname='Kent Watsen'>
    <organization />
</author>

<date month='June' day='17' year='2019' />

<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this a remote secure key infrastructure (BRSKI) is created using manufacturer installed X.509 certificate, in combination with a manufacturer's authorizing service, both online and offline.  Bootstrapping a new device can occur using a routable address and a cloud service, or using only link-local connectivity, or on limited/disconnected networks.  Support for lower security models, including devices with minimal identity, is described for legacy reasons but not encouraged.  Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device but the established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-anima-bootstrapping-keyinfra-22' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-anima-bootstrapping-keyinfra-22.txt' />
</reference>



<reference  anchor="RFC3748" target='https://www.rfc-editor.org/info/rfc3748'>
<front>
<title>Extensible Authentication Protocol (EAP)</title>
<author initials='B.' surname='Aboba' fullname='B. Aboba'><organization /></author>
<author initials='L.' surname='Blunk' fullname='L. Blunk'><organization /></author>
<author initials='J.' surname='Vollbrecht' fullname='J. Vollbrecht'><organization /></author>
<author initials='J.' surname='Carlson' fullname='J. Carlson'><organization /></author>
<author initials='H.' surname='Levkowetz' fullname='H. Levkowetz' role='editor'><organization /></author>
<date year='2004' month='June' />
<abstract><t>This document defines the Extensible Authentication Protocol (EAP), an authentication framework which supports multiple authentication methods.  EAP typically runs directly over data link layers such as Point-to-Point Protocol (PPP) or IEEE 802, without requiring IP.  EAP provides its own support for duplicate elimination and retransmission, but is reliant on lower layer ordering guarantees.  Fragmentation is not supported within EAP itself; however, individual EAP methods may support this.  This document obsoletes RFC 2284.  A summary of the changes between this document and RFC 2284 is available in Appendix A.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3748'/>
<seriesInfo name='DOI' value='10.17487/RFC3748'/>
</reference>



<reference  anchor="RFC7170" target='https://www.rfc-editor.org/info/rfc7170'>
<front>
<title>Tunnel Extensible Authentication Protocol (TEAP) Version 1</title>
<author initials='H.' surname='Zhou' fullname='H. Zhou'><organization /></author>
<author initials='N.' surname='Cam-Winget' fullname='N. Cam-Winget'><organization /></author>
<author initials='J.' surname='Salowey' fullname='J. Salowey'><organization /></author>
<author initials='S.' surname='Hanna' fullname='S. Hanna'><organization /></author>
<date year='2014' month='May' />
<abstract><t>This document defines the Tunnel Extensible Authentication Protocol (TEAP) version 1.  TEAP is a tunnel-based EAP method that enables secure communication between a peer and a server by using the Transport Layer Security (TLS) protocol to establish a mutually authenticated tunnel.  Within the tunnel, TLV objects are used to convey authentication-related data between the EAP peer and the EAP server.</t></abstract>
</front>
<seriesInfo name='RFC' value='7170'/>
<seriesInfo name='DOI' value='10.17487/RFC7170'/>
</reference>



<reference  anchor="RFC7030" target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author initials='M.' surname='Pritikin' fullname='M. Pritikin' role='editor'><organization /></author>
<author initials='P.' surname='Yee' fullname='P. Yee' role='editor'><organization /></author>
<author initials='D.' surname='Harkins' fullname='D. Harkins' role='editor'><organization /></author>
<date year='2013' month='October' />
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference  anchor="RFC8366" target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author initials='K.' surname='Watsen' fullname='K. Watsen'><organization /></author>
<author initials='M.' surname='Richardson' fullname='M. Richardson'><organization /></author>
<author initials='M.' surname='Pritikin' fullname='M. Pritikin'><organization /></author>
<author initials='T.' surname='Eckert' fullname='T. Eckert'><organization /></author>
<date year='2018' month='May' />
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>




    </references>



<section anchor="changes-from-earlier-versions" title="Changes from Earlier Versions">

<t>Draft -03:
  * Merge EAP server and Registrar
  * Security considerations
  * References improvements
  * Add Dan Harkins as co-author</t>

<t>Draft -02:
  * Flow corrections</t>

<t>Draft -01:
  * Add packet descriptions, IANA considerations, smooth out language.</t>

<t>Draft -00:</t>

<t><list style="symbols">
  <t>Initial revision</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAEd5H10AA+19aXfbVpLod/yK++IPsTokY0tedSadpiV5oo63Jyl23qRz
5lySVyLGIMAGQClsx/3bX213A0AKXrJ6NJkZi+Ld6tZedauGw2FSp3Vm9tWj
oqirutTLZZpfqG/NWh3n56WGj1bTelUaVVyaUh2NXyR6MinNJYw4Of32WJ3B
R/TxrJjmegEzzUp9Xg8zo8uh0cthjf9nUlav0+GtvWSqa3NRlOt9VdWzJEmX
5b6CJap699ath7d2k9dmfVWUs31YvTZlburhIU6XJFWt89l/66zIYYm1qZJl
uq9+qIvpQFVFWZfmvIJ/rRf4jx+TRK/qeVHuJ2qYKPhJ82pfHY3UE9gVfcBb
PcrSovYfFuXFvjpIq2mhTtdVbRYVfQwwMKbeVyfpdF6nCKSqMuo+/W1azGCe
g2+GD/Zu3eFP0hpO90pnWVqZLDO5fG+V13js06u0/pcpMzgN/WE5pxN9cee2
unNHPbj/QD0EUNCfzEKn2b5CSP5tirsaTYtFdKLnI/W4TE0WHOn5lcmDD685
0u37t9SrkTrT1ULn6rAcBYd6ePf2XnikU/jG34vKDNTBOD7Td3lam5k6reFy
q3DrxTluZMPmn43UgV4MXwG+mTo4wTOdT9fNP/2258inenEFm9lwksOR+kaX
r+HfwTEOYZnwUzqB+gaIBTF7WQJ2REfYgx91Oi3qGmhxlZlLXc6iU9y62zhF
rdVBpkv9DgeZzXlHf9PlaqKBvIDYXld0oCQvyoWu00uzjyOOj46OHtzavT0+
oV/hRxjFqZkiOzg0l+nUqOOZyeEPa/mOIzv5gUPrPP0XTFvkSNMVfHdVG3Ve
AC/JzLQu06nOFBCD/Frk6bQCEF2kuTFlJRNVBvCoAoZU+KkZyrhN99Glzlbw
GWx7BPuWj2cAA0CQhw8fhMf6vnEq/Bzhlc8A7LS9J4Xd2cLAvpZFlsKflS6N
Vm5F3omAcTh8AZxo+EhXAPtn/KEaT6emqtRBATdTZL87MH0fQWn31u1bSTIc
DpWeIJ+bAuM9ztXUlLVOc2XyyxSWXsCVA7OFD4BTg1DAXWo1Y4SoC2WAV0+A
+81hw2uV6bUpk3oOWA4IulisYOt0UJyiVmkF8EMQ6XJNM9VzXQeTTYxaAvSB
Y66TaWkI3XRmZiOlzuYwGP7TqjQZYW62VkZXaxwxycwCx1dFdmnU1Ry4ok5k
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
Fd60FfDB1gG+xsRXEhV6u2WFPzoBqV8FSr8WtspW+gx4l4tjpRdrT6JlMbwd
1ZvsMkWw4iS+AkSnEYgK1U4I8op9HFtyGj6FpvHtPBb8Q8aTx4FabhNCnrbI
Axj6uZw735X4sgnx7Q21UwnijfnHkV2vBKOgQrgFek8SbTKt5T0bxeddDSu7
LtgYIPraj+TZXP/APMDo0UeU09hlzbVLaLSL+eB293bCPH6Ki9okAf+yYRDk
ExZYyfAD8rkaVvCxe/5x4KzXFxIVY/ii32CLeRy/H/EmsA+tBQg6WVsj3nmD
XKZFKxaE3lD/utXW0d1I3f0NSCbtbUak/GuTMWl5w2aDEv91sNmw7N5u5w4C
DtUhT7u5VINdqU3WWq/RG5ldN8Nrr735p8foDfKr5+gPOfe2Y3fInvbam396
n/vD7rslxHuP7jRz+47utnl7jf7j49r7w7zTaO41+lPG1E6r+9rRW03wvmt3
2+N9R3cb5++2dtNS7zX6U6exQMF8t9Hddn/v0Z1OgN6jOz0CfUd3uwd6jf7E
eUtfT0x7dLezoe/obpu67+huA7vX6E+YO/xmMP/NaOwvf1G2AgQYWhe97DAc
xEPRbvUBbWsl+0rRGKrHhABpAqJw0B+ZLYhX/U07HXS//9qKOgivqq8ec47c
uzFyJYm0X73gNIChw9F+oxE77fZf2oy1dxrdUS9p0H90XFToXXcuWcJvO7+8
afSnyNAksvGmcdUIxLf91r6GJTUSk98Nahs5XG+Y23W7dr59dBMbfje85Q7f
WOumeq/9SeL5XYbahiJub3/Hovc3xDX59QOg9inimvz6pl0X723P0Z8yrr0/
1D5lXAueRb2jNPiFcc1ubMPobbgW7wXjLv+QXX1UqN0PzLfWzu93jL55j2TJ
ZjuugYl+58P/xdQ3m6F23ehfGFOvGb0h8N9r9HvfdzMnYLcrJ6BfYPb6ZIGP
GJufflBsPgzLxy+kbPWfzlfn3a18WoH+TWHozmql71oYf9NrzOhM1BZg0zbs
E6ZGFkbwFyzdSxKSDGN6EBHUYOInsu0iuNSMu1FrMnoHwLH6rnKRUsZFn9dS
16/jtQFuI+ib4xLwfeJC1/vQTQ9DG5kkNuWiu0o/rnFnRzXLz7i3d3HZdHrA
JBP48ib2GVeQ7uILVjd22dVMo5n6Alu6u3M9tDfVlKbnXQzB2Xa4+yqb9CbE
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

-->

</rfc>

