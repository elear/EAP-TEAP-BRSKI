<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-lear-eap-teap-brski-03" category="std">

  <front>
    <title abbrev="BRSKI TEAP EAP">Bootstrapping Key Infrastructure over EAP</title>

    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="O." surname="Friel" fullname="Owen Friel">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 W. Tasman Dr.</street>
          <city>San Jose, CA</city>
          <code>95134</code>
          <country>United States</country>
        </postal>
        <email>ofriel@cisco.com</email>
      </address>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="Nancy Cam-Winget">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 W. Tasman Dr.</street>
          <city>San Jose, CA</city>
          <code>95134</code>
          <country>United States</country>
        </postal>
        <email>ncamwing@cisco.com</email>
      </address>
    </author>
    <author initials="D." surname="Harkins" fullname="Dan harkins">
      <organization>HP Enterprise</organization>
      <address>
        <postal>
          <street>3333 Scott Boulevard</street>
          <city>Santa Clara, CA</city>
          <code>95054</code>
          <country>United States</country>
        </postal>
        <email>dharkins@arubanetworks.com</email>
      </address>
    </author>

    <date year="2019" month="June" day="28"/>

    
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>In certain environments, in order for a device to establish any layer
three communications, it is necessary for that device to be properly
credentialed.  This is a relatively easy problem to solve when a
device is associated with a human being and has both input and display
functions.  It is less easy when the human, input, and display
functions are not present.  To address this case, this memo specifies
extensions to the Tunnel Extensible Authentication Protocol (TEAP)
method that leverages Bootstrapping Remote Secure Key Infrastructures
(BRSKI) in order to provide a credential to a device at layer two.
The basis of this work is that a manufacturer will introduce the
device and the local deployment through cryptographic means.  In this
sense the same trust model as BRSKI is used.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t><xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> (BRSKI) specifies a means to
provision credentials to be used as credentials to operationally
access networks.  It was designed as a standalone means where some
limited access to an IP network is already available.  This is not
always the case.  For example, IEEE 802.11 networks generally require
authentication prior to any form of address assignment.  While it is
possible to assign an IP address to a device on some form of an open
network, or to accept some sort of default credential to establish
initial IP connectivity, the steps that would then follow might well
require that the device is placed on a new network, requiring reseting
all layer three parameters.</t>

<t>A more  natural approach  in such  cases is to  more tightly  bind the
provisioning  of credentials with  the authentication  mechanism.  One
such way  to do this is  to make use of  the Extensible Authentication
Protocol (EAP)  <xref target="RFC3748"/> and the  Tunnel Extensible Authentication
Protocol  (TEAP)  method  <xref target="RFC7170"/>.    Thus  we  define  new  TEAP
Type-Length-Value  (TLV) objects  that can  be used  to  transport the
BRSKI protocol messages within the context of a TEAP TLS tunnel.</t>

<t><xref target="RFC7170"/> discusses the notion of provisioning peers.  Several
different mechanisms are available.  Section 3.8 of that document
acknowledges the concept of not initially authenticating the outer TLS
session so that provisioning may occur.  In addition, exchange of
multiple TLV messages between client and EAP server permits multiple
provisioning steps.</t>

<section anchor="terminology" title="Terminology">

<t>The reader is presumed to be familiar with EAP terminology as stated
in <xref target="RFC3748"/>.  In addition, the following terms are commonly used in
this document.</t>

<t><list style="symbols">
  <t>BRSKI: Bootstrapping Remote Secure Key Infrastructures, as defined in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.  The term is also used
to refer to the flow described in that document.</t>
  <t>EST: Enrollment over Secure Transport, as defined in <xref target="RFC7030"/>.</t>
  <t>Voucher: a signed JSON object as defined in <xref target="RFC8366"/>.</t>
</list></t>

</section>
</section>
<section anchor="arch" title="TEAP BRSKI Architecture">

<t>The TEAP BRSKI architecture is illustrated in
<xref target="brski-architecture"/>. The device talks to the TEAP server via the
Authenticator using any compliant transport such as <xref target="IEEE8021X"></xref>.
The architecture illustrated shows an Authenticator distinct from
the TEAP server. This is a deployment optimization and when so
deployed the communication between Authenticator and TEAP server
is a AAA protocol such as RADIUS or DIAMETER.</t>

<t>The architecture illustrated shows a co-located TEAP server and
BRSKI registrar. Not only are these two functions co-located, they
MUST be the same entity. This ensures that the entity identified in
the device’s voucher request (the TEAP server) is the same entity
that signs the voucher request (the registrar).</t>

<t>The registrar communicates with the BRSKI MASA service for the
purposes of getting signed vouchers. [[TODO: I guess we should
mention TEAP server talking to vendor default registrar in the
cloud]]</t>

<t>The registrar also comunicates with a Certificate Authority in order
to issue LDevIDs. The architecture shows the registrar and CA as being
two logically separate entities, however the CA may be integrated into
the registrar. The device is not explicitly aware of whether the CA
and registrar functions are integrated.</t>

<figure><artwork><![CDATA[
+--------+     +---------+     +---------+     +------+
|        |     |         |     |  TEAP   |<--->| MASA |
|        |     | Authen- |     | server  |     +------+
| Device |<--->| ticator |<--->|         |
|        |     |         |     |  BRSKI  |     +------+
|        |     |         |     |Registrar|<--->|  CA  |
+--------+     +---------+     +---------+     +------+

]]></artwork></figure>

</section>
<section title="BRSKI Bootstrap and Enroll Operation" anchor="brski-architecture">

<t>This section summarises the current BRSKI operation. The BRSKI flow
assumes the device has an IDevID and has a manufacturer installed
trust anchor that can be used to validate the BRSKI voucher. The BRSKI
flow compromises serveral main steps from the perspective of the
device:</t>

<t><list style="symbols">
  <t>Step 1: Device discovers the registrar</t>
  <t>Step 2: Device establishes provisional TLS connection to registrar</t>
  <t>Step 3: Device sends voucher request message and receives signed voucher response</t>
  <t>Step 4: Device validates voucher and validates provisional TLS connection to registrar</t>
  <t>Step 5: Device downloads additional local domain CA information</t>
  <t>Step 6: Device downloads Certificate Signing Reqeust (CSR) attributes</t>
  <t>Step 7: Device does a certificate enroll to obtain an LDevID</t>
  <t>Step 8: Device periodically reenrolls via EST to refresh its LDevID</t>
</list></t>

<t>Most of the operational steps require the device, and thus its internal state machine, to automatically complete the next step without being explicitly instructed to do so by the registrar. For example, the registrar does not explicitly tell the device to download additional local domain CA information, or to do an EST enroll to obtain an LDevID.</t>

<section anchor="bint" title="Executing BRSKI in a TEAP Tunnel">

<t>This section outlines how the main BRSKI steps outlined above map to TEAP, and how BRSKI and enrollment can be accomplished inside a TEAP TLS tunnel. The following new TEAP TLVs are introduced:</t>

<t><list style="symbols">
  <t>BRSKI-VoucherRequest</t>
  <t>BRSKI-Voucher</t>
  <t>CSR-Attributes</t>
</list></t>

<t>The following steps outline how the above BRSKI flow maps to TEAP.</t>

<t><list style="symbols">
  <t>Step 1: Device discovers the registrar</t>
</list></t>

<t>When BRSKI is executed in a TEAP tunnel, the device exchanges BRSKI TLVs with the TEAP server. The discovery process for devices is therefore the standard wired or wireless LAN EAP server discovery process. The discovery processes outlined in section 4 of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> are not required for initial discovery of the registrar.</t>

<t><list style="symbols">
  <t>Step 2: Device establishes provisional TLS connection to registrar</t>
</list></t>

<t>The device establishes an outer TEAP tunnel with the TEAP server and
does not validate the server certificate. 
The device presents its LDevID as its identity
certificate if it has a valid LDevID, otherwise it presents its
IDevID. The TEAP server validates the device’s certificate using
its implicit or explicit trust anchor database. If the device
presents an IDevID it is verified against a database of trusted
manufacturer certificates. Server policy may also be used to control
which certificate the device is allowed present, as described in
section {pki-certificate-authority-considerations}.</t>

<t>If the presented credential is sufficient to grant access, the TEAP server can return a TEAP Result TLV indicating success immediately. The device may still send a Request-Action TLV including a BRSKI-VoucherRequest TLV in response to the TEAP Result TLV if it does not have, but requires, provisioning of trust anchors for validating the TEAP server certificate. Note that no inner EAP method is required for this, only an exchange of TEAP TLVs.</t>

<t>[todo] Question: as the device wants the server to reply with a BRSKI-Voucher TLV, does it really send a Request-Action TLV containing a BRSKI-VoucherRequest TLV, or does it send a Request-Action TLV containing a BRSKI-Voucher TLV?? The TEAP draft is a bit ambiguous here. Normally, if one end sends a Request-Action including XXX-TLV, it means it wants the far end ot send an XXX-TLV…</t>

<t>[todo] Question: general TEAP protocol question: does the device have to send a Request-Action w/BRSKI-VoucherRequest or can it send a BRSKI-VoucherRequest on its own? I’m not clear on this.</t>

<t>If the TEAP server requires that the device execute a BRSKI flow, the server sends a Request-Action TLV that includes a BRSKI-VoucherRequest TLV. For example, if the device presented its IDevID but the TEAP server requires an LDevID.</t>

<t>[todo] Question: to nit pick, the server should send a Request-Action TLV including a PKCS#10 TLV to tell the client to enroll. How does the server really know that the client has the correct trust established (as previously received by a BRSKI-Voucher)? If the client sends an IDevID, does server always send a Request-Action including both BRSKI-VoucherRequest and PKCS#10 TLVs? Whats the client behaviour? I assume client can spontaneously send BRSKI-VoucherRequest and/or PCSK#10 without being explicitly instructed to. Just need to get the language correct here.</t>

<t>The TEAP server may also require the device to reenroll, for example, if the device presented a valid LDevID that is very closed to expiration. The server may instruct a device to reenroll by sending a Request-Action TLV that includes a zero byte length PKCS#10 TLV.</t>

<t><list style="symbols">
  <t>Step 3: Device sends voucher request message and receives signed voucher response</t>
</list></t>

<t>The device sends a BRSKI-RequestVoucher TLV to the TEAP server. The
TEAP server forwards the RequestVoucher message to the MASA server,
and the MASA server replies with a signed voucher. The TEAP server
sends a BRSKI-Voucher TLV to the device.</t>

<t>If the MASA server does not issue a signed voucher, the TEAP server
sends an EAP-Error TLV with a suitable error code to the device.</t>

<t>For wireless devices in particular, it is important that the MASA
server only return a voucher for devices known to be associated with a
particular registrar.  In this sense, success indicates that the
device is on the correct network, while failure indicates the device
should try to provision itself within wireless networks (e.g, go to
the next SSID).</t>

<t><list style="symbols">
  <t>Step 4: Device validates voucher and validates provisional TLS connection to registrar</t>
</list></t>

<t>The device validates the signed voucher using its manufacturer
installed trust anchor, and uses the CA information in the voucher to
validate the TLS connection to the TEAP server.</t>

<t>If the device fails to validate the voucher, then it sends a TEAP-Error TLV indicating failiure to the TEAP server.</t>

<t>Similarly, if the device validates the voucher, but fails to validate the provisional TLS connection, then it sends a TEAP-Error TLV indicating failure to the TEAP server. Note that the outer TLS tunnel has already been established, thus allowing the client to send a TEAP-Error TLV to the server inside that tunnel to indicate that it failed to verify the provisionally accepted outer TLS tunnel server identity.</t>

<t><list style="symbols">
  <t>Step 5: Device downloads additional local domain CA information</t>
</list></t>

<t>On completion of the BRSKI flow, the device SHOULD send a
Trusted-Server-Root TLV to the TEAP server in order to discover
additional local domain CAs. This is equivalent to section [todo] from <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<t><list style="symbols">
  <t>Step 6: Device downloads CSR attributes</t>
</list></t>

<t>No later than the completion of step 5, server MUST send a
CSR-Attributes TLV to peer server in order to discover the correct
fields to include when it enrolls to get an LDevID.</t>

<t><list style="symbols">
  <t>Step 7: Device does a certificate enroll to obtain an LDevID</t>
</list></t>

<t>When executing the BRSKI flow inside a TEAP tunnel, the device does
not directly leverage EST when doing its initial enroll. Instead, the
device uses the existing TEAP PKCS#10 and PCKS#7 TEAP mechanisms.</t>

<t>Once the BRSKI flow is complete, the device can now send a PKCS#10 TLV
to enroll and request an LDevID. If the TEAP server instructed the
device to start the BRSKI flow via a Request-Action TLV that includes
a BRSKI-RequestVoucher TLV, then the device MUST send a PKCS#10 in
order to start the enroll process. The TEAP server will handle the
PKCS#10 and ultimately return a PKCS#7 including an LDevID to the
device.</t>

<t>If the TEAP server granted the device access on completion of the
outer TEAP TLS tunnel in step 2 without sending a Request-Action TLV,
the device does not have to send a PKCS#10 to enroll.</t>

<t>At this point, the device is said to be provisioned for local network
access, and may authenticate in the future via 802.1X with its newly
acquired credentials.</t>

<t><list style="symbols">
  <t>Step 8: Device periodically reenrolls to refresh its LDevID</t>
</list></t>

<t>When a device’s LDevID is close to expiration, there are two options
for re-enrollment in order to obtain a fresh LDevID. As outlined in
Step 2 above, the TEAP server may instruct the device to reenroll by
sending a Request-Action TLV including a PKCS#10 TLV. If the TEAP
server explicilty instructs the device to reenroll via these TLV
exchange, then the device MUST send a PKCS#10 to reenroll and request
a fresh LDevID.</t>

<t>However, the device SHOULD reenroll if it determines that its LDevID
is close to expiration without waiting for explicit instruction from
the TEAP server. There are two options to do this.</t>

<t>Option 1: The device reenrolls for a new LDevID directly with the EST
CA outside the context of the 802.1X TEAP flow. The device uses the
registrar discovery mechanisms oulined in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> to discover the registrar
and the device sends the EST reenroll messages to the discovered
registrar endpoint. No new TEAP TLVs are defined to facilitate
discover of the registrar or EST endpoints inside the context of the
TEAP tunnel.</t>

<t>Option 2: When the device is performing a periodic 802.1X
authentication using its current LDevID, it reenrolls for a new LDevID
by sending a PKCS#10 TLV inside the TEAP TLS tunnel.</t>

</section>
</section>
<section anchor="pki-certificate-considerations" title="PKI Certificate Considerations">

<t>Careful consideration must be given to PKI certificate authority handling when:</t>

<t><list style="symbols">
  <t>Establishing the TEAP tunnel</t>
  <t>Establishing trust using BRSKI</t>
</list></t>

<t>Additionally, consideration must be given to IDevID and LDevID expiration times.</t>

<t>These are described in more detail here.</t>

<section anchor="teap-tunnel-establishment" title="TEAP Tunnel Establishment">

<t>Because this method establishes a client identity, and for purposes of
partioning of responsibility, the peer uses a generic identity string
of teap-brsk@TBD1 as its network access identifier (NAI).</t>

<t>The client sends its ClientHello to initiate TLS tunnel
establishment. It is possible for the TEAP server to restrict the
certificates that the client can use for tunnel establishment by
including a list of CA distinguished names in the
certificate_authorities field in the CertificateRequest
message. Network operators may want to do this in order to restrict
network access to clients that have a certificate signed by one of a
small set of trusted manufacturer/supplier CAs. If the client has both
an IDevID and an LDevID, the client should present the LDevID in
preference to its IDevID if allowed by server policy.</t>

<t>In practice, network operators will likely want to onboard devices from a large number of device manufacturers, with each manufacturer using a different root CA when issuing IDevIDs. If the number of different manufacturer root CAs is large, this could result in very large TLS handshake messages. Operators may prefer to include no CAs in the certificate_authorities field thus allowing devices to present IDevIDs signed by any CA when establishing the TEAP tunnel, and instead enforce policy at LDevID enrollment time.</t>

<t>It is recommended that the client validate the certificate presented
by the server in the server’s Certificate message, but this may not be
possible for clients that have not yet provisioned appropriate trust
anchors. If the client is in the provisioning phase and
has not yet completed a BRSKI flow, it will not have trust anchors
installed yet, and thus will not be able to validate the server’s
certificate. The client must however note the certificate presented by
the server for (i) inclusion in the BRSKI-RequestVoucher TLV and for
(ii) validation once the client has discovered the local domain trust
anchors.</t>

<t>If the client does not present a suitable certificate to the server, the server MUST terminate the connection and fail the EAP request. If the TEAP server is unable to validate the client’s certificate using its implicit or explicit trust anchor database it MUST fail the EAP request.</t>

<t>On establishment of the outer TLS tunnel, the TEAP server will make a policy decision on next steps. Possible policy decisions include:</t>

<t><list style="symbols">
  <t>Option 1: Server grants client full network access and returns EAP-Success. This will typically happen when the client presents a valid LDevID. Network policy may grant client network access based on IDevID without requiring the device to enroll to obtain an LDevID.</t>
  <t>Option 2: Server requires that client perform a full BRSKI flow, and then enroll to get an LDevID. This will typically happen when the client presents a valid IDevID and network policy requires all clients to have LDevIDs. The server sends a Request-Action TLV that includes a BRSKI-RequestVoucher TLV to the client to instruct it to start the BRSKI flow.</t>
  <t>Option 3: Server requires that the client reenroll to obtain a new LDevID. This could happen when the client presents a valid LDevID that is very close to expiration time, or the server’s policy requires an LDevID update. The server sends an Action-Request TLV including a PKCS#10 TLV to the client to instruct it to reenroll.</t>
</list></t>

</section>
<section anchor="brski-trust-establishment" title="BRSKI Trust Establishment">

<t>If the server requires that client perform a full BRSKI flow, it sends a Request-Action TLV that includes a zero byte length BRSKI-RequestVoucher TLV to the client. The client sends a new BRSKI-RequestVoucher TLV to the server, which contains all data specified in <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.2. The client includes the server certificate it received in the server’s Certificate message during outer TLS tunnel establishment in the proximity-registrar-cert field. The client signs the request using its IDevID.</t>

<t>The server includes all additional information as required by <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.4 and signs the request prior to forwarding to the MASA.</t>

<t>The MASA responds as per <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.5. The response may indicate failure and the server should react accordingly to failures by sending a failure response to the client, and failing the TEAP method.</t>

<t>If the MASA replies with a signed voucher and a successful result, the server then forwards this response to the client in a BRSKI-Voucher TLV.</t>

<t>When the client receives the signed voucher, it validates the signature using its built in trust anchor list, and extracts the pinned-domain-cert field. The client must use the CA included in the pinned-domain-cert to validate the certificate that was presented by the server when establishing the outer TLS tunnel. If this certificate validation fails, the client must fail the TEAP request and not connect to the network.</t>

<t>[TBD- based on client responses, the registrar sends a status update
to the MASA]</t>

</section>
<section anchor="certificate-expiration-times" title="Certificate Expiration Times">

<t><xref target="IEEE8021AR"></xref> section 7.2.7.2 states:</t>

<t><list style='empty'>
  <t>notAfter: The latest time a DevID is expected to be used. Devices possessing an IDevID are expected to operate indefinitely into the future and should use the value 99991231235959Z. Solutions verifying a DevID are expected to accept this value indefinitely.</t>
</list></t>

<t>TEAP servers SHOULD follow the 802.1AR standard when validating IDevIDs.</t>

<t>TEAP servers SHOULD reject LDevIDs with expired certificates and SHOULD NOT allow clients to connect with recently expired LDevIDs. If a client presents a recently expired LDevID it SHOULD be forced to authenticate using its IDevID and then reenroll to obtain a valid LDevID.</t>

</section>
</section>
<section anchor="channel-and-crypto-binding" title="Channel and Crypto Binding">

<t>As the TEAP BRSKI flow does not define or require an inner EAP method, there is no explicit need for exchange of Channel-Binding TLVs between the device and the TEAP server.</t>

<t>The TEAP BRSKI TLVs are expected to occur at the beginning of the TEAP Phase 2 and MUST occur before the final Crypto-Binding TLV.  This draft does not exclude the possibility of having other EAP methods occur following the TEAP BRSKI TLVs and as such, the Crypto-Binding TLV process rules as defined in <xref target="RFC7170"/> apply.</t>

</section>
<section anchor="protocol-flows" title="Protocol Flows">

<t>This section outlines protocol flows that map to the three server policy
options described in section <xref target="teap-tunnel-establishment"/>. The
protocol flows illustrate a TLS1.2 exchange. Pertinent notes are
outlined in the protocol flows.</t>

<section anchor="teap-server-grants-access" title="TEAP Server Grants Access">

<t>In this flow, the server grants access as server policy allows the client to access the network based on the identity certificate that the client presented. This means that either (i) the client has previously completed BRSKI and has presented a valid LDevID or (ii) the client presents an IDevID and network policy allows access based purely on IDevID.</t>

<figure title="TEAP Server Grants Access" anchor="flow-1"><artwork><![CDATA[

                      +----------------+
+--------+            | Authenticator/ |    +------+
| Client |            |   TEAP-Server  |    | MASA |
+--------+            +----------------+    +------+
    |  EAP-Request/           |                |
    |   Type=Identity         |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=Identity         |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
    |   TEAP Start,           |                |
    |   Authority-ID TLV      |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
    |   TLS(ClientHello)      |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
    |   TLS(ServerHello,      |                |
 (1)|   Certificate,          |                |
    |   ServerKeyExchange,    |                |
 (2)|   CertificateRequest,   |                |
    |   ServerHelloDone)      |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
 (3)|   TLS(Certificate,      |                |
    |   ClientKeyExchange,    |                |
    |   CertificateVerify,    |                |
    |   ChangeCipherSpec,     |                |
    |   Finished)             |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
    |   TLS(ChangeCipherSpec, |                |
    |   Finished),            |                |
    |   {Crypto-Binding TLV,  |                |
    |   Result TLV=Success}   |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
    |   {Crypto-Binding TLV,  |                |
    |   Result TLV=Success}   |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Success            |                |
    |<------------------------|                |


]]></artwork></figure>

<t>Notes:</t>

<t>(1) If the client has completed the BRSKI flow and has locally significant trust anchors, it must validate the Certificate received from the server. If the client has not yet completed the BRSKI flow, then it provisionally accepts the server Certificate and must validate it later once BRSKI is complete.</t>

<t>(2) The server may include certificate_authorities field in the CertificateRequest message in order to restrict the identity certificates that the device is allowed present.</t>

<t>(3) The device will present its LDevID, if it has one, in preference to its IDevID, if allowed by server policy.</t>

</section>
<section anchor="teap-server-instructs-client-to-perform-brski-flow" title="TEAP Server Instructs Client to Perform BRSKI Flow">

<t>In this flow, the server instructs the client to perform a BRSKI flow by exchanging TLVs once the outer TLS tunnel is established.</t>

<figure title="TEAP Server Instructs Client to Perform BRSKI Flow" anchor="flow-2"><artwork><![CDATA[
                          +----------------+
+--------+                | Authenticator/ |    +------+  +----+
| Client |                |   TEAP-Server  |    | MASA |  | CA |
+--------+                +----------------+    +------+  +----+
    |  EAP-Request/               |                |        |
    |   Type=Identity             |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=Identity             |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
    |   TEAP Start,               |                |        |
    |   Authority-ID TLV          |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   TLS(ClientHello)          |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
    |   TLS(ServerHello,          |                |        |
 (1)|   Certificate,              |                |        |
    |   ServerKeyExchange,        |                |        |
    |   CertificateRequest,       |                |        |
    |   ServerHelloDone)          |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   TLS(Certificate           |                |        |
    |   ClientKeyExchange,        |                |        |
    |   CertificateVerify,        |                |        |
    |   ChangeCipherSpec,         |                |        |
    |   Finished)                 |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
    |   TLS(ChangeCipherSpec,     |                |        |
    |   Finished),                |                |        |
    |   {Crypto-Binding TLV,      |                |        |
    |   Result TLV=Success}       |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   {Crypto-Binding TLV,      |                |        |
    |   Result TLV=Success}       |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
  ** At this stage the outer TLS tunnel is established ** 
  ** The following message exchanges are for BRSKI     **
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
 (2)|   {Request-Action TLV:      |                |        |
    |     Status=Failure,         |                |        |
    |     Action=Process-TLV,     |                |        |
    |     TLV=Request-Voucher,    |                |        |
    |     TLV=Trusted-Server-Root,|                |        |
    |     TLV=CSR-Attributes,     |                |        |
    |     TLV=PKCS#10}            |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
 (3)|   {Request-Voucher TLV}     |                |        |
    |---------------------------->| RequestVoucher |        |
    |                             |--------------->|        |
    |                             |    Voucher     |        |
    |                             |<---------------|        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
 (4)|   {Voucher TLV}             |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
 (5)|   {Trusted-Server-Root TLV} |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
    |   {Trusted-Server-Root TLV} |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   {CSR-Attributes TLV}      |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
    |   {CSR-Attributes TLV}      |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   {PKCS#10 TLV}             |                |        |
    |---------------------------->|                |        |
    |                             |   PKCS#10      |        |
    |  EAP-Request/               |--------------/ | \----->|
    |   Type=TEAP,                |                |        |
    |   {PKCS#7 TLV,              |   PKCS#7       |        |
 (6)|    Result TLV=Success}      |<-------------/ | \------|
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   {Result TLV=Success}      |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Success                |                |        |
    |<----------------------------|                |        |



]]></artwork></figure>

<t>Notes:</t>

<t>(1) If the client has not yet completed the BRSKI flow, then it provisionally accepts the server certificate and must validate it later once BRSKI is complete. The server validates the client certificate using its trust anchor database.</t>

<t>(2) The server instructs the client to start the BRSKI flow by sending a Request-Action TLV that includes a BRSKI-RequestVoucher TLV. The server also instructs the client to request trust anchors, to request CSR Attrites, and to initiate a PKCS certificate enrolment. As outlined in <xref target="RFC7170"/>, the Request-Action TLV is sent after the Crypto-Binding TLV and Result TLV exchange.</t>

<t>(3) The client includes the certificate it received from the server in the RequestVoucher message.</t>

<t>(4) Once the client receives and validates the voucher signed by the MASA, it must verify the certificate it previously received from the server.</t>

<t>(5) As outlined in <xref target="RFC7170"/>, the Trusted-Server-Root TLV is exchanged after the Crypto-Binding TLV exchange, and after the client has used the Voucher to authenticate the TEAP server identity. This is equivalent to section [todo] from <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<t>(6) There is no need for an additional Crypto-Binding TLV exchange as there is no inner EAP method. All BRSKI exchanges are simply TLVs exchanged inside the outer TLS tunnel.</t>

</section>
<section anchor="teap-server-instructs-client-to-reenroll" title="TEAP Server Instructs Client to Reenroll">

<t>In this flow, the server instructs the client to reenroll and get a new LDevID by exchanging TLVs once the outer TLS tunnel is established.</t>

<figure title="TEAP Server Instructs Client to Reenroll" anchor="flow-3"><artwork><![CDATA[
                      +----------------+
+--------+            | Authenticator/ |    +------+  +----+
| Client |            |   TEAP-Server  |    | MASA |  | CA |
+--------+            +----------------+    +------+  +----+
    |  EAP-Request/           |                |        |
    |   Type=Identity         |                |        |
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=Identity         |                |        |
    |------------------------>|                |        |
    |                         |                |        |
    |  EAP-Request/           |                |        |
    |   Type=TEAP,            |                |        |
    |   TEAP Start,           |                |        |
    |   Authority-ID TLV      |                |        |
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=TEAP,            |                |        |
    |   TLS(ClientHello)      |                |        |
    |------------------------>|                |        |
    |                         |                |        |
    |  EAP-Request/           |                |        |
    |   Type=TEAP,            |                |        |
    |   TLS(ServerHello,      |                |        |
    |   Certificate,          |                |        |
    |   ServerKeyExchange,    |                |        |
    |   CertificateRequest,   |                |        |
    |   ServerHelloDone)      |                |        |
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=TEAP,            |                |        |
    |   TLS(Certificate,      |                |        |
    |   ClientKeyExchange,    |                |        |
    |   CertificateVerify,    |                |        |
    |   ChangeCipherSpec,     |                |        |
    |   Finished)             |                |        |
    |------------------------>|                |        |
    |                         |                |        |
    |  EAP-Request/           |                |        |
    |   Type=TEAP,            |                |        |
    |   TLS(ChangeCipherSpec, |                |        |
    |   Finished),            |                |        |
    |   {Crypto-Binding TLV,  |                |        |
    |   Result TLV=Success}   |                |        |
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=TEAP,            |                |        |
    |   {Crypto-Binding TLV,  |                |        |
    |   Result TLV=Success}   |                |        |
    |------------------------>|                |        |
    |                         |                |        |
    |  EAP-Request/           |                |        |
    |   Type=TEAP,            |                |        |
 (1)|   {Request-Action TLV:  |                |        |
    |     Status=Failure,     |                |        |
    |     Action=Process-TLV, |                |        |
    |     TLV=PKCS#10}        |                |        |
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=TEAP,            |                |        |
    |   {PKCS#10 TLV}         |                |        |
    |------------------------>|                |        |
    |                         |   PKCS#10      |        |
    |  EAP-Request/           |--------------/ | \----->|
    |   Type=TEAP,            |                |        |
    |   {PKCS#7 TLV,          |   PKCS#7       |        |
    |    Result TLV=Success}  |<-------------/ | \------|
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=TEAP,            |                |        |
    |   {Result TLV=Success}  |                |        |
    |------------------------>|                |        |
    |                         |                |        |
    |  EAP-Success            |                |        |
    |<------------------------|                |        |

]]></artwork></figure>

<t>(1) The server instructs the client to reenroll by sending a Request-Action TLV that includes a PKCS#10 TLV.</t>

</section>
<section anchor="out-of-band-reenroll" title="Out of Band Reenroll">

<t>This section shows how the device does a reenroll to refresh its LDEvID directly against the registrar outside the context of the TEAP tunnel.</t>

</section>
</section>
<section anchor="teap-tlv-formats" title="TEAP TLV Formats">

<section anchor="brski-tlvs" title="BRSKI TLVs">

<t>BRSKI defines 3 new TEAP TLVs. The following table indicates whether
the TLVs can be included in Request messages from TEAP server to
device, or Response messages from device to TEAP server.</t>

<figure><artwork><![CDATA[
+------------------------+----------+
| TLV                    | Message  |
+------------------------+----------+
| BRSKI-VoucherRequest   | Response |
| BRSKI-Voucher          | Request  |
| CSR-Attributes         | Response |
+------------------------+----------+

]]></artwork></figure>

<t>These new TLVs are detailed in this section.</t>

<section anchor="brski-requestvoucher-tlv" title="BRSKI-RequestVoucher TLV">

<t>This TLV is used by the server as part of a Request-Action TLV to
request from the peer that it initiate a voucher request.  When used
in this fashion, the length of this TLV will be set to zero. The Status field of the Request-Action TLV MUST be set to Failure.</t>

<t>It is also used by the peer to initiate the voucher request.  When
used in this fashion, the length of the TLV will be set to that of the
voucher request, as encoded and described in Section 3.3 in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD1-VoucherRequest   |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                              Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>The M and R bits are always expected to be set to 0.</t>

<t>The server is expected to forward the voucher request to the MASA, and
then return a voucher in a BRSKI-Voucher TLV as described below.  If
it is unable to do so, it returns an TEAP Error TLV with one of
the defined errors or the following:</t>

<figure><artwork><![CDATA[
TBD2-MASA-Notavailable  MASA unavailable
TBD3-MASA-Refused       MASA refuses to sign the voucher

]]></artwork></figure>

<t>The peer terminates the TEAP connection, but may retry at some later
point.  The backoff mechanism for such retries should be appropriate
for the device.  Retries MUST occur no more frequently than once
every two (TBD) minutes.</t>

</section>
<section anchor="brski-voucher-tlv" title="BRSKI-Voucher TLV">

<t>This TLV is transmitted from the server to the peer.  It contains a
signed voucher, as describe in <xref target="RFC8366"/>.</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD4-Voucher          |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                              Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>Upon receiving this TLV the peer will validate the signature of the
voucher, using its pre-installed manufacturer trust anchor (LDevID).
It MUST also validate the certificate used by the server to establish
the TLS connection.</t>

<t>If successful, it installs the new trust anchor contained in the
voucher.</t>

<t>Otherwise, the peer transmits an TEAP error TLV with one of the
following error messages:</t>

<figure><artwork><![CDATA[
TBD5-Invalid-Signature  The signature of the voucher signer is invalid
TBD6-Invalid-Voucher    The form or content of the voucher is not valid
TBD7-Invalid-TLS-Signer The certificate used for the TLS connection
                       could not be validated.

]]></artwork></figure>

</section>
<section anchor="csr-attributes-tlv" title="CSR-Attributes TLV">

<t>The server SHALL transmit this TLV to the peer, either along with the
BRSKI-Voucher TLV or at any time earlier in a communication.  The peer
shall include attributes required by the server in any following CSR.
The value of this TLV is the base64 encoding described in Section
4.5.2 of <xref target="RFC7030"/>.</t>

<figure><artwork><![CDATA[
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD8-CSR-Attributes |         length                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>Again, the M and R values are set to 0.  In the case where the client
is unable to provide the requested attributes, an TEAP-Error is
returned as follows:</t>

<t>TBD9-CSR-Attribute-Fail Unable to supply the requested attributes.</t>

</section>
</section>
<section anchor="existing-teap-tlv-specifications" title="Existing TEAP TLV Specifications">

<t>This section documents allowed usage of existing TEAP TLVs. The definition of the TLV is not changed, however clarifications on allowed values for the TLV fields is documented.</t>

<section anchor="pkcs10-tlv" title="PKCS#10 TLV">

<t><xref target="RFC7170"/> defines the PKCS#10 TLV as follows:</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R|         TLV Type          |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           PKCS#10 Data...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-

]]></artwork></figure>

<t><xref target="RFC7170"/> does not explicitly allow a Length value of zero.</t>

<t>A Length value of zero is allowed for this TLV when the TEAP server sends a Request-Action TLV with a child PKCS#10 TLV to the client. In this scenario, there is no PKCS#10 Data included in the TLV. Clients MUST NOT send a zero length PKCS#10 TLV to the server.</t>

</section>
</section>
<section anchor="tlv-rules" title="TLV Rules">

<t>BRSKI TLVs can only be transported inside the TLS tunnel. The following table provides a guide to which TLVs may be encapsulated in which kind of packets, and in what quantity. The messages are as follows: Request is a TEAP Request, Response is a TEAP Response, Success is a message containing a successful Result TLV, and Failure is a message containing a failed Result TLV.</t>

<t>The following define the meaning of the table entries in the sections below:</t>

<t>0   This TLV MUST NOT be present in the message.</t>

<t>0+  Zero or more instances of this TLV MAY be present in the
    message.</t>

<t>0-1 Zero or one instance of this TLV MAY be present in the message.</t>

<t>1   Exactly one instance of this TLV MUST be present in the
    message.</t>

<t>Request Response Success Failure TLVs
0       0-1      0       0       BRSKI-VoucherRequest
0-1     0        0       0       BRSKI-Voucher
0       0-1      0       0       CSR-Attributes</t>

</section>
</section>
<section anchor="fragmentation" title="Fragmentation">
<t>TLS is expected to provide fragmentation support. Thus EAP-TEAP-BRSKI
does not specifically provide any, as it is only expected to be used
as an inner method to TEAP.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>The IANA is requested to add entries into the following tables:</t>

<t>The following new TEAP TLVs are defined:</t>

<figure><artwork><![CDATA[
TBD1-VoucherRequest   Described in this document.
TBD4-Voucher          Described in this document.
TBD8-CSR-Attributes   Described in this document.

]]></artwork></figure>

<t>The following TEAP Error Codes are defined, with their meanings
listed here and in previous sections:</t>

<figure><artwork><![CDATA[
TBD2-MASA-Notavailable  MASA unavailable
TBD3-MASA-Refused       MASA refuses to sign the voucher
TBD5-Invalid-Signature  The signature of the voucher signer is invalid
TBD6-Invalid-Voucher    The form or content of the voucher is not valid
TBD7-Invalid-TLS-Signer The certificate used for the TLS connection
                        could not be validated.
TBD9-CSR-Attribute-Fail Unable to supply the requested attributes.

]]></artwork></figure>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>BRSKI <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> provides a zero touch
  way for devices to enroll in a certification authority (CA). It assumes
  the device has IP connectivity. For networks that will not grant
  IP connectivitiy before authenticating (with a local credential)
  this poses a Catch-22– can’t get on the network without a credential
  and can’t get a credential without getting on the network.</t>

<t>This protocol provides a way for BRSKI to be in an EAP method
  which allows the BRSKI conversation to happen as part of EAP
  authentication and prior to obtaining IP connectivity.</t>

<t>The  security considerations of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>
  apply to this protocol. Running BRSKI through EAP introduces some
  additional areas of concern though.</t>

<section anchor="issues-with-provisionally-authenticated-teap" title="Issues with Provisionally Authenticated TEAP">

<t>This protocol establishes an unauthenticated TLS connection and passes
  data through it. Provided that the only messages passed in this state
  are self-protected BRSKI messages this does not present a problem.
  Passing any other messages or TLVs prior to authentication of the
  provisional TLS connection could potentially introduce security issues.</t>

<t>While the TLS connection is unauthenticated, it must still be validated
  to the fullest extent possible. It is critical that the device and the
  TEAP server perform all steps in TLS– checking the validity of the
  presented certificate, validating the signature using the public key
  of the certificate, etc– except ensuring the trust of the presented
  certificate.</t>

</section>
<section anchor="attack-against-discovery" title="Attack Against Discovery">

<t>The device discovery technique specified in this protocol is the standard
  EAP server discovery process. Since it is trivial to set up an 802.11
  wireless access point and advertise any network, an attacker can impersonate
  a legitimate wireless network and attract unprovisioned pledges. Given that
  an unprovisioned device will not know the legitimate network to connect
  to, it will probably attempt the first network it finds, making the attack
  that much easier. This allows for a “rogue registrar” to provision and
  take control of the device.</t>

<t>If the MASA verifies ownership prior to issuance of a voucher, this attack
  can be thwarted. But if the MASA is in reduced security mode and does not
  verify ownership this attack cannot be prevented. Registrars SHOULD use the
  audit log of a MASA when deploying newly purchased equipment in order to
  mitigate this attack.</t>

<t>Another way to mitigate this attack is through normal “rogue AP” detection
  and prevention.</t>

</section>
<section anchor="teap-server-as-registration-authority" title="TEAP Server as Registration Authority">

<t>If the TEAP server is logically separate from the Certification Authority (CA)
  (see <xref target="arch"/>) it will be acting as a Registration Authority (RA) when it
  obtains the PKCS#10 TLV and replies with a PKCS#7 TLV (see <xref target="RFC7170"/>, Sections
  4.2.16 and 4.2.17, respectively). The assurance a RA makes to a CA is that the
  public key in the presented CSR is bound to an authenticated identity in way
  that will assure non-repudiation.</t>

<t>To make such an assurance, the TEAP server MUST authenticate the provisional
  TLS connection with the device by validating the voucher response received
  from the MASA. In addition, it is RECOMMENDED that the TEAP server indicate
  that proof-of-possession (see <xref target="RFC7170"/>, Section 3.8.2) is required by
  including the challengePassword OID in the CSR Attributes TLV.</t>

</section>
<section anchor="trust-of-registrar" title="Trust of Registrar">

<t>The device accepts a trusted server (CA) certificate and installs it
  in its trust anchor database during step 5 (see <xref target="bint"/>). This can
  happen only after the provisional TLS connection has been authenticated
  using the voucher and the Crypto-Binding TLV has been validated.</t>

</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>The authors would like to thank Brian Weis for his assistance, and
Alan Dakok for improving language consistency.  In addition, with
ruthlessly “borrowed” the concept around NAI handling from Tuomas Aura
and Mohit Sethi.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

<reference anchor="IEEE8021AR" >
  <front>
    <title>Secure Device Identity</title>
    <author >
      <organization>Institute for Electrical and Electronics Engineers</organization>
    </author>
    <date year="1998"/>
  </front>
</reference>
<reference anchor="IEEE8021X" >
  <front>
    <title>IEEE Standard for Local and metropolitan area networks--Port-Based Network Access Control</title>
    <author >
      <organization>Institute for Electrical and Electronics Engineers</organization>
    </author>
    <date year="2010"/>
  </front>
</reference>




<reference anchor="I-D.ietf-anima-bootstrapping-keyinfra">
<front>
<title>Bootstrapping Remote Secure Key Infrastructures (BRSKI)</title>

<author initials='M' surname='Pritikin' fullname='Max Pritikin'>
    <organization />
</author>

<author initials='M' surname='Richardson' fullname='Michael Richardson'>
    <organization />
</author>

<author initials='M' surname='Behringer' fullname='Michael Behringer'>
    <organization />
</author>

<author initials='S' surname='Bjarnason' fullname='Steinthor Bjarnason'>
    <organization />
</author>

<author initials='K' surname='Watsen' fullname='Kent Watsen'>
    <organization />
</author>

<date month='June' day='17' year='2019' />

<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this a remote secure key infrastructure (BRSKI) is created using manufacturer installed X.509 certificate, in combination with a manufacturer's authorizing service, both online and offline.  Bootstrapping a new device can occur using a routable address and a cloud service, or using only link-local connectivity, or on limited/disconnected networks.  Support for lower security models, including devices with minimal identity, is described for legacy reasons but not encouraged.  Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device but the established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-anima-bootstrapping-keyinfra-22' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-anima-bootstrapping-keyinfra-22.txt' />
</reference>



<reference  anchor="RFC3748" target='https://www.rfc-editor.org/info/rfc3748'>
<front>
<title>Extensible Authentication Protocol (EAP)</title>
<author initials='B.' surname='Aboba' fullname='B. Aboba'><organization /></author>
<author initials='L.' surname='Blunk' fullname='L. Blunk'><organization /></author>
<author initials='J.' surname='Vollbrecht' fullname='J. Vollbrecht'><organization /></author>
<author initials='J.' surname='Carlson' fullname='J. Carlson'><organization /></author>
<author initials='H.' surname='Levkowetz' fullname='H. Levkowetz' role='editor'><organization /></author>
<date year='2004' month='June' />
<abstract><t>This document defines the Extensible Authentication Protocol (EAP), an authentication framework which supports multiple authentication methods.  EAP typically runs directly over data link layers such as Point-to-Point Protocol (PPP) or IEEE 802, without requiring IP.  EAP provides its own support for duplicate elimination and retransmission, but is reliant on lower layer ordering guarantees.  Fragmentation is not supported within EAP itself; however, individual EAP methods may support this.  This document obsoletes RFC 2284.  A summary of the changes between this document and RFC 2284 is available in Appendix A.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3748'/>
<seriesInfo name='DOI' value='10.17487/RFC3748'/>
</reference>



<reference  anchor="RFC7170" target='https://www.rfc-editor.org/info/rfc7170'>
<front>
<title>Tunnel Extensible Authentication Protocol (TEAP) Version 1</title>
<author initials='H.' surname='Zhou' fullname='H. Zhou'><organization /></author>
<author initials='N.' surname='Cam-Winget' fullname='N. Cam-Winget'><organization /></author>
<author initials='J.' surname='Salowey' fullname='J. Salowey'><organization /></author>
<author initials='S.' surname='Hanna' fullname='S. Hanna'><organization /></author>
<date year='2014' month='May' />
<abstract><t>This document defines the Tunnel Extensible Authentication Protocol (TEAP) version 1.  TEAP is a tunnel-based EAP method that enables secure communication between a peer and a server by using the Transport Layer Security (TLS) protocol to establish a mutually authenticated tunnel.  Within the tunnel, TLV objects are used to convey authentication-related data between the EAP peer and the EAP server.</t></abstract>
</front>
<seriesInfo name='RFC' value='7170'/>
<seriesInfo name='DOI' value='10.17487/RFC7170'/>
</reference>



<reference  anchor="RFC7030" target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author initials='M.' surname='Pritikin' fullname='M. Pritikin' role='editor'><organization /></author>
<author initials='P.' surname='Yee' fullname='P. Yee' role='editor'><organization /></author>
<author initials='D.' surname='Harkins' fullname='D. Harkins' role='editor'><organization /></author>
<date year='2013' month='October' />
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference  anchor="RFC8366" target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author initials='K.' surname='Watsen' fullname='K. Watsen'><organization /></author>
<author initials='M.' surname='Richardson' fullname='M. Richardson'><organization /></author>
<author initials='M.' surname='Pritikin' fullname='M. Pritikin'><organization /></author>
<author initials='T.' surname='Eckert' fullname='T. Eckert'><organization /></author>
<date year='2018' month='May' />
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>




    </references>



<section anchor="changes-from-earlier-versions" title="Changes from Earlier Versions">

<t>Draft -03:
  * Merge EAP server and Registrar
  * Security considerations
  * References improvements
  * Add Dan Harkins as co-author</t>

<t>Draft -02:
  * Flow corrections</t>

<t>Draft -01:
  * Add packet descriptions, IANA considerations, smooth out language.</t>

<t>Draft -00:</t>

<t><list style="symbols">
  <t>Initial revision</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIADq2FV0AA+19a3fbRpLod/yKvvGHSBOSsSU/dTaToSV5o4lfV1Sc3E1y
9oBgU8QaBDgAKIXjeH77rVe/AFCCFOc1Xm1216LY3dXV9a7qruFwGNVpnekD
9bQo6qou49Uqzc/V13qjTvJ5GcNH66Rel1oVF7pUx+PXUTydlvoCRpxOvj5R
Z/ARfTwrkjxewkyzMp7Xw0zH5VDHq2GN/2daVm/T4d39KIlrfV6UmwNV1bMo
SlflgYIlqnrv7t0nd/eit3pzWZSzA1i91mWu6+ERThdFVR3ns/+OsyKHJTa6
ilbpgfq+LpKBqoqyLvW8gn9tlviPH6MoXteLojyI1DBS8JPm1YE6HqnnABV9
wKAeZ2lRuw+L8vxAHaZVUqjJpqr1sqKPAQda1wfqNE0WdYpIqiqtHtHfkmIG
8xx+NXy8f/c+f5LWsLtv4yxLK51lOpfvrfMatz25TOt/6jKD3dAfVgva0Wf3
76n799XjR4/VE0AF/Ukv4zQ7UIjJvyUI1SgplsGOXo3UszLVmbelV5c69z68
Zkv3Ht1V347UWVwt41wdlSNvU08e3Nv3tzSBb/y9qPRAHY7DPX2Tp7WeqUkN
h1v5oBdzBGQL8C9H6jBeDr8FetO1t4OXcZ5smn/6ffeRJ/HyEoDZspOjkfoq
Lt/Cv71tHMEyC+9T2oH6CpgFKXtVAnUEW9iHHzVJiroGXlxn+iIuZ8Eu7j5o
7KKO1WEWl/ENNjITiP4Wl+tpDOwFzPa2og1FeVEu4zq90Ac44uT4+Pjx3b17
41P6FX5EUEx0guLgSF+kiVYnM53DHzbyHct28gObjvP0nzBtkSNPV/Ddda3V
vABZkumkLtMkzhQwg/xa5GlSAYrO01zrspKJKg10VIFAKtzUjGUE0350EWdr
+AzAHgHc8vEMcAAE8uTJY39b3zV2hZ8jvvIZoJ3Ae14YyJYa4FoVWQp/VnGp
Y2VXZEgEjcPha5BEw6dxBbh/yR+qcZLoqlKHBZxMkf3h0PRdgKW9u/fuRtFw
OFTxFOVcAoL3JFeJLus4zZXOL1JYeglHDsIWPgBJDUoBoYzVjAmiLpQGWT0F
6bcAgDcqize6jOoFUDkQ6HK5BtBpozhFrdIK8IcoissNzVQv4tqbbKrVCrAP
EnMTJaUmcoszPRspdbaAwfBfrEqdEeVmG6XjaoMjpple4viqyC60ulyAVIwj
mRbHVFWRpDFyCQhkgFQt1ig6phrVHyJ6EVdqWsCf0ny1rumjWVqtYDvRfJ0n
tAMA4oS2kOEZ09K0Ur3QPN+ARw+6hyMxqRw00KrUFWwM91SoeDYrcboat5fE
KKjon0u9hO2sdJLO4ZQj/VOt84qmgW3iimfrPNeZOuY/AALUGOgMEcYIV6/L
AhRmkakd1Nq7ERD2opgxxkHg6DI+11XDEjiFVYEShevbdkEV7ZAhsOvoAcCB
A7hIZxrQ6s4MP7dkgisiYSjgklF0BtBP4wo2Wcx5s8Q7acWwxQpQuZ7HtGAJ
B5ZlsBpwwWyNRLLQ5mARy4iJjHh3pldZsUFqhQ/LYn2+AGg2q7o4h80t0gQw
GvMZ5rRoBGdQ0XyqAq5hu0QtQfwC61Vi7wBMa+DvEbPJMp3NMh1Fd9BeIXgQ
0VH07t3/ORkejVJdz4fA2ct4OPWxOgQzJ0U0vn+vDPrsyeJ2ETDAV0R4xEP2
8FgJWyAYCFfjL8grdNxggWyimMWPlfREsJcwaqar9DznGWJF1hUZV7I2kDEc
d1UsdZSlS9ImMhWeYq5OXps5iZsykIqzjYovQMsA72uPO4G+ozi7jDcVYRYJ
Gv76DDhd/xQvVxmQNwlfEkf3LKTqXOewEdgDcPc/1mmpyabzqBlUaFEyOCQ5
lkg8hnmAv2F7S2aqbxcpMAMJm2hVVMwbOJC+JNuxbOdRKayCKHCz54jePBIg
B0oAAMysav4qGqP41Zmex+usbtC/FY1RCioaP4SVkwL4FgjnAvTogMmv1iuh
/UuwBYioc4Aiy4pLoLnzBXwOtmUkmOFv4kAn4EDSJHBosIMYcHqpLMg8Blkb
hU4N/4DjyQw3kphegVEBsgEUC5D5GDgAlgBFAtyHSmgFRBknC7R9VLXGf+CZ
0lnDDvnbNcIIR6emKbOko2RcGRHkky2JYNpA44yBGpMFMFC1hGN8leuIFgRi
UrjWrGBhAf/hr8v4LXEFzk6TbZWEkZOEKAiVAn49fXa4/+j+Y+BII0WuFahu
GpGoCC+JVJnwEdil79+PUMGeLdYA5SXMCpQBWlvRqZD7FJ1tVnr4XOfn9WL4
BpUzzvf8za4qpv8DhIG7wwNOgPws4xOuQZ7k1QopDlHMAmplYFqiUkWBjthN
WSkBqdWgOIiW2XU7ez5RNe1zRGLLQo3qKllXeLI4EtgYDwQGBie5QvMDNjgh
9ZFFs3Q+B8kBIteeHKs5XzRMNIlJtT96zAIfNX6RrJFdQWK9zYtL0PDnsjLA
TOwF30RdKYwDxOXTCoCC3y3AaipxTyDLK5KbVcHzB1AvgYCKBDQaC39g/RQB
GoBIQqDPkYSiJbBvCvIJpnvjkDkFPtLAjEmW4i7JJAM0gumF/jHIXhCWoKtl
bEj2xNaA5jt31Bl+MS+y4nwTkfpDAQoTIOcCXwIqZiLm5/EyzdK4ZCbBtWo3
FqV3hVb+DARKQMXNnSF2WIAQrmAKPhc0yYocsElUleYRcZQ5DQBW/YU1XzNE
cK1hMFCkZpDYaWJFXNFTLZIC0QQnKxg4R4QQZwG8gJfPhgZtC6Ui6LOkTKe0
VEhRI9zC8eQM3P0cTPCMDAKKZgjsZ4aLGhAbJr67j0yMs7wpQPzo8gA1JmvP
v09evRQ27Rz8eP/hQxwMFgKxG/PouEwWoFM5sPLuTgy/vmcy8L4U+19CKZdl
a0RVzeh8946DKv7XEG9nTg3UcfbWWYcemV6kMUkMT5yBJltXbPtukChWQHNo
OFkJQ5IXtvi9daF+ZMMthNMDsloUlxXqzHAZkCvAr4CveQluZwO0kWfVe/Zb
sarBCmEHiXiOzOyqiPg7eiaSwnMvLKeGq+Ngb72IVhqPx05umo2ejo9Ovpmg
ij86Gb84Pjs+Hamo144BkCGaoPiRj3aM+fDZlvqcAkmw35cg04gBY1LkGi3Q
y0I5J8FNRly8iV58MzlDyWANVXbBBXWgqpD7nE3Af1UpaVswMIXLDZV8WqkL
JmsyDcBCUTuNQ9llSzxYLaL5kQv4T51z2G3ujoyUkw+8sxINRbMwdl6MJ2Na
GomYfUKQpOsSbDdNLsK5rknkCxPK2qCHfvj+h+/PXh29Ao9Xna/RnAONC6cC
NlSEhIR04Z8IcgjJw0Jd6HyG1Cl2m4OUVWeUZMV69sOPP/zY3AnJJthOuJtY
HYLXDPjGz4gGi5KOQbykCJZMqwp0/fMjfXFyVDHnBqTF5FSHqwH9Ho6RPslV
jZBWQBNgfABoqNJou9VySCkKYZhD01ZhGhiIqg9oB9wnfW5kCTgawSKBEGET
HjQjSIQkRaMuvkRShWMAJqwXduoIQXOAhl6uWw8o4V//+lcUfTaUn88oAGF/
vfr3z6KfTRjjZ+//Br/TAcO//gO+/9efmZp+bo9juTC0vwtJyO/eehLqMvMZ
SWJ+t/P2AI3pu73E1eNODVLtknCQsN5tUcgHoN4dqDttHcIRsS8+2aKuPnmP
uow/twYBm0GkXdUr438inwDxVGLsgU2zjDHqKVbduiQzkWeyTiuTHn+Iej0C
Hw20eOV7NxiZQZ+N+MbGahpBgjQHuygDMzJiNz7Ok4WJLiUU6GGLBzk/zlKM
f3kSSCSKB01EVgYqRtBatAumF/CIlhgbY5cNVRpNA/tBhx6DUmzimhjFQRQN
1QS+rO4dGMpCSxsNkgav22/u2W9a/1FXzqIFENCKN24k4JospOYs+3aWCkRd
W+qLiauYjRMNoFcNCYsu4wpYWttJ79tJDRbdxDiR+/Sm4D5w6Cku86yIAWRj
zsIUEuIpCPnADmA3cvwaCU+meNgxhS+VJ7A5NmX/oZFGdg4np7sqrmswJNcY
OTcTPfImogBN4s2ime4x9DKlMClQF8t0O/6xHQ90kRYzkdbga9PYigwyMFHF
tAUsLxS6EWaaF0VVCxn58R0hOhcFMCwyEB8WXE6cJqVcGn0fAV6C9w5W6oBC
F+u6QKwxQGT3aeGEHB1FXIEUGnhWEhz1NAEyGZr7zEczjLaq6UY1lEkQ6wm1
GaGzoV5qjdj0rNjCHl9PAjBxmRmFqhCv28+I3bHjn8AVIJNCony59Y85BvDu
zhSw+L4h0wApGWCyQiVLIBMwPAWfjXwDIJ8Ch8PfVwgEzsxnhAPF3IfftHNQ
REbFCdviwPGoqSsOqjY9dxJTzrvDyIJ85Y1VvxwtnZH8oRWH4s2cMv+3PscP
gCGGY48fwnWCLVoc8E6dCMdNV2bXo5uIv2/RyLdhV01nxM6VoIC3P/CpxXjw
Jl5LKLD2ZcPTcGtTzoDim3MyAnGuSsxe4MhC2KsyGaJLYLgZkhn+g6L/z8cv
/UhAa+It62mPRlCNCGXdR3Z/965vENkkEkQUcAbLhBjdmiJCHG9+KBXj2Yv+
+Dg3ERl3Wp2HQa6RFQaBQpYveBIX3DBvPcmdVJ7AROuY5J5JTvriOp1jJJgt
BlpIBoHQwLO+BN2OX/CnjdjU4BMM/Gir3QJ/yl+OnOqIoFmyiFMkDuXfgXEC
U8VTio+fzL0ZIwuLs3o4cwYwsEcXn8coi9FpljnorHFysIACw8gDDmhyInGr
AsDZkHNA7oxnHSWSubxcpOAX+1sLA84xSgUYIsBKLMUFZSJD2u9WYHF68wxj
4xwNYS2UcKzfKgybCCJkUpjIi6ejIF7PYRKKxAGo4GBgSI7yFIMWiaFELTUg
wYqPU12hq4fxvTSfmTgi+P8kCNLlUs8wRZhtAocIkVTVmINCOwrmEgE6HPP+
eLokW88onNIpbOVL1p4KgjQ+WESsljEW8QWoUJDFhtFhm0GE0Ry6UBRLM6FS
EyMNcOJz1cuillRCDr4p8CrV+5iQdlqF0gXjhAOJXOR+4NSpHji/7+tiVvyo
/i9umpLbcWDKX8ZI1h6bk1hZwZziRAfIw0kHjI0UUSAu77ZDQMoFtrj6FMhW
MFPeZi7885dfOtFA5U8cwJrClPFymp6vC7DEUJEgksFIAbgHeLaYb8Ml2SBv
Leyo6LvvvhsSsGktCbq09pA3B1MK5ynMFnIzYjTqOgTJrTHANvD1D/t3wkfg
cV0QiXbj5/LzTuQWzHIOrd3fyklUg4H3pTr5dElknmDJE/4FacwJAZ9wDf23
Ul9iJZjlyAIZ+BS2Bdd4yDQXI52s/G000zBpU19Ye6IK9yXiGll26xZ8W7R1
VID1HNVRmrwNt0FBrZ4i6PXXh5M79+7yJgtnYUsSAxOTZHmO1FcYSjenbwEl
RsO0jEO3DF3EJkkD7nxi9JmzAWZqJ6aUxkUKPEA+D3mWM/QTGhje/dLoPZlc
jsooPWF9YzFwTrkbAW7zVMLReZBocHuIqb5U38LmKh+AqQbKB8BLgExxJML8
CUkbZTcYhJp3RpBsW+lzIJjXh5OvcbF+7tRI/R1RmWtWw+ea8Z6BlF2jm24w
TmLFSx4Ieqwqb3uHLGT5xAcky68l5dBUEkYh+wOcxqwQUwG2kvphHA8Us7Wg
UMgAgbSA2GNi7cGY/9QlOprA5hllTf1zHP1KAQ/PAjAihA9b4PXUQUfKhRAS
+QcEeL8ET4LprTGHgUzmsfFwXQ4ik532PiSVmbrIc7iHltkahfB3AM77dJLX
X8saIxy9bq7Wsrsiy8Xw2fC4LAteysC6TlFWgOCmv2CxYwuKZ76fZX2zHOsU
6jRZZ3FpSsnAxi7KmhJXRlAh7JHATtaKtQHNGfseHwq5XDKvrRqxyC3oxzdM
/ZCi+qGBMyDZpvSUlFeAVuSB3LTlGZdUqzKP04ySS94U1h0Q0V8D75lSK0p1
g77R2dyk+y3CbEXNjh6dD9R5oSTeTwGeyeTkaHf0a8bzPMYJ/aUGq3H6kbLn
nr8S2UBuYNly9GRtoslh/EdSNnZm2G/gUrbBbXKrpXwBHM+jasWKfZK3hk4l
3oVH6p5zgROlFGXvWnSSLlMgLrEO622Is+uiWdEN2vbTuSm0W4D1vIXaL7ww
Xj452FIWNsU0rGcTDDg0GdtqhMAUEY3egEpAEEaWSBgvzwtiPk24RfQF40Zi
/Ogpb5qoQd+FarcwltPcgVlKggijDxKZfpWbIKtU07icg7NU5dAnX7365vmR
4CM6Y2d+yB778LQo6i26JqjENMGfaDuElUu6o60AdGRPghlEjFJKbvSOSY2u
DsNPToNA+8sCLJuacomxkYw+migO/WBgdkgpcEFMGKM0OMHCpKvw4UvfaJ7q
bFYxCZGRwfUFQEEmQC8WmG+q/9LcAEU3tQ08h4TQiPV2BDpxtQj18CzFPQAp
mxJeinjTBmaFEakmFmjsfKwxB94c+FrJSlP9E5VonPPaxrYie/nw68mdR/y5
K/AaIV0nurWFyiYUAsjRdEZfQhjds90i64mIUWbsZ4N11eEK+laz2wySbx1z
ZZwPFGZarrcxo+3GnchPbz8eMdrNpHlkSc7BIXsLIsL+VqiyGZA6y7is2Uc9
VpQtKRrlLBj6+yPf1cutiV542Oj2oSlcJqUzpoCaLZeiQ0pFXiTXk5KS+lR7
1q25ypIfRA0KtmEtT/KbXTu3NIrGNZtYK6DoOqAmtLvi1FTLWeEuUSoWdWIC
RSY0SLc64qCCUBujYb6mLDjSCd+QYOMPmSjXl1RSLVEwr4J11D/VtyXFR9Ig
djFkOUbkIfSvQvdqwGkJLhm6LKg8CryUCHdc6qGXRvJFnxFBilc3LDUOMhAR
pwM4i9MOoga+XLdLCY5ZdKU3tyUyETC3sdjFO85qt2y1bV2paquoYjMyEcl+
/OrP44meqIGsKPqKy2m6FLWdQKK2mgs1jf3vnXb3qVoOuoxTNr/8TIHZPn5x
W+VcB014ddIopulDzL15VrmjTb7Jg+lDIT+rW2zSBnRLBEYNgCkWWFBUjL8K
1xBoKHKD4LnRMZGXA7bpKa9kGDwcQ5D9s2BN9e6cEOM0Bw68bMedmy3yNQ6o
TKZnHrgwlIQQWsAdmVZTAQpTgAuT4qWxGsSwAauZgcMoKSeoedbKmbZNxEae
JeCOcu9AfdugbxSTukSjk3nMCCJz46tRY+/8LlOTYxJiFGTfRhtRELTxI4ze
Dtol5nfgqydBFcZhkPSJokNA43ydqSAZpJbo+4GAP08vNLlsOI1vatksEitQ
BAttIMp3HxvfI8iBMEytP5OXyUjhyp9obE1n9MyugcsrSxIm8jgcVLiuOFpX
aaEXr26Z7k6A3AC3xcT17twJ6hAsqFQrHz3VSbymO0t0QYwSNUEC1vhVxoth
3Ydn6dVTclzDZpAk5pVOkXrlRgqZ08S8MWcPgJzMnHiFFZOcSKbmsvffzp4e
3TN5WHNTSKwLW4laqp2X4xNTGxoEfXHYIX3wlQY3kU1zNGFr7dFTpH10jOQy
nr3iI6WjYcUnCnoEmPWXnxr2kglekBfRSxPxAQQroqrztRl8TtwKApKrnM/X
HATHW5iVrSR1S/63oVqM3pEXYswQj0NMgYaIp5G9W8qlQJjmQ7V8GbPXZm/F
eKrfbDlqHAXmd2mrsneyxEIXRqI0wO2YrcKLI1GFGSxAaO0lmYOgzefVeoUR
yZK9yzCqby5WRmENnzVdB0EKgGNdEommvxjLKMe8OF02YTvAS7eAAjbpaJJS
Xo57RDdaV3i3lQql8hYuyQjP0rdoaRucFvm0wLIPEyYkVxjOOy7B3crXyymL
dpshdqgAa5N0p8YrU0EiXsrtlbsyU6JPD7TDzmdVrfELJ6Y8WLDorebu2vjz
yizkzxOAcn80IUyWnFwG4iCVyztAjkKpWS3wCpVRgyOp5TQEtrK3LoyXnBe8
kHjsV9J1GPIxiKQAJp+tbNQjOLyKYNChrxDhLNRSdmlBlQK7ov3NNQ1xbeWw
M4tRDiMl1JzWxmJ0EDt61pIAQVDNZwubG4mk4M3FGtxvn4b1hoLYgaQDU0Yr
ekBTHQVSq82U+K2NrgMHh67irUoSisSGkaT9myyX2jMKL28tsFAES2+QJ80K
xme3KVuJTGHGGVnDeWx+pYEXp4VJvAJEOwYj6nLxsqPA59MqCooRPI1AKtaU
sefFVYeBAtk7DETlTrrL9Fp5keGtmRvRjtFOCsNM4QT6wCa+4QkxZx5yZs6P
qoXHYd1vGW09X0P7Xh4kqLDxg55B+pd8GPYvLHW6iDbtAo0IMnGBT8Sd6Y6f
VGqdd54MQ9tV0KRuVtCEtEMQdwJFUdFQr5pa10ZMtu2PEnXRxc/YMPxMJ5wP
gf9sDSuwxGvDYI3vVUackanoPKSJFyWpzMmBYZo17Rn2FzEkU1GOa8L5H4mq
EoT1ZiWBgAUwLYgz+0yAzOtKvIJMq9P1XoUWlznJwAYsU3p8orCa1biU7tZv
6DxfWRhrsbFnsRHWXRjg2dvAyAKixxca4njl3kJhHPUXIckzH/IQT664Aia2
0rRgwRXcuLltWcj2tK9LZdhISVpvC0j6aN7fgmZvUuur+vEc55QJOlnV34zU
VDup3whPoNLk0mpfwbUQbkOQ69XMivIQy7li9A69oporC1auwqpBCTtLUvVL
UqjhLIns66wgup6SvYTZbSoU+hFNoPfMcni81w03KkKqNLlajakfhbB9XcJc
Te0bUjEpoAejvQA2u1UPo0GVbe0qfXqYRGq2JuHUSsKFasEZMT/hoxSboY2j
UEEpW5ohDu0FRZNMcPrrxMg5j0DdEWIg0KXM/Oxy7FVCgvF3K2zeJ6HVhs4+
aiHlIXI5sZZCBgGW6jHYTUcKoXjP7eB4wNiydagc35U0qkn/muhZWHpWgktD
1bYFgZltOOZFQ6qwpMdM1Cx35UMaWHslsO05nNEoQrmy0oX9SFN/gTEk9nYC
y6nmpzRs8Q05AF1g8T2DVo3MSGL1gVCW4qG6VdVAcqNd9hBTjsGR4nSdslMW
mE8YTmDkgBmDHitPsMLa3NmQLc1thL/kKBYbcpSFJsK23NgxScv8C2q9Y343
xje1fbR2O2lNfhYDNA1NSs/OpmqGIAJAG7F245lnOLLex3pRtnzN8YkpAAf1
w/dnT4+Gziiy58XnXTWvIxmJi/ekwHVhBRZ5/Ie3f0HJ+BLs2CnIM4zuRdH3
7u20Hy2rPQIBCv/LV7AqMDX/iqCP5zU+J4Dnhunvij1TgMBmf0D/anPBSqry
R5Jh4kgXvnPBmT9jDZU6GMWRDaolwth0SilEvPTrp7tIGjFfG6KhZ8LUE/i5
t7cP/z148uDJf43UpMjWnFngmgrm8O6l5WEcOnCezgcChZkz5SuTRpFnbmwq
YXzqXbtBKvPq2U1wpHumUtO7DGLuSRwGjwuTd37cD3cvY16+OuMohW81GgKj
GZDbc8yJmKmeexGauMPK2jIAJYMsOiWvPxGk+UnJprZyBnWnJRj4DhhsP1zE
pEfp2jg9fqWepiSWo2hcOZbyMuTWOZWHagprKyGRNe8FmFQkXRN3biCVrXL+
yl0MEGCGAgEnTcwzDX4WWvRNWBx1FsJqMy4BreOjLkpM5inwdW6vRZjRryno
sUeLkE/KY6bukhfsGjQ+Y8uH1TxqxRX+3tVFDoaRVCUfk+LmuChWD+PyiCIP
Z5Ws6b3H0rW3nB7nwucoWE61IbKX1sp1pqvu10v4MR+wAYjh7ItFz2DlKvoi
+Nl2u9HeEED6EINZbjIiXPxoVBBljUz2MUhv2BtA7yhPwCphGJh48oJJ1FjS
PbKBFTHPJ/dAkhrKAs8eeTknb7ggdi6pWsFeqhOb0ZvQS6yIx/Wf7Obzc40U
Iyap1bo+IOEA4/pX4b5ZdAQ15CIGq8rXTU4l4Yc2kdLSuG23Tc/Ex5M34vBb
OiUCw0hXI0TlFd67sJ67b7oIFHrDH6TYWThlx0W0Dt9bcBBEJFagZLKNC0zA
AcgzBOFbmvbHPV5g3jBoPndg30gIHnj5nB9N8N5W4DSS96qCPKxABYYT/9EH
+1ZE90ptkIKVZF6cVfy0zxsrBj8/mwEKn//6wjykeu2A/2hCYX6uWKH7Z/sA
3gMbSZ/3GXDDPWzbwl8/+B5ufA58NbvnAJIfGNQZ9Btgn4EZAueg/L5ywB/4
pG+EpeeTHS+Vu3v1gH8X0oBNs2yhTQ+2D9i5t4sfey6Ft8YVK/DsX+vNsS10
2rbCXnMF2fygzwoE/1GR62sO7s9OrTv7u5ZaW2dxxQpM2n3OwQxws78hD+ra
ATTtYboCJT8BW3dwHUjPwMHCsoPd8O9bBvwbcVwbU32w1HeFd20DfHDlAHeR
+wvJCb2/YoU/OwOp3wRLvxW1Cih9Btzk4NjoxZe30LMY3gte2+pyRfC9Lbxq
gyEjUBUdtTTOsA8zS9bCp8Q0XlDF545Q8ORhmpYfYqc4WxD/86NcNphvX7gy
VadtgNqFBCFg7gZS11WcIKXgg0BF2wGQaS2XRig7bx+KMeuCjwGqr30Tld31
W1Zh2YxFV3nVVm+ufU+9/WIGgru/6xfLUlbUlAi48uGB94ZJge844VXILaVQ
g2tqoRpe8ImtsT603utryYkxfjFucIV7HBZpOxfYJdY8Ap1ujBNvo0G2zqKV
CcJYqLtCZl4R3Mrd/R1IZu2rnEj51zZn0siG7Q4l/utwu2PZDW4nBJ6E6tCn
3VKqIa7UNm+t1+itwq5b4LXX3v7TY/QW/dVz9C/Z91Xb7tA97bW3//Te9y87
75YS7z26083tO7rb5+01+s9Pa7fHeafT3Gv0x0ypnV73taOvdMH7rt3tj/cd
3e2c32ztpqfea/THzmOegXmz0d1+f+/RnUGA3qM7IwJ9R3eHB3qN/shlS99I
THt0d7Ch7+hun7rv6G4Hu9foj1g6/G44/9147C9/UeaaNTha5738MBzEQ9Fv
dQlt4yW751gxVY8FAfIEusJBf2axIFH1d+1i0IP+ayvq0biuvnjGFXI3E+RK
ymi/eM1lAENLo/1GI3Ua8N+YerUbje54lGTQf3T4csdNIZca4fedX942+mMU
aJLZeNc4akTi+35rXyOSGmXJN8PaVgnXG+dm3S7Irx7dpIY/jGy5zyfWOqne
a3+UdP6AsbblpaT3f2DV+zvSmvz6C7D2MdKa/Pqu/fjU+56jP2Zauz3WPmZa
8y5F3VAb/Mq0ZgDbMvoqWgthwbzLDwLVB8XaI899a0H+qGP0zkPSJdv9uAYl
OsiH/0up77Zj7brRvzKlXjN6S+K/1+hbn3ezJmCvqyagX2L2+mKBD5ibT35R
bt5Py4f3o8zbK513zrv7ZbQS/dvS0J1PAt709eltdzGDPdHb29vAMBeYGlUY
3l/wfUzSkOQY04UI7wUcviDbfmmSX8EJH3QL7gFwrr7rTTZ6vRhgmdfyeFbH
bQMEw2tOYQvwXeFC1+3QbddCG5UkpuSi+ylsXOP+rnrVeIbB3rwL3yam60sy
gXtOxFzi8spd3KuwDSi7Xqxvlr4ASA92r8f2todb6XIXY3B2Nd7dU3Z0J8R+
1eNr7tYCn72xbx6HF4maDyfYZ21/pbdfQYHKg3R8M8heCIpz/17tFbuVViF2
hubNIyB0e0U7DDNW+DLFhgtKHIq9Z8la1xJ7FcKcyo2rW5S/BG8L0gMI/it7
v1odzAe6RHFN/QsZDLetffkgdS+9TZoeNxQaI29Q3Ndes/vn9ubbr7jPX8Ho
ur0bensTtdfIntc22iP73t9ojPxz0tDtcNvzskdj5MdEfT1vhrRH9r0i0h7Z
967IlWteeWlk25rX3x5pjPzYeKXHVZP2yL53TjpG9rx80jHyl9c+dH9x28iP
TCb0ubvSHtn3Ekt7ZN97Gu2RfS9sNEZ+RJz9m+P2Y+AVqdLsLrjot8+uYot+
I7sKLfqN7CpV+F9euS6t8XtR/O1SGbdPY/THUDOFYaHtSl+YXzvFye1TF/+G
1NeNoetG/n7ytte9xMbIW51nmJTY75uUMEEyTEVgCqJHUP7WbSDDro937qhX
a3o69ikHqk20LnjUplrg2ySmV/0s6NzkP6kU9mg5DpphmG7b4eNhV7TECDs3
mIYR2EV2GdfNV3jwHR73kOXzN1UU8b/5bZ9K7YdtJ0aN0kt+Rth1DrxcaAyj
cr8QjC3iq/ZTHbwI17jcKA+ch+/mSy8hegH01L4XGAxw78qGTzdRiLIV6TM/
3h8wxBjcEfJJ84XUlPqxxGvm6mzHinPZDfzc/Ja/oh2B32oULfjfsnP1g4vx
cUY9IOgoXfOQmjvWpbajJFEtUfedrYknIXFJKlAqIHycD5/5wcQXvt7fyVhF
ZBJPNslBHR9MIz0v89ToojpS3H8EV40M2PO4Wpg2ReYB1EIe/uPen8jtmloI
ALHgY6lMxWygyR1cYZ4OeOndLjde7Dn7oDvl3nw08F68BJqfIAo3EtG4azei
u/ZB2JJmLY3ZB3gGOsf2pjNKAgQPY01EOO2P9rnjTd+XPP3w/90OprnX8dle
x2f7MsM9+Ou+uq8eqIfqkXqsntzkM5zjs+Ev/B+c5OcXP5/+zPXFT4/udbGv
9/OcTyUQFR8Oki5J5H7e4JuG2GL9g6xnxYJ6walWbCDPgkGaXTcegxSyu9t4
wjb8njx12kXy/suylFuM5GXBRoPc7odQ+bk5Q8VTTa2e1Mk84la87k35WaGq
QroJ8SvpoIBIQTS6AXODEWkRx+/YUVfgyjw6bZXcgUHW06O9IYI/fFnU8QXI
AVqUU08AgfkEv7jPXzzVc2Jx/pFHZefcl6qgbLGPKu9QWIiYJ/e9txP93qrY
2QFfGYCdltR7oiqW/LZnGUnbKBJ00zh5W8znruUV5UbxrT8aig8RyHOc2DbB
9XmITE8baeyHJj5/3XvLMC+4k9CczpmenqS2mphUjDS9740dwnYAKbsKtoP6
LFAxW3ULiKC8WqZ13ZG/F2JCNCEd1N4r1FHzUVyPdDhp/uXps8PH+w8ffhQi
7X6XrfFvLNK+AfNIyij4sUshKKuaSY+GTUHsI8mhPh14tUCrUg9d15GgB05Q
JrTDafbdEZoHxCZkIGx967jDgMKH8E3SXQxpv6cyP1Lt3p3mduQMmnn38TIE
SpjDPlBpNojdMNBcv0wr7bXeMoznZKfukp00k3MF+DvGRveE5oPhSU77H04s
otlVa+A9LKMpuZMMjcRpHtppPIJmb6RcKtml18/DKhQuRLPzPLLzAF4JJBQ+
XcdiW3oF+N9S/iB9EKT5jDlvWzOB8q5diRzo0slX4+fPLfI9ynWybmCe34yz
AnvOSaPEqK0vC3qZFpsa0SPPOi6pRRZpV+xAtM6lJZ/oCJw9qhb4Er15tMa1
TA6eoA+rqHAFRwOwwxFtiR9g9s3wlGkTS+ge3mfrlHsztU3T6P7owWgPR7Os
fnR3/24gq3+xqP5DSurHwwaBOOmZtYU0/XxISf1rCOMxBi9YshgzkyhDSqeM
SQkaXN64x+eSL6kOy4VtosDAo1JRiXyIaYlejnezT4SW9HNPq4gtQU0vHDOt
ongCjD8JMT5E3059Y5eixnKbrSvhs7LA1cdBA2sk9Qn3v0hMk8kgJjQrkvWS
37WVl5LWFGgAatfNmSrTzpReMfeauAtD0Xv0XHE2sE2rkiwu3er4Cq5ZSFDv
xNobJc3I8aFpgYtEFkorv1V2JIzI7zub2BBO4jdPCdD7b2tXmR/cMcaCPW70
Qf/N7CpzAkdxHfdl3+u+IMcXnrp7g5zfXc/k9WXQKLJZK/UpyALs3/kH/zky
pkUTqTGtLvxY4BV9cKQvR7JIQfFu7eIzUqaCskp0DrxRhM/I+/hrda6gSutD
eZyfzDl8s1/6OdNmRDR3LG8jkljuCR+f4rvpJr5qg6NFDnicatb7q6Ksw+pR
v51FV+hVxCG1Sl3ToEL68tAK6B5OsWA7iVfVGl1D2hp/422aU+BrBf6hrivT
2RD+CqbDP9axrdn1Qq8UIHB8bqOWeKZ8brZ0x4Yq/b/xRwNlUgv0N3OBX+xU
jsl7nVVc3oRhlBjcFYPnHNp0AyVs4dAnDQdq2lzsv9zPiIUTJ1fXNhRKWJ5S
7AHkG4o1661ayphq94ZeLpObmvK7nyn1X0gyaCajy0xGe55QW1zHBS/G/689
DclBb6rhPTsVGuNmpusn8iZBIXz8U0xZhu2TSPTzSnAiQwX2yM3xmpOi1ILR
BAi98lWD+f9dEfTIfNvqkStHXb9IaGRF0bMyPkfFR/oyTI9EyH2NEJexP+b+
MDIVgHeRWdbcmI9MEO7pbCVnZQwDvOViJgILesDNi3EpEgcdfViiuHIdMaT5
sqQ+0CEcvxw3e1s3Ez3Sc0Er+nJaeTYN1u/PZh7Jm34tobAhqyn4eGtLcs/9
64ipHvlGP5GasT5GUXfI4poRLdP56hEuzua24sUID4uZDnYzsJ5WWhppUUXY
MQmmJ1UiktPc5LDi4reLHX48jvZWT/tDWPTcJgIc0TW1d7+ep5ivRAr1v7Xi
K26yI2rEIsxzGW8IH17TYkkUs+9ucUfd4Wwf+p3D8S71JI+rao2doZSfc8Zb
OycueHxBev0ZrCLdNOTJWNs+lxqPwBThmHRjOtd4t32Qd3bEEuOutEmp6UZA
nO0SFNwlnXZ6GNfJYri3Nxyi7fNpTddTpDGJaexhuojG3kQwD3KYG+P/0Y6A
PxA44YQjPB3S1LYti4d7g24+Ppa33JnUXf7BUyGDyWu4wt8H5GAPKGlZWZgu
mF4KFGZB4D18Sctc23yP+ylRg6nGCTHgwMOVIcckIEeOkPQkOISCiV9athts
jMAw5c5FgoNFWazPF7R/0ARlMVsjHWJuAedw16lAQMYEQ4Kx/hKRjgNRHQEN
mr55r4Ornd7NH+A8lLnRtix2x0/7JN3tJFKPIEnDBQKBwniPsY0ZTEStKs1m
U1Ddr5kqvL7cpIyt6UsjvXQ5NldDjFAkI5sPEShW24xIO1C0T6sNMwwAubRE
l+11bDqrbaSDkx3NgdfKEUyDmCQQq/xLtM2Ns8RcFTVzDPdk45N1xJXSqRHV
fQsule4QyZJr83HsLjhWtWSorUhG9jed37IMdb/+iTSH6T9OEgtv6uJ72Cg7
mi9XS3euSAU+oX3gGdajhst4KKhkQKwsdPLWdLkiQKQ9lsGRaUCU+MXwXpe3
MCHACQAKv66BzhIFDAXTiOYL5tB1Auvrn6gLnc6rte2AzLF4GeN6uSt/PHrL
dQ2OmBpLwc+RdPzebOUQIx9MYZEZoIAMF3kK+i1sxRqwvQnImnZ3EZV8GQy7
uaTr10hNUvQN2EoFhXmBkpfubtZqvULmowZ6GG25TEudUccqdgIoF8nXSWcX
uGVqBL8xApoidjFtHsNXaOUu4YSrIhcGAx/7HOhjifaCndv2os5Zg2N/0HXu
d6xfgQcIDDRS/5leUGAhrkmPNL7mv3+O/Pk2l3otb1WzmGvPR6Tt+tQjK4Mg
wixsrZcrpuF5WlauaXaKnTPzGbjZy9hSKG+b1CT2OcOULAjVFLOaJOhE49Bd
VvVJWZyvvSqwT6w/Uol0w4mwPzlaaGAzGJqT/C3Si9/flG4ko8FfXIJpVi3S
lRMyKAyMMxi7XCqRkAVairvqxWVcUrOwp6CFU28FMiwBYBQ0MydplsWMWdsI
RZhLrkc7ULylcCEx99DCls5kpwYPtgejdJMkhTvDRwGKc4afgKHw0kyvsmIj
vgt6YesyWVDXMExxrEznX/PaPky1BCI459SdBYhQOc5ZUqMJARjr+h4zGauY
HAvwMnOI49efYAWWtXTZJKC9cY7Pr30ENWs2S1LYXg3spzy9cw9uZWO3hnPx
RisNFgv14TWZ9sPA0hwHliZMuFNpDdZHDOh7/37XMgJWECQkSGOO2nWBrXZO
x7t8HimePZtAHQFlanYfNOF15ckGAu8GvOSPULvfH4Ewekgz0D8fDagTK9lW
OtvsclgLjeWSyBxAHSNjssUdUxdb10gBNYeV/67Ln9El+IACfHtarPnthDhX
oR1i2zRgdC3eGH4njBEMIGKKfAh7BbqNhQJAuBcEEpdq4KQG3EHrMDnV3LyE
75kEkWrqcuPTGgk43TT1oCvhkbCOeZ4AJrN0Qq2iMcZqTMOBKInT48NXL14c
vzw6PnJ6PSBAKRs16ABoi/kQ/jOtZgHIrYes9kePR3u7JpAh2UmYyrV2JxWN
KU2dn2u0sEAOz9Qr7IYqHTfMwxc2IYuMZ7S1lS/buKyhf82zJTErfBJ4tE/k
mNYLJjZjTxyQ5ttfHDH9ytHSUQ8MRqYpNrDcFT0BAhJmEfeDzFb3csMVdiH6
hVNsiBqQK8zk7B6/3TXhrP2Igp3Fz3pH4wQ1KepgSnc1fWeOv7ADC9xNBmqW
vpW+2HH+Vj0tU6D5b3XK+o+kKhAFBym5hGycwTeO4rfFW/oK2A24VwALPj9f
S1QYh+g82XCa0VEp0n9UAgBoTwDGPpkWZYlZiU+YctCrAU0el8TWL8cnsNF8
Rn3DuWJ5XSxh52NgyYgavBYL7LILLmMK+wf6oMKrKDqU1yJo0LEk4t+Alrsq
pGCQdET9X4d39w/gVP6iXugSNuXxEFefG0LFr0y6nUX626lp3FIJrjSfDf5t
PJsBKnP1VVy+pUIqfEBnyAcUOUD2GJBn1LUYEGZErv3CvQM7HScWJMfPTVoH
HH4MYRuoaglu6wLL2u3RjdyUdw8imvOESmqx0zoTdPT/ATGGTyVUzAAA

-->

</rfc>

