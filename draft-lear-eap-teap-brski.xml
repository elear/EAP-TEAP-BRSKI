<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-lear-eap-teap-brski-01" category="std">

  <front>
    <title abbrev="BRSKI TEAP EAP">Bootstrapping Key Infrastructure over EAP</title>

    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="O." surname="Friel" fullname="Owen Friel">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 W. Tasman Dr.</street>
          <city>San Jose, CA</city>
          <code>95134</code>
          <country>United States</country>
        </postal>
        <email>ofriel@cisco.com</email>
      </address>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="Nancy Cam-Winget">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 W. Tasman Dr.</street>
          <city>San Jose, CA</city>
          <code>95134</code>
          <country>United States</country>
        </postal>
        <email>ncamwing@cisco.com</email>
      </address>
    </author>

    <date year="2018" month="October" day="18"/>

    
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>In certain environments, in order for a device to establish any layer
three communications, it is necessary for that device to be properly
credentialed.  This is a relatively easy problem to solve when a
device is associated with a human being and has both input and display
functions.  It is less easy when the human, input, and display
functions are not present.  To address this case, this memo specifies
extensions to the Tunnel Extensible Authentication Protocol (TEAP)
method that leverages Bootstrapping Remote Secure Key Infrastructures
(BRSKI) in order to provide a credential to a device at layer two.
The basis of this work is that a manufacturer will introduce the
device and the local deployment through cryptographic means.  In this
sense the same trust model as BRSKI is used.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t><xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> (BRSKI) specifies a means to
provision credentials to be used as credentials to operationally
access networks.  It was designed as a standalone means where some
limited access to an IP network is already available.  This is not
always the case.  For example, IEEE 802.11 networks generally require
authentication prior to any form of address assignment.  While it is
possible to assign an IP address to a device on some form of an open
network, or to accept some sort of default credential to establish
initial IP connectivity, the steps that would then follow might well
require that the device is placed on a new network, requiring reseting
all layer three parameters.</t>

<t>A more  natural approach  in such  cases is to  more tightly  bind the
provisioning  of credentials with  the authentication  mechanism.  One
such way  to do this is  to make use of  the Extensible Authentication
Protocol (EAP)  <xref target="RFC3748"/> and the  Tunnel Extensible Authentication
Protocol  (TEAP)  method  <xref target="RFC7170"/>.    Thus  we  define  new  TEAP
Type-Length-Value  (TLV) objects  that can  be used  to  transport the
BRSKI protocol messages within the context of a TEAP TLS tunnel.</t>

<t><xref target="RFC7170"/> discusses the notion of provisioning peers.  Several
different mechanisms are available.  Section 3.8 of that document
acknowledges the concept of not initially authenticating the outer TLS
session so that provisioning may occur.  In addition, exchange of
multiple TLV messages between client and EAP server permits multiple
provisioning steps.</t>

<section anchor="terminology" title="Terminology">

<t>The reader is presumed to be familiar with EAP terminology as stated
in <xref target="RFC3748"/>.  In addition, the following terms are commonly used in
this document.</t>

<t><list style="symbols">
  <t>BRSKI: Bootstrapping Remote Secure Key Infrastructures, as defined in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.  The term is also used
to refer to the flow described in that document.</t>
  <t>EST: Enrollment over Secure Transport, as defined in <xref target="RFC7030"/>.</t>
  <t>Voucher: a signed JSON object as defined in <xref target="RFC8366"/>.</t>
</list></t>

</section>
</section>
<section anchor="teap-brski-architecture" title="TEAP BRSKI Architecture">

<t>The TEAP BRSKI architecture is illustrated in
<xref target="brski-architecture"/>. The device talks to the TEAP server via the
Authenticator as per any normal EAP exchange. There is no need for an
inner EAP method server, and there is no explicit EAP method type
defined for BRSKI.</t>

<t>The architecture illustrated shows the TEAP server and registrar
function as being two logically separate entities, however the BRSKI
registrar functionality may be integrated into the TEAP server. The
device is not explicitly aware of where the registrar functionality is
deployed when executing BRSKI inside a TEAP tunnel. Note that the
device may connect directly to the registrar for the purposes of
certificate reenrollment, but this happens outside the context to
801.1X and TEAP authentication.</t>

<t>The registrar in turn communicates with the BRSKI MASA service for the
purposes of getting signed vouchers. [[TODO: I guess we should
mention TEAP server talking to vendor default registrar in the
cloud]]</t>

<t>The registrar also comunicates with a Certificate Authority in order
to issue LDevIDs. The architecture shows the registrar and CA as being
two logically separate entities, however the CA may be integrated into
the registrar. The device is not explicitly aware of whether the CA
and registrar functions are integrated.</t>

<figure><artwork><![CDATA[
+--------+     +---------+     +--------+     +---------+     +------+
|        |     |         |     |        |     |         |<--->| MASA |
|        |     | Authen- |     |  TEAP  |     | BRSKI   |     +------+
| Device |<--->| ticator |<--->| server |<--->|Registrar|
|        |     |         |     |        |     |         |     +------+
|        |     |         |     |        |     |         |<--->|  CA  |
+--------+     +---------+     +--------+     +---------+     +------+

]]></artwork></figure>

</section>
<section title="BRSKI Bootstrap and Enroll Operation" anchor="brski-architecture">

<t>This section summarises the current BRSKI operation. The BRSKI flow
assumes the device has an IDevID and has a manufacturer installed
trust anchor that can be used to validate the BRSKI voucher. The BRSKI
flow compromises serveral main steps from the perspective of the
device:</t>

<t><list style="symbols">
  <t>Step 1: Device discovers the registrar</t>
  <t>Step 2: Device establishes provisional TLS connection to registrar</t>
  <t>Step 3: Device sends voucher request message and receives signed voucher response</t>
  <t>Step 4: Device validates voucher and validates provisional TLS connection to registrar</t>
  <t>Step 5: Device downloads additional local domain CA information</t>
  <t>Step 6: Device downloads Certificate Signing Reqeust (CSR) attributes</t>
  <t>Step 7: Device does an EST enroll to obtain an LDevID</t>
  <t>Step 8: Device periodically reenrolls via EST to refresh its LDevID</t>
</list></t>

<t>Most of the operational steps require the device, and thus its internal state machine, to automatically complete the next step without being explicitly instructed to do so by the registrar. For example, the registrar does not explicitly tell the device to download additional local domain CA information, or to do an EST enroll to obtain an LDevID.</t>

<section anchor="executing-brski-in-a-teap-tunnel" title="Executing BRSKI in a TEAP Tunnel">

<t>This section outlines how the main BRSKI steps outlined above map to TEAP, and how BRSKI and enrollment can be accomplished inside a TEAP TLS tunnel. The following new TEAP TLVs are introduced:</t>

<t><list style="symbols">
  <t>BRSKI-VoucherRequest</t>
  <t>BRSKI-Voucher</t>
  <t>CSR-Attributes</t>
</list></t>

<t>The following steps outline how the above BRSKI flow maps to TEAP.</t>

<t><list style="symbols">
  <t>Step 1: Device discovers the registrar</t>
</list></t>

<t>When BRSKI is executed in a TEAP tunnel, the device exchanges BRSKI TLVs with the TEAP server. The discovery process for devices is therefore the standard wired or wireless LAN EAP server discovery process. The discovery processes outlined in section 4 of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> are not required for initial discovery of the registrar.</t>

<t><list style="symbols">
  <t>Step 2: Device establishes provisional TLS connection to registrar</t>
</list></t>

<t>The device establishes an outer TEAP tunnel with the TEAP server and
does not validate the server certificate. Similarly, at this
provisioning stage, the server does not validate the certificate of
the device.  The device presents its LDevID as its identity
certificate if it has a valid LDevID, otherwise it presents its
IDevID. Server policy may also be used to control which certificate
the device is allowed present, as described in section
<xref target="pki-certificate-authority-considerations"/>.</t>

<t>If the presented credential is sufficient to grant access, the TEAP server can return an EAP-Success immediately. The device may still send a BRSKI-RequestVoucher TLV in response to the EAP-Success if it does not have, but requires, trust anchors for validating the TEAP server certificate.</t>

<t>If the TEAP server requires that the device execute a BRSKI flow, it sends a Request-Action TLV that includes a BRSKI-VoucherRequest TLV. For example, if the device presented its IDevID but the TEAP server requires an LDevID.</t>

<t>The TEAP server may also require the device to reenroll, for example, if the device presented a valid LDevID that is very closed to expiration. The server may instruct a device to reenroll by sending a Request-Action TLV that includes a zero byte length PKCS#10 TLV.</t>

<t><list style="symbols">
  <t>Step 3: Device sends voucher request message and receives signed voucher response</t>
</list></t>

<t>The device sends a BRSKI-RequestVoucher TLV to the TEAP server. The
TEAP server forwards the RequestVoucher message to the MASA server,
and the MASA server replies with a signed voucher. The TEAP server
sends a BRSKI-Voucher TLV to the device.</t>

<t>If the MASA server does not issue a signed voucher, the TEAP server
sends an EAP-Error TLV with a suitable error code to the device.</t>

<t>For wireless devices in particular, it is important that the MASA
server only return a voucher for devices known to be associated with a
particular registrar.  In this sense, success indicates that the
device is on the correct network, while failure indicates the device
should try to provision itself within wireless networks (e.g, go to
the next SSID).</t>

<t><list style="symbols">
  <t>Step 4: Device validates voucher and validates provisional TLS connection to registrar</t>
</list></t>

<t>The device validates the signed voucher using its manufacturer
installed trust anchor, and uses the CA information in the voucher to
validate the outer TEAP TLS connection to the TEAP server.</t>

<t>If the device fails to validate the voucher, or fails to validate the
outer TEAP TLS connection, then it sends a TEAP-Error TLV indicating
failure to the TEAP server.</t>

<t><list style="symbols">
  <t>Step 5: Device downloads additional local domain CA information</t>
</list></t>

<t>On completion of the BRSKI flow, the device SHOULD send a
Trusted-Server-Root TLV to the TEAP server in order to discover
additional local domain CAs.</t>

<t><list style="symbols">
  <t>Step 6: Device downloads CSR attributes</t>
</list></t>

<t>No later than the completion of step 5, server MUST send a
CSR-Attributes TLV to peer server in order to discover the correct
fields to include when it enrolls to get an LDevID.</t>

<t><list style="symbols">
  <t>Step 7: Device does an EST enroll to obtain an LDevID</t>
</list></t>

<t>When executing the BRSKI flow inside a TEAP tunnel, the device does
not directly leverage EST when doing its initial enroll. Instead, the
device uses the existing TEAP PKCS#10 and PCKS#7 TEAP mechanisms.</t>

<t>Once the BRSKI flow is complete, the device can now send a PKCS#10 TLV
to enroll and request an LDevID. If the TEAP server instructed the
device to start the BRSKI flow via a Request-Action TLV that includes
a BRSKI-RequestVoucher TLV, then the device MUST send a PKCS#10 in
order to start the enroll process. The TEAP server will handle the
PKCS#10 and ultimately return a PKCS#7 including an LDevID to the
device.</t>

<t>If the TEAP server granted the device access on completion of the
outer TEAP TLS tunnel in step 2 without sending a Request-Action TLV,
the device does not have to send a PKCS#10 to enroll.</t>

<t>At this point, the device is said to be provisioned for local network
access, and may authenticate in the future via 802.1X with its newly
acquired credentials.</t>

<t><list style="symbols">
  <t>Step 8: Device periodically reenrolls to refresh its LDevID</t>
</list></t>

<t>When a device’s LDevID is close to expiration, there are two options
for re-enrollment in order to obtain a fresh LDevID. As outlined in
Step 2 above, the TEAP server may instruct the device to reenroll by
sending a Request-Action TLV including a PKCS#10 TLV. If the TEAP
server explicilty instructs the device to reenroll via these TLV
exchange, then the device MUST send a PKCS#10 to reenroll and request
a fresh LDevID.</t>

<t>However, the device SHOULD reenroll if it determines that its LDevID
is close to expiration wihtout waiting for explicit instruction from
the TEAP server. There are two options to do this.</t>

<t>Option 1: The device reenrolls for a new LDevID directly with the EST
CA outside the context of the 802.1X TEAP flow. The device uses the
registrar discovery mechanisms oulined in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> to discover the registrar
and the device sends the EST reenroll messages to the discovered
registrar endpoint. No new TEAP TLVs are defined to facilitate
discover of the registrar or EST endpoints inside the context of the
TEAP tunnel.</t>

<t>Option 2: When the device is performing a periodic 802.1X
authentication using its current LDevID, it reenrolls for a new LDevID
by sending a PKCS#10 TLV inside the TEAP TLS tunnel.</t>

</section>
</section>
<section anchor="pki-certificate-authority-considerations" title="PKI Certificate Authority Considerations">

<t>Careful consideration must be given to PKI certificate authority handling when:</t>

<t><list style="symbols">
  <t>Establishing the TEAP tunnel</t>
  <t>Establishing trust using BRSKI</t>
</list></t>

<t>These are described in more detail here.</t>

<section anchor="teap-tunnel-establishment" title="TEAP Tunnel Establishment">

<t>The client sends its ClientHello to initiate TLS tunnel establishment. It is possible for the TEAP server to restrict the certificates that the client can use for tunnel establishment by including a list of CA distinguished names in the certificate_authorities field in the CertificateRequest message. Network operators may want to do this in order to restrict netwok access to clients that have a certificate signed by one of a small set of trusted manufacturer/supplier CAs. If the client has both an IDevID and an LDevID, the client should present the LDevID in preference to its IDevID if allowed by server policy.</t>

<t>In practice, network operators will likely want to onboard devices from a large number of device manufacturers, with each manufacturer using a different root CA when issuing IDevIDs. If the number of different manufacturer root CAs is large, this could result in very large TLS handshake messages. Operators may prefer to include no CAs in the certificate_authorities field thus allowing devices to present IDevIDs signed by any CA when establishing the TEAP tunnel, and instead enforce policy at LDevID enrollment time.</t>

<t>It is recommended that the client validate the certificate presented
by the server in the server’s Certificate message, but this may not be
possible for clients that have not yet provisioned appropriate trust
anchors. If the client is in the provisioning phase and
has not yet completed a BRSKI flow, it will not have trust anchors
installed yet, and thus will not be able to validate the server’s
certificate. The client must however note the certificate presented by
the server for (i) inclusion in the BRSKI-RequestVoucher TLV and for
(ii) validation once the client has discovered the local domain trust
anchors.</t>

<t>If the client does not present a suitable certificate to the server, the server MUST terminate the connection and fail the EAP request.</t>

<t>On establishment of the outer TLS tunnel, the TEAP server will make a policy decision on next steps. Possible policy decisions include:</t>

<t><list style="symbols">
  <t>Option 1: Server grants client full network access and returns EAP-Success. This will typically happen when the client presents a valid LDevID. Network policy may grant client network access based on IDevID without requiring the device to enroll to obtain an LDevID.</t>
  <t>Option 2: Server requires that client perform a full BRSKI flow, and then enroll to get an LDevID. This will typically happen when the client presents a valid IDevID and network policy requires all clients to have LDevIDs. The server sends a Request-Action TLV that includes a BRSKI-RequestVoucher TLV to the client to instruct it to start the BRSKI flow.</t>
  <t>Option 3: Server requires that the client reenroll to obtain a new LDevID. This could happen when the client presents a valid LDevID that is very close to expiration time, or the server’s policy requires an LDevID update. The server sends an Action-Request TLV including a PKCS#10 TLV to the client to instruct it to reenroll.</t>
</list></t>

</section>
<section anchor="brski-trust-establishment" title="BRSKI Trust Establishment">

<t>If the server requires that client perform a full BRSKI flow, it sends a Request-Action TLV that includes a zero byte length BRSKI-RequestVoucher TLV to the client. The client sends a new BRSKI-RequestVoucher TLV to the server, which contains all data specified in <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.2. The client includes the server certificate it received in the server’s Certificate message during outer TLS tunnel establishment in the proximity-registrar-cert field. The client signs the request using its IDevID.</t>

<t>The server includes all additional information as required by <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.4 and signs the request prior to forwarding to the MASA.</t>

<t>The MASA responds as per <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.5. The response may indicate failure and the server should react accordingly to failures by sending a failure response to the client, and failing the TEAP method.</t>

<t>If the MASA replies with a signed voucher and a successful result, the server then forwards this response to the client in a BRSKI-Voucher TLV.</t>

<t>When the client receives the signed voucher, it validates the signature using its built in trust anchor list, and extracts the pinned-domain-cert field. The client must use the CA included in the pinned-domain-cert to validate the certificate that was presented by the server when establishing the outer TLS tunnel. If this certificate validation fails, the client must fail the TEAP request and not connect to the network.</t>

<t>[TBD- based on client responses, the registrar sends a status update
to the MASA]</t>

</section>
</section>
<section anchor="channel-and-crypto-binding" title="Channel and Crypto Binding">

<t>As the TEAP BRSKI flow does not define or require an inner EAP method, there is no explicit need for exchange of Channel-Binding TLVs between the device and the TEAP server.</t>

<t>The TEAP BRSKI TLVs are expected to occur at the beginning of the TEAP Phase 2 and MUST occur before the final Crypto-Binding TLV.  This draft does not exclude the possibility of having other EAP methods occur following the TEAP BRSKI TLVs and as such, the Crypto-Binding TLV process rules as defined in <xref target="RFC7170"/> apply.</t>

</section>
<section anchor="protocol-flows" title="Protocol Flows">

<t>This section outlines protocol flows that map to the 3 server policy options described in section <xref target="teap-tunnel-establishment"/>. The protocol flows illustrate a TLS1.2 exchange.</t>

<t>[[TODO]] MISSING EAP Start/identity/Crypto binding, etc. Flows illustrative, but not 100% accurate.</t>

<section anchor="teap-server-grants-access" title="TEAP Server Grants Access">

<figure title="TEAP Server Grants Access" anchor="flow-1"><artwork><![CDATA[
+--------+             +-------------+     +------+
| Client |             | TEAP-Server |     | MASA |
+--------+             +-------------+     +------+
    |                         |                |
    |  ClientHello            |                |
    |------------------------>|                |
    |  ServerHello,           |                |
    |  Certificate(1),        |                |
    |  ServerKeyExchange,     |                |
    |  CertificateRequest(2), |                |
    |  ServerHelloDone,       |                |
    |<------------------------|                |
    |  Certificate(3),        |                |
    |  ClientKeyExchange,     |                |
    |  CertificateVerify,     |                |
    |  ChangeCipherSpec,      |                |
    |  Finished               |                |
    |------------------------>|                |
    |  ChangeCipherSpec,      |                |
    |  Finished               |                |
    |<------------------------|                |
    |  Crypto-Binding TLV     |                |
    |<------------------------|                |
    |  Crypto-Binding TLV     |                |
    |------------------------>|                |
    |  Result TLV             |                |
    |<------------------------|                |
    |  Result TLV             |                |
    |------------------------>|                |
    |      EAP-Success        |                |
    |<------------------------|                |

]]></artwork></figure>

<t>Notes:</t>

<t>(1) If the client has completed the BRSKI flow yet, it must validate the Certificate received from the server. If the client has not yet completed the BRSKI flow, then it provisionally accepts the server Certificate and must validate it later once BRSKI is complete.</t>

<t>(2) The server may include certificate_authorities field in the CertificateRequest message in order to restrict the identity certificates that the device is allowed present.</t>

<t>(3) The device will present its LDevID, if it has one, in preference to its IDevID, if allowed by server policy.</t>

</section>
<section anchor="teap-server-instructs-client-to-perform-brski-flow" title="TEAP Server Instructs Client to Perform BRSKI Flow">

<figure title="TEAP Server Instructs Client to Perform BRSKI Flow" anchor="flow-2"><artwork><![CDATA[
+--------+             +-------------+     +------+
| Client |             | TEAP-Server |     | MASA |
+--------+             +-------------+     +------+
    |                         |                |
    |      ClientHello        |                |
    |------------------------>|                |
    |   ServerHello, etc.(1)  |                |
    |<------------------------|                |
    |     etc., Finished      |                |
    |------------------------>|                |
    |     etc., Finished      |                |
    |<------------------------|                |
    | BRSKI-RequestAction(2)  |                |
    |<------------------------|                |
    | BRSKI-RequestVoucher(3) |                |
    |------------------------>| RequestVoucher |
    |                         |--------------->|
    |                         |    Voucher     |
    |     BRSKI-Voucher(4)    |<---------------|
    |<------------------------|                |
    |  Trusted-Server-Root    |                |
    |------------------------>|                |
    |  Trusted-Server-Root    |                |
    |<------------------------|                |
    |     CSR-Attributes      |                |
    |<------------------------|                |
    |         PKCS#10         |                |
    |------------------------>|                |
    |         PKCS#7          |                |
    |<------------------------|                |
    |  Crypto-Binding TLV     |                |
    |<------------------------|                |
    |  Crypto-Binding TLV     |                |
    |------------------------>|                |
    |  Result TLV             |                |
    |<------------------------|                |
    |  Result TLV             |                |
    |------------------------>|                |
    |      EAP-Success        |                |
    |<------------------------|                |

]]></artwork></figure>

<t>Notes:</t>

<t>(1) If the client has not yet completed the BRSKI flow, then it provisionally accepts the server certificate and must validate it later once BRSKI is complete.</t>

<t>(2) The server instructs the client to start the BRSKI flow by sending a RequestAction TLV that includes a BRSKI-RequestVoucher TLV.</t>

<t>(3) The client includes the certificate it received from the server in the RequestVoucher message.</t>

<t>(4) Once the client receives and validates the voucher signed by the MASA, it must verify the certificate it previously received from the server.</t>

</section>
<section anchor="teap-server-instructs-client-to-reenroll" title="TEAP Server Instructs Client to Reenroll">

<figure title="TEAP Server Instructs Client to Reenroll" anchor="flow-3"><artwork><![CDATA[
+--------+            +-------------+     +------+
| Client |            | TEAP-Server |     | MASA |
+--------+            +-------------+     +------+
    |                        |                |
    |      ClientHello       |                |
    |----------------------->|                |
    |   ServerHello, etc.    |                |
    |<-----------------------|                |
    |     etc., Finished     |                |
    |----------------------->|                |
    |     etc., Finished     |                |
    |<-----------------------|                |
    | RequestAction: PKCS#10 |                |
    |<-----------------------|                |
    |     CSR-Attributes     |                |
    |<-----------------------|                |
    |         PKCS#10        |                |
    |----------------------->|                |
    |         PKCS#7         |                |
    |<-----------------------|                |
    |  Crypto-Binding TLV    |                |
    |<-----------------------|                |
    |  Crypto-Binding TLV    |                |
    |----------------------->|                |
    |  Result TLV            |                |
    |<-----------------------|                |
    |  Result TLV            |                |
    |----------------------->|                |
    |      EAP-Success       |                |
    |<-----------------------|                |

]]></artwork></figure>

</section>
<section anchor="out-of-band-reenroll" title="Out of Band Reenroll">

<t>This section shows how the device does a reenroll to refresh its LDEvID directly against the registrar outside the context of the TEAP tunnel.</t>

</section>
</section>
<section anchor="teap-tlv-formats" title="TEAP TLV Formats">

<section anchor="brski-tlvs" title="BRSKI TLVs">

<t>BRSKI defines 3 new TEAP TLVs. The following table indicates whether
the TLVs can be included in Request messages from TEAP server to
device, or Response messages from device to TEAP server.</t>

<figure><artwork><![CDATA[
+------------------------+----------+
| TLV                    | Message  |
+------------------------+----------+
| BRSKI-VoucherRequest   | Response |
| BRSKI-Voucher          | Request  |
| CSR-Attributes         | Response |
+------------------------+----------+

]]></artwork></figure>

<t>These new TLVs are detailed in this section.</t>

<section anchor="brski-requestvoucher-tlv" title="BRSKI-RequestVoucher TLV">

<t>This TLV is used by the server as part of an Action-Request to
request from the peer that it initiate a voucher request.  When used
in this fashion, the length of this TLV will be set to zero.</t>

<t>It is also used by the peer to initiate the voucher request.  When
used in this fashion, the length of the TLV will be set to that of the
voucher request, as encoded and described in Section 3.3 in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD1-VoucherRequest   |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                              Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>The M and R bits are always expected to be set to 0.</t>

<t>The server is expected to forward the voucher request to the MASA, and
then return a voucher in a BRSKI-Voucher TLV as described below.  If
it is unable to do so, it returns an TEAP Error TLV with one of
the defined errors or the following:</t>

<figure><artwork><![CDATA[
TBD2-MASA-Notavailable  MASA unavailable
TBD3-MASA-Refused       MASA refuses to sign the voucher

]]></artwork></figure>

<t>The peer terminates the TEAP connection, but may retry at some later
point.  The backoff mechanism for such retries should be appropriate
for the device.  Retries MUST occur no more frequently than once
every two (XXX) minutes.</t>

</section>
<section anchor="brski-voucher-tlv" title="BRSKI-Voucher TLV">

<t>This TLV is transmitted from the server to the peer.  It contains a
signed voucher, as describe in <xref target="RFC8366"/>.</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD4-Voucher          |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                              Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>Upon receiving this TLV the peer will validate the signature of the
voucher, using its pre-installed manufacturer trust anchor (LDevID).
It MUST also validate the certificate used by the server to establish
the TLS connection.</t>

<t>If successful, it installs the new trust anchor contained in the
voucher.</t>

<t>Otherwise, the peer transmits an TEAP error TLV with one of the
following error messages:</t>

<figure><artwork><![CDATA[
TBD5-Invalid-Signature  The signature of the voucher signer is invalid
TBD6-Invalid-Voucher    The form or content of the voucher is not valid
TBD7-Invalid-TLS-Signer The certificate used for the TLS connection
                       could not be validated.

]]></artwork></figure>

</section>
<section anchor="csr-attributes-tlv" title="CSR-Attributes TLV">

<t>The server SHALL transmit this TLV to the peer, either along with the
BRSKI-Voucher TLV or at any time earlier in a communication.  The peer
shall include attributes required by the server in any following CSR.
The value of this TLV is the base64 encoding described in Section
4.5.2 of <xref target="RFC7030"/>.</t>

<figure><artwork><![CDATA[
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD8-CSR-Attributes |         length                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>Again, the M and R values are set to 0.  In the case where the client
is unable to provide the requested attributes, an TEAP-Error is
returned as follows:</t>

<t>TBD9-CSR-Attribute-Fail Unable to supply the requested attributes.</t>

</section>
</section>
<section anchor="existing-teap-tlv-specifications" title="Existing TEAP TLV Specifications">

<t>This section documents allowed usage of existing TEAP TLVs. The definition of the TLV is not changed, however clarifications on allowed values for the TLV fields is documented.</t>

<section anchor="pkcs10-tlv" title="PKCS#10 TLV">

<t><xref target="RFC7170"/> defines the PKCS#10 TLV as follows:</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R|         TLV Type          |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           PKCS#10 Data...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-

]]></artwork></figure>

<t><xref target="RFC7170"/> does not explicitly allow a Length value of zero.</t>

<t>A Length value of zero is allowed for this TLV when the TEAP server sends a Request-Action TLV with a child PKCS#10 TLV to the client. In this scenario, there is no PKCS#10 Data included in the TLV. Clients MUST NOT send a zero length PKCS#10 TLV to the server.</t>

</section>
</section>
</section>
<section anchor="fragmentation" title="Fragmentation">
<t>TLS is expected to provide fragmentation support. Thus EAP-TEAP-BRSKI
does not specifically provide any, as it is only expected to be used
as an inner method to TEAP.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>The IANA is requested to add entries into the following tables:</t>

<t>The following new TEAP TLVs are defined:</t>

<figure><artwork><![CDATA[
TBD1-VoucherRequest   Described in this document.
TBD4-Voucher          Described in this document.
TBD8-CSR-Attributes   Described in this document.

]]></artwork></figure>

<t>The following TEAP Error Codes are defined, with their meanings
listed here and in previous sections:</t>

<figure><artwork><![CDATA[
TBD2-MASA-Notavailable  MASA unavailable
TBD3-MASA-Refused       MASA refuses to sign the voucher
TBD5-Invalid-Signature  The signature of the voucher signer is invalid
TBD6-Invalid-Voucher    The form or content of the voucher is not valid
TBD7-Invalid-TLS-Signer The certificate used for the TLS connection
                        could not be validated.
TBD9-CSR-Attribute-Fail Unable to supply the requested attributes.

]]></artwork></figure>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>There will be many.</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>The authors would like to thank Brian Weis for his assistance, and
Alan Dakok for improving language consistency.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>





<reference  anchor="RFC3748" target='https://www.rfc-editor.org/info/rfc3748'>
<front>
<title>Extensible Authentication Protocol (EAP)</title>
<author initials='B.' surname='Aboba' fullname='B. Aboba'><organization /></author>
<author initials='L.' surname='Blunk' fullname='L. Blunk'><organization /></author>
<author initials='J.' surname='Vollbrecht' fullname='J. Vollbrecht'><organization /></author>
<author initials='J.' surname='Carlson' fullname='J. Carlson'><organization /></author>
<author initials='H.' surname='Levkowetz' fullname='H. Levkowetz' role='editor'><organization /></author>
<date year='2004' month='June' />
<abstract><t>This document defines the Extensible Authentication Protocol (EAP), an authentication framework which supports multiple authentication methods.  EAP typically runs directly over data link layers such as Point-to-Point Protocol (PPP) or IEEE 802, without requiring IP.  EAP provides its own support for duplicate elimination and retransmission, but is reliant on lower layer ordering guarantees.  Fragmentation is not supported within EAP itself; however, individual EAP methods may support this.  This document obsoletes RFC 2284.  A summary of the changes between this document and RFC 2284 is available in Appendix A.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3748'/>
<seriesInfo name='DOI' value='10.17487/RFC3748'/>
</reference>



<reference  anchor="RFC7170" target='https://www.rfc-editor.org/info/rfc7170'>
<front>
<title>Tunnel Extensible Authentication Protocol (TEAP) Version 1</title>
<author initials='H.' surname='Zhou' fullname='H. Zhou'><organization /></author>
<author initials='N.' surname='Cam-Winget' fullname='N. Cam-Winget'><organization /></author>
<author initials='J.' surname='Salowey' fullname='J. Salowey'><organization /></author>
<author initials='S.' surname='Hanna' fullname='S. Hanna'><organization /></author>
<date year='2014' month='May' />
<abstract><t>This document defines the Tunnel Extensible Authentication Protocol (TEAP) version 1.  TEAP is a tunnel-based EAP method that enables secure communication between a peer and a server by using the Transport Layer Security (TLS) protocol to establish a mutually authenticated tunnel.  Within the tunnel, TLV objects are used to convey authentication-related data between the EAP peer and the EAP server.</t></abstract>
</front>
<seriesInfo name='RFC' value='7170'/>
<seriesInfo name='DOI' value='10.17487/RFC7170'/>
</reference>



<reference  anchor="RFC7030" target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author initials='M.' surname='Pritikin' fullname='M. Pritikin' role='editor'><organization /></author>
<author initials='P.' surname='Yee' fullname='P. Yee' role='editor'><organization /></author>
<author initials='D.' surname='Harkins' fullname='D. Harkins' role='editor'><organization /></author>
<date year='2013' month='October' />
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference  anchor="RFC8366" target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author initials='K.' surname='Watsen' fullname='K. Watsen'><organization /></author>
<author initials='M.' surname='Richardson' fullname='M. Richardson'><organization /></author>
<author initials='M.' surname='Pritikin' fullname='M. Pritikin'><organization /></author>
<author initials='T.' surname='Eckert' fullname='T. Eckert'><organization /></author>
<date year='2018' month='May' />
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor="I-D.ietf-anima-bootstrapping-keyinfra">
<front>
<title>Bootstrapping Remote Secure Key Infrastructures (BRSKI)</title>

<author initials='M' surname='Pritikin' fullname='Max Pritikin'>
    <organization />
</author>

<author initials='M' surname='Richardson' fullname='Michael Richardson'>
    <organization />
</author>

<author initials='M' surname='Behringer' fullname='Michael Behringer'>
    <organization />
</author>

<author initials='S' surname='Bjarnason' fullname='Steinthor Bjarnason'>
    <organization />
</author>

<author initials='K' surname='Watsen' fullname='Kent Watsen'>
    <organization />
</author>

<date month='June' day='22' year='2018' />

<abstract><t>This document specifies automated bootstrapping of a remote secure key infrastructure (BRSKI) using manufacturer installed X.509 certificate, in combination with a manufacturer's authorizing service, both online and offline.  Bootstrapping a new device can occur using a routable address and a cloud service, or using only link-local connectivity, or on limited/disconnected networks. Support for lower security models, including devices with minimal identity, is described for legacy reasons but not encouraged. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device but the established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-anima-bootstrapping-keyinfra-16' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-anima-bootstrapping-keyinfra-16.txt' />
</reference>




    </references>


<section anchor="changes-from-earlier-versions" title="Changes from Earlier Versions">

<t>Draft -01:
  * Add packet descriptions, IANA considerations, smooth out language.</t>

<t>Draft -00:</t>

<t><list style="symbols">
  <t>Initial revision</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

