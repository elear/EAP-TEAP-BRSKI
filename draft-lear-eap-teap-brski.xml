<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-lear-eap-teap-brski-02" category="std">

  <front>
    <title abbrev="BRSKI TEAP EAP">Bootstrapping Key Infrastructure over EAP</title>

    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="O." surname="Friel" fullname="Owen Friel">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 W. Tasman Dr.</street>
          <city>San Jose, CA</city>
          <code>95134</code>
          <country>United States</country>
        </postal>
        <email>ofriel@cisco.com</email>
      </address>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="Nancy Cam-Winget">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 W. Tasman Dr.</street>
          <city>San Jose, CA</city>
          <code>95134</code>
          <country>United States</country>
        </postal>
        <email>ncamwing@cisco.com</email>
      </address>
    </author>

    <date year="2019" month="February" day="20"/>

    
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>In certain environments, in order for a device to establish any layer
three communications, it is necessary for that device to be properly
credentialed.  This is a relatively easy problem to solve when a
device is associated with a human being and has both input and display
functions.  It is less easy when the human, input, and display
functions are not present.  To address this case, this memo specifies
extensions to the Tunnel Extensible Authentication Protocol (TEAP)
method that leverages Bootstrapping Remote Secure Key Infrastructures
(BRSKI) in order to provide a credential to a device at layer two.
The basis of this work is that a manufacturer will introduce the
device and the local deployment through cryptographic means.  In this
sense the same trust model as BRSKI is used.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t><xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> (BRSKI) specifies a means to
provision credentials to be used as credentials to operationally
access networks.  It was designed as a standalone means where some
limited access to an IP network is already available.  This is not
always the case.  For example, IEEE 802.11 networks generally require
authentication prior to any form of address assignment.  While it is
possible to assign an IP address to a device on some form of an open
network, or to accept some sort of default credential to establish
initial IP connectivity, the steps that would then follow might well
require that the device is placed on a new network, requiring reseting
all layer three parameters.</t>

<t>A more  natural approach  in such  cases is to  more tightly  bind the
provisioning  of credentials with  the authentication  mechanism.  One
such way  to do this is  to make use of  the Extensible Authentication
Protocol (EAP)  <xref target="RFC3748"/> and the  Tunnel Extensible Authentication
Protocol  (TEAP)  method  <xref target="RFC7170"/>.    Thus  we  define  new  TEAP
Type-Length-Value  (TLV) objects  that can  be used  to  transport the
BRSKI protocol messages within the context of a TEAP TLS tunnel.</t>

<t><xref target="RFC7170"/> discusses the notion of provisioning peers.  Several
different mechanisms are available.  Section 3.8 of that document
acknowledges the concept of not initially authenticating the outer TLS
session so that provisioning may occur.  In addition, exchange of
multiple TLV messages between client and EAP server permits multiple
provisioning steps.</t>

<section anchor="terminology" title="Terminology">

<t>The reader is presumed to be familiar with EAP terminology as stated
in <xref target="RFC3748"/>.  In addition, the following terms are commonly used in
this document.</t>

<t><list style="symbols">
  <t>BRSKI: Bootstrapping Remote Secure Key Infrastructures, as defined in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.  The term is also used
to refer to the flow described in that document.</t>
  <t>EST: Enrollment over Secure Transport, as defined in <xref target="RFC7030"/>.</t>
  <t>Voucher: a signed JSON object as defined in <xref target="RFC8366"/>.</t>
</list></t>

</section>
</section>
<section anchor="teap-brski-architecture" title="TEAP BRSKI Architecture">

<t>The TEAP BRSKI architecture is illustrated in
<xref target="brski-architecture"/>. The device talks to the TEAP server via the
Authenticator as per any normal EAP exchange. There is no need for an
inner EAP method server, and there is no explicit EAP method type
defined for BRSKI.</t>

<t>The architecture illustrated shows the TEAP server and registrar
function as being two logically separate entities, however the BRSKI
registrar functionality may be integrated into the TEAP server. The
device is not explicitly aware of where the registrar functionality is
deployed when executing BRSKI inside a TEAP tunnel. Note that the
device may connect directly to the registrar for the purposes of
certificate reenrollment, but this happens outside the context to
801.1X and TEAP authentication.</t>

<t>The registrar in turn communicates with the BRSKI MASA service for the
purposes of getting signed vouchers. [[TODO: I guess we should
mention TEAP server talking to vendor default registrar in the
cloud]]</t>

<t>The registrar also comunicates with a Certificate Authority in order
to issue LDevIDs. The architecture shows the registrar and CA as being
two logically separate entities, however the CA may be integrated into
the registrar. The device is not explicitly aware of whether the CA
and registrar functions are integrated.</t>

<figure><artwork><![CDATA[
+--------+     +---------+     +--------+     +---------+     +------+
|        |     |         |     |        |     |         |<--->| MASA |
|        |     | Authen- |     |  TEAP  |     | BRSKI   |     +------+
| Device |<--->| ticator |<--->| server |<--->|Registrar|
|        |     |         |     |        |     |         |     +------+
|        |     |         |     |        |     |         |<--->|  CA  |
+--------+     +---------+     +--------+     +---------+     +------+

]]></artwork></figure>

</section>
<section title="BRSKI Bootstrap and Enroll Operation" anchor="brski-architecture">

<t>This section summarises the current BRSKI operation. The BRSKI flow
assumes the device has an IDevID and has a manufacturer installed
trust anchor that can be used to validate the BRSKI voucher. The BRSKI
flow compromises serveral main steps from the perspective of the
device:</t>

<t><list style="symbols">
  <t>Step 1: Device discovers the registrar</t>
  <t>Step 2: Device establishes provisional TLS connection to registrar</t>
  <t>Step 3: Device sends voucher request message and receives signed voucher response</t>
  <t>Step 4: Device validates voucher and validates provisional TLS connection to registrar</t>
  <t>Step 5: Device downloads additional local domain CA information</t>
  <t>Step 6: Device downloads Certificate Signing Reqeust (CSR) attributes</t>
  <t>Step 7: Device does an EST enroll to obtain an LDevID</t>
  <t>Step 8: Device periodically reenrolls via EST to refresh its LDevID</t>
</list></t>

<t>Most of the operational steps require the device, and thus its internal state machine, to automatically complete the next step without being explicitly instructed to do so by the registrar. For example, the registrar does not explicitly tell the device to download additional local domain CA information, or to do an EST enroll to obtain an LDevID.</t>

<section anchor="executing-brski-in-a-teap-tunnel" title="Executing BRSKI in a TEAP Tunnel">

<t>This section outlines how the main BRSKI steps outlined above map to TEAP, and how BRSKI and enrollment can be accomplished inside a TEAP TLS tunnel. The following new TEAP TLVs are introduced:</t>

<t><list style="symbols">
  <t>BRSKI-VoucherRequest</t>
  <t>BRSKI-Voucher</t>
  <t>CSR-Attributes</t>
</list></t>

<t>The following steps outline how the above BRSKI flow maps to TEAP.</t>

<t><list style="symbols">
  <t>Step 1: Device discovers the registrar</t>
</list></t>

<t>When BRSKI is executed in a TEAP tunnel, the device exchanges BRSKI TLVs with the TEAP server. The discovery process for devices is therefore the standard wired or wireless LAN EAP server discovery process. The discovery processes outlined in section 4 of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> are not required for initial discovery of the registrar.</t>

<t><list style="symbols">
  <t>Step 2: Device establishes provisional TLS connection to registrar</t>
</list></t>

<t>The device establishes an outer TEAP tunnel with the TEAP server and
does not validate the server certificate. Similarly, at this
provisioning stage, the server does not validate the certificate of
the device.  The device presents its LDevID as its identity
certificate if it has a valid LDevID, otherwise it presents its
IDevID. Server policy may also be used to control which certificate
the device is allowed present, as described in section
<xref target="pki-certificate-authority-considerations"/>.</t>

<t>If the presented credential is sufficient to grant access, the TEAP server can return an EAP-Success immediately. The device may still send a BRSKI-RequestVoucher TLV in response to the EAP-Success if it does not have, but requires, trust anchors for validating the TEAP server certificate.</t>

<t>If the TEAP server requires that the device execute a BRSKI flow, it sends a Request-Action TLV that includes a BRSKI-VoucherRequest TLV. For example, if the device presented its IDevID but the TEAP server requires an LDevID.</t>

<t>The TEAP server may also require the device to reenroll, for example, if the device presented a valid LDevID that is very closed to expiration. The server may instruct a device to reenroll by sending a Request-Action TLV that includes a zero byte length PKCS#10 TLV.</t>

<t><list style="symbols">
  <t>Step 3: Device sends voucher request message and receives signed voucher response</t>
</list></t>

<t>The device sends a BRSKI-RequestVoucher TLV to the TEAP server. The
TEAP server forwards the RequestVoucher message to the MASA server,
and the MASA server replies with a signed voucher. The TEAP server
sends a BRSKI-Voucher TLV to the device.</t>

<t>If the MASA server does not issue a signed voucher, the TEAP server
sends an EAP-Error TLV with a suitable error code to the device.</t>

<t>For wireless devices in particular, it is important that the MASA
server only return a voucher for devices known to be associated with a
particular registrar.  In this sense, success indicates that the
device is on the correct network, while failure indicates the device
should try to provision itself within wireless networks (e.g, go to
the next SSID).</t>

<t><list style="symbols">
  <t>Step 4: Device validates voucher and validates provisional TLS connection to registrar</t>
</list></t>

<t>The device validates the signed voucher using its manufacturer
installed trust anchor, and uses the CA information in the voucher to
validate the outer TEAP TLS connection to the TEAP server.</t>

<t>If the device fails to validate the voucher, or fails to validate the
outer TEAP TLS connection, then it sends a TEAP-Error TLV indicating
failure to the TEAP server.</t>

<t><list style="symbols">
  <t>Step 5: Device downloads additional local domain CA information</t>
</list></t>

<t>On completion of the BRSKI flow, the device SHOULD send a
Trusted-Server-Root TLV to the TEAP server in order to discover
additional local domain CAs.</t>

<t><list style="symbols">
  <t>Step 6: Device downloads CSR attributes</t>
</list></t>

<t>No later than the completion of step 5, server MUST send a
CSR-Attributes TLV to peer server in order to discover the correct
fields to include when it enrolls to get an LDevID.</t>

<t><list style="symbols">
  <t>Step 7: Device does an EST enroll to obtain an LDevID</t>
</list></t>

<t>When executing the BRSKI flow inside a TEAP tunnel, the device does
not directly leverage EST when doing its initial enroll. Instead, the
device uses the existing TEAP PKCS#10 and PCKS#7 TEAP mechanisms.</t>

<t>Once the BRSKI flow is complete, the device can now send a PKCS#10 TLV
to enroll and request an LDevID. If the TEAP server instructed the
device to start the BRSKI flow via a Request-Action TLV that includes
a BRSKI-RequestVoucher TLV, then the device MUST send a PKCS#10 in
order to start the enroll process. The TEAP server will handle the
PKCS#10 and ultimately return a PKCS#7 including an LDevID to the
device.</t>

<t>If the TEAP server granted the device access on completion of the
outer TEAP TLS tunnel in step 2 without sending a Request-Action TLV,
the device does not have to send a PKCS#10 to enroll.</t>

<t>At this point, the device is said to be provisioned for local network
access, and may authenticate in the future via 802.1X with its newly
acquired credentials.</t>

<t><list style="symbols">
  <t>Step 8: Device periodically reenrolls to refresh its LDevID</t>
</list></t>

<t>When a device’s LDevID is close to expiration, there are two options
for re-enrollment in order to obtain a fresh LDevID. As outlined in
Step 2 above, the TEAP server may instruct the device to reenroll by
sending a Request-Action TLV including a PKCS#10 TLV. If the TEAP
server explicilty instructs the device to reenroll via these TLV
exchange, then the device MUST send a PKCS#10 to reenroll and request
a fresh LDevID.</t>

<t>However, the device SHOULD reenroll if it determines that its LDevID
is close to expiration wihtout waiting for explicit instruction from
the TEAP server. There are two options to do this.</t>

<t>Option 1: The device reenrolls for a new LDevID directly with the EST
CA outside the context of the 802.1X TEAP flow. The device uses the
registrar discovery mechanisms oulined in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> to discover the registrar
and the device sends the EST reenroll messages to the discovered
registrar endpoint. No new TEAP TLVs are defined to facilitate
discover of the registrar or EST endpoints inside the context of the
TEAP tunnel.</t>

<t>Option 2: When the device is performing a periodic 802.1X
authentication using its current LDevID, it reenrolls for a new LDevID
by sending a PKCS#10 TLV inside the TEAP TLS tunnel.</t>

</section>
</section>
<section anchor="pki-certificate-authority-considerations" title="PKI Certificate Authority Considerations">

<t>Careful consideration must be given to PKI certificate authority handling when:</t>

<t><list style="symbols">
  <t>Establishing the TEAP tunnel</t>
  <t>Establishing trust using BRSKI</t>
</list></t>

<t>These are described in more detail here.</t>

<section anchor="teap-tunnel-establishment" title="TEAP Tunnel Establishment">

<t>Because this method establishes a client identity, and for purposes of
partioning of responsibility, the peer uses a generic identity string
of teap-brsk@TBD1 as its network access identifier (NAI).</t>

<t>The client sends its ClientHello to initiate TLS tunnel
establishment. It is possible for the TEAP server to restrict the
certificates that the client can use for tunnel establishment by
including a list of CA distinguished names in the
certificate_authorities field in the CertificateRequest
message. Network operators may want to do this in order to restrict
netwok access to clients that have a certificate signed by one of a
small set of trusted manufacturer/supplier CAs. If the client has both
an IDevID and an LDevID, the client should present the LDevID in
preference to its IDevID if allowed by server policy.</t>

<t>In practice, network operators will likely want to onboard devices from a large number of device manufacturers, with each manufacturer using a different root CA when issuing IDevIDs. If the number of different manufacturer root CAs is large, this could result in very large TLS handshake messages. Operators may prefer to include no CAs in the certificate_authorities field thus allowing devices to present IDevIDs signed by any CA when establishing the TEAP tunnel, and instead enforce policy at LDevID enrollment time.</t>

<t>It is recommended that the client validate the certificate presented
by the server in the server’s Certificate message, but this may not be
possible for clients that have not yet provisioned appropriate trust
anchors. If the client is in the provisioning phase and
has not yet completed a BRSKI flow, it will not have trust anchors
installed yet, and thus will not be able to validate the server’s
certificate. The client must however note the certificate presented by
the server for (i) inclusion in the BRSKI-RequestVoucher TLV and for
(ii) validation once the client has discovered the local domain trust
anchors.</t>

<t>If the client does not present a suitable certificate to the server, the server MUST terminate the connection and fail the EAP request.</t>

<t>On establishment of the outer TLS tunnel, the TEAP server will make a policy decision on next steps. Possible policy decisions include:</t>

<t><list style="symbols">
  <t>Option 1: Server grants client full network access and returns EAP-Success. This will typically happen when the client presents a valid LDevID. Network policy may grant client network access based on IDevID without requiring the device to enroll to obtain an LDevID.</t>
  <t>Option 2: Server requires that client perform a full BRSKI flow, and then enroll to get an LDevID. This will typically happen when the client presents a valid IDevID and network policy requires all clients to have LDevIDs. The server sends a Request-Action TLV that includes a BRSKI-RequestVoucher TLV to the client to instruct it to start the BRSKI flow.</t>
  <t>Option 3: Server requires that the client reenroll to obtain a new LDevID. This could happen when the client presents a valid LDevID that is very close to expiration time, or the server’s policy requires an LDevID update. The server sends an Action-Request TLV including a PKCS#10 TLV to the client to instruct it to reenroll.</t>
</list></t>

</section>
<section anchor="brski-trust-establishment" title="BRSKI Trust Establishment">

<t>If the server requires that client perform a full BRSKI flow, it sends a Request-Action TLV that includes a zero byte length BRSKI-RequestVoucher TLV to the client. The client sends a new BRSKI-RequestVoucher TLV to the server, which contains all data specified in <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.2. The client includes the server certificate it received in the server’s Certificate message during outer TLS tunnel establishment in the proximity-registrar-cert field. The client signs the request using its IDevID.</t>

<t>The server includes all additional information as required by <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.4 and signs the request prior to forwarding to the MASA.</t>

<t>The MASA responds as per <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.5. The response may indicate failure and the server should react accordingly to failures by sending a failure response to the client, and failing the TEAP method.</t>

<t>If the MASA replies with a signed voucher and a successful result, the server then forwards this response to the client in a BRSKI-Voucher TLV.</t>

<t>When the client receives the signed voucher, it validates the signature using its built in trust anchor list, and extracts the pinned-domain-cert field. The client must use the CA included in the pinned-domain-cert to validate the certificate that was presented by the server when establishing the outer TLS tunnel. If this certificate validation fails, the client must fail the TEAP request and not connect to the network.</t>

<t>[TBD- based on client responses, the registrar sends a status update
to the MASA]</t>

</section>
</section>
<section anchor="channel-and-crypto-binding" title="Channel and Crypto Binding">

<t>As the TEAP BRSKI flow does not define or require an inner EAP method, there is no explicit need for exchange of Channel-Binding TLVs between the device and the TEAP server.</t>

<t>The TEAP BRSKI TLVs are expected to occur at the beginning of the TEAP Phase 2 and MUST occur before the final Crypto-Binding TLV.  This draft does not exclude the possibility of having other EAP methods occur following the TEAP BRSKI TLVs and as such, the Crypto-Binding TLV process rules as defined in <xref target="RFC7170"/> apply.</t>

</section>
<section anchor="protocol-flows" title="Protocol Flows">

<t>This section outlines protocol flows that map to the 3 server policy options described in section <xref target="teap-tunnel-establishment"/>. The protocol flows illustrate a TLS1.2 exchange.</t>

<t>[[TODO]] MISSING EAP Start/identity/Crypto binding, etc. Flows illustrative, but not 100% accurate.</t>

<section anchor="teap-server-grants-access" title="TEAP Server Grants Access">

<figure title="TEAP Server Grants Access" anchor="flow-1"><artwork><![CDATA[
+--------+             +-------------+     +------+
| Client |             | TEAP-Server |     | MASA |
+--------+             +-------------+     +------+
    |                         |                |
    |  ClientHello            |                |
    |------------------------>|                |
    |  ServerHello,           |                |
    |  Certificate(1),        |                |
    |  ServerKeyExchange,     |                |
    |  CertificateRequest(2), |                |
    |  ServerHelloDone,       |                |
    |<------------------------|                |
    |  Certificate(3),        |                |
    |  ClientKeyExchange,     |                |
    |  CertificateVerify,     |                |
    |  ChangeCipherSpec,      |                |
    |  Finished               |                |
    |------------------------>|                |
    |  ChangeCipherSpec,      |                |
    |  Finished               |                |
    |<------------------------|                |
    |  Crypto-Binding TLV     |                |
    |<------------------------|                |
    |  Crypto-Binding TLV     |                |
    |------------------------>|                |
    |  Result TLV             |                |
    |<------------------------|                |
    |  Result TLV             |                |
    |------------------------>|                |
    |      EAP-Success        |                |
    |<------------------------|                |

]]></artwork></figure>

<t>Notes:</t>

<t>(1) If the client has completed the BRSKI flow yet, it must validate the Certificate received from the server. If the client has not yet completed the BRSKI flow, then it provisionally accepts the server Certificate and must validate it later once BRSKI is complete.</t>

<t>(2) The server may include certificate_authorities field in the CertificateRequest message in order to restrict the identity certificates that the device is allowed present.</t>

<t>(3) The device will present its LDevID, if it has one, in preference to its IDevID, if allowed by server policy.</t>

</section>
<section anchor="teap-server-instructs-client-to-perform-brski-flow" title="TEAP Server Instructs Client to Perform BRSKI Flow">

<figure title="TEAP Server Instructs Client to Perform BRSKI Flow" anchor="flow-2"><artwork><![CDATA[
+--------+             +-------------+     +------+
| Client |             | TEAP-Server |     | MASA |
+--------+             +-------------+     +------+
    |                         |                |
    |      ClientHello        |                |
    |------------------------>|                |
    |   ServerHello, etc.(1)  |                |
    |<------------------------|                |
    |     etc., Finished      |                |
    |------------------------>|                |
    |     etc., Finished      |                |
    |<------------------------|                |
    | BRSKI-RequestAction(2)  |                |
    |<------------------------|                |
    | BRSKI-RequestVoucher(3) |                |
    |------------------------>| RequestVoucher |
    |                         |--------------->|
    |                         |    Voucher     |
    |     BRSKI-Voucher(4)    |<---------------|
    |<------------------------|                |
    |  Trusted-Server-Root    |                |
    |------------------------>|                |
    |  Trusted-Server-Root    |                |
    |<------------------------|                |
    |     CSR-Attributes      |                |
    |<------------------------|                |
    |         PKCS#10         |                |
    |------------------------>|                |
    |         PKCS#7          |                |
    |<------------------------|                |
    |  Crypto-Binding TLV     |                |
    |<------------------------|                |
    |  Crypto-Binding TLV     |                |
    |------------------------>|                |
    |  Result TLV             |                |
    |<------------------------|                |
    |  Result TLV             |                |
    |------------------------>|                |
    |      EAP-Success        |                |
    |<------------------------|                |

]]></artwork></figure>

<t>Notes:</t>

<t>(1) If the client has not yet completed the BRSKI flow, then it provisionally accepts the server certificate and must validate it later once BRSKI is complete.</t>

<t>(2) The server instructs the client to start the BRSKI flow by sending a RequestAction TLV that includes a BRSKI-RequestVoucher TLV.</t>

<t>(3) The client includes the certificate it received from the server in the RequestVoucher message.</t>

<t>(4) Once the client receives and validates the voucher signed by the MASA, it must verify the certificate it previously received from the server.</t>

</section>
<section anchor="teap-server-instructs-client-to-reenroll" title="TEAP Server Instructs Client to Reenroll">

<figure title="TEAP Server Instructs Client to Reenroll" anchor="flow-3"><artwork><![CDATA[
+--------+            +-------------+     +------+
| Client |            | TEAP-Server |     | MASA |
+--------+            +-------------+     +------+
    |                        |                |
    |      ClientHello       |                |
    |----------------------->|                |
    |   ServerHello, etc.    |                |
    |<-----------------------|                |
    |     etc., Finished     |                |
    |----------------------->|                |
    |     etc., Finished     |                |
    |<-----------------------|                |
    | RequestAction: PKCS#10 |                |
    |<-----------------------|                |
    |     CSR-Attributes     |                |
    |<-----------------------|                |
    |         PKCS#10        |                |
    |----------------------->|                |
    |         PKCS#7         |                |
    |<-----------------------|                |
    |  Crypto-Binding TLV    |                |
    |<-----------------------|                |
    |  Crypto-Binding TLV    |                |
    |----------------------->|                |
    |  Result TLV            |                |
    |<-----------------------|                |
    |  Result TLV            |                |
    |----------------------->|                |
    |      EAP-Success       |                |
    |<-----------------------|                |

]]></artwork></figure>

</section>
<section anchor="out-of-band-reenroll" title="Out of Band Reenroll">

<t>This section shows how the device does a reenroll to refresh its LDEvID directly against the registrar outside the context of the TEAP tunnel.</t>

</section>
</section>
<section anchor="teap-tlv-formats" title="TEAP TLV Formats">

<section anchor="brski-tlvs" title="BRSKI TLVs">

<t>BRSKI defines 3 new TEAP TLVs. The following table indicates whether
the TLVs can be included in Request messages from TEAP server to
device, or Response messages from device to TEAP server.</t>

<figure><artwork><![CDATA[
+------------------------+----------+
| TLV                    | Message  |
+------------------------+----------+
| BRSKI-VoucherRequest   | Response |
| BRSKI-Voucher          | Request  |
| CSR-Attributes         | Response |
+------------------------+----------+

]]></artwork></figure>

<t>These new TLVs are detailed in this section.</t>

<section anchor="brski-requestvoucher-tlv" title="BRSKI-RequestVoucher TLV">

<t>This TLV is used by the server as part of an Action-Request to
request from the peer that it initiate a voucher request.  When used
in this fashion, the length of this TLV will be set to zero.</t>

<t>It is also used by the peer to initiate the voucher request.  When
used in this fashion, the length of the TLV will be set to that of the
voucher request, as encoded and described in Section 3.3 in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD1-VoucherRequest   |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                              Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>The M and R bits are always expected to be set to 0.</t>

<t>The server is expected to forward the voucher request to the MASA, and
then return a voucher in a BRSKI-Voucher TLV as described below.  If
it is unable to do so, it returns an TEAP Error TLV with one of
the defined errors or the following:</t>

<figure><artwork><![CDATA[
TBD2-MASA-Notavailable  MASA unavailable
TBD3-MASA-Refused       MASA refuses to sign the voucher

]]></artwork></figure>

<t>The peer terminates the TEAP connection, but may retry at some later
point.  The backoff mechanism for such retries should be appropriate
for the device.  Retries MUST occur no more frequently than once
every two (XXX) minutes.</t>

</section>
<section anchor="brski-voucher-tlv" title="BRSKI-Voucher TLV">

<t>This TLV is transmitted from the server to the peer.  It contains a
signed voucher, as describe in <xref target="RFC8366"/>.</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD4-Voucher          |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                              Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>Upon receiving this TLV the peer will validate the signature of the
voucher, using its pre-installed manufacturer trust anchor (LDevID).
It MUST also validate the certificate used by the server to establish
the TLS connection.</t>

<t>If successful, it installs the new trust anchor contained in the
voucher.</t>

<t>Otherwise, the peer transmits an TEAP error TLV with one of the
following error messages:</t>

<figure><artwork><![CDATA[
TBD5-Invalid-Signature  The signature of the voucher signer is invalid
TBD6-Invalid-Voucher    The form or content of the voucher is not valid
TBD7-Invalid-TLS-Signer The certificate used for the TLS connection
                       could not be validated.

]]></artwork></figure>

</section>
<section anchor="csr-attributes-tlv" title="CSR-Attributes TLV">

<t>The server SHALL transmit this TLV to the peer, either along with the
BRSKI-Voucher TLV or at any time earlier in a communication.  The peer
shall include attributes required by the server in any following CSR.
The value of this TLV is the base64 encoding described in Section
4.5.2 of <xref target="RFC7030"/>.</t>

<figure><artwork><![CDATA[
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD8-CSR-Attributes |         length                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>Again, the M and R values are set to 0.  In the case where the client
is unable to provide the requested attributes, an TEAP-Error is
returned as follows:</t>

<t>TBD9-CSR-Attribute-Fail Unable to supply the requested attributes.</t>

</section>
</section>
<section anchor="existing-teap-tlv-specifications" title="Existing TEAP TLV Specifications">

<t>This section documents allowed usage of existing TEAP TLVs. The definition of the TLV is not changed, however clarifications on allowed values for the TLV fields is documented.</t>

<section anchor="pkcs10-tlv" title="PKCS#10 TLV">

<t><xref target="RFC7170"/> defines the PKCS#10 TLV as follows:</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R|         TLV Type          |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           PKCS#10 Data...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-

]]></artwork></figure>

<t><xref target="RFC7170"/> does not explicitly allow a Length value of zero.</t>

<t>A Length value of zero is allowed for this TLV when the TEAP server sends a Request-Action TLV with a child PKCS#10 TLV to the client. In this scenario, there is no PKCS#10 Data included in the TLV. Clients MUST NOT send a zero length PKCS#10 TLV to the server.</t>

</section>
</section>
</section>
<section anchor="fragmentation" title="Fragmentation">
<t>TLS is expected to provide fragmentation support. Thus EAP-TEAP-BRSKI
does not specifically provide any, as it is only expected to be used
as an inner method to TEAP.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>The IANA is requested to add entries into the following tables:</t>

<t>The following new TEAP TLVs are defined:</t>

<figure><artwork><![CDATA[
TBD1-VoucherRequest   Described in this document.
TBD4-Voucher          Described in this document.
TBD8-CSR-Attributes   Described in this document.

]]></artwork></figure>

<t>The following TEAP Error Codes are defined, with their meanings
listed here and in previous sections:</t>

<figure><artwork><![CDATA[
TBD2-MASA-Notavailable  MASA unavailable
TBD3-MASA-Refused       MASA refuses to sign the voucher
TBD5-Invalid-Signature  The signature of the voucher signer is invalid
TBD6-Invalid-Voucher    The form or content of the voucher is not valid
TBD7-Invalid-TLS-Signer The certificate used for the TLS connection
                        could not be validated.
TBD9-CSR-Attribute-Fail Unable to supply the requested attributes.

]]></artwork></figure>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>There will be many.</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>The authors would like to thank Brian Weis for his assistance, and
Alan Dakok for improving language consistency.  In addition, with
ruthlessly “borrowed” the concept around NAI handling from Tuomas Aura
and Mohit Sethi.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>





<reference  anchor="RFC3748" target='https://www.rfc-editor.org/info/rfc3748'>
<front>
<title>Extensible Authentication Protocol (EAP)</title>
<author initials='B.' surname='Aboba' fullname='B. Aboba'><organization /></author>
<author initials='L.' surname='Blunk' fullname='L. Blunk'><organization /></author>
<author initials='J.' surname='Vollbrecht' fullname='J. Vollbrecht'><organization /></author>
<author initials='J.' surname='Carlson' fullname='J. Carlson'><organization /></author>
<author initials='H.' surname='Levkowetz' fullname='H. Levkowetz' role='editor'><organization /></author>
<date year='2004' month='June' />
<abstract><t>This document defines the Extensible Authentication Protocol (EAP), an authentication framework which supports multiple authentication methods.  EAP typically runs directly over data link layers such as Point-to-Point Protocol (PPP) or IEEE 802, without requiring IP.  EAP provides its own support for duplicate elimination and retransmission, but is reliant on lower layer ordering guarantees.  Fragmentation is not supported within EAP itself; however, individual EAP methods may support this.  This document obsoletes RFC 2284.  A summary of the changes between this document and RFC 2284 is available in Appendix A.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3748'/>
<seriesInfo name='DOI' value='10.17487/RFC3748'/>
</reference>



<reference  anchor="RFC7170" target='https://www.rfc-editor.org/info/rfc7170'>
<front>
<title>Tunnel Extensible Authentication Protocol (TEAP) Version 1</title>
<author initials='H.' surname='Zhou' fullname='H. Zhou'><organization /></author>
<author initials='N.' surname='Cam-Winget' fullname='N. Cam-Winget'><organization /></author>
<author initials='J.' surname='Salowey' fullname='J. Salowey'><organization /></author>
<author initials='S.' surname='Hanna' fullname='S. Hanna'><organization /></author>
<date year='2014' month='May' />
<abstract><t>This document defines the Tunnel Extensible Authentication Protocol (TEAP) version 1.  TEAP is a tunnel-based EAP method that enables secure communication between a peer and a server by using the Transport Layer Security (TLS) protocol to establish a mutually authenticated tunnel.  Within the tunnel, TLV objects are used to convey authentication-related data between the EAP peer and the EAP server.</t></abstract>
</front>
<seriesInfo name='RFC' value='7170'/>
<seriesInfo name='DOI' value='10.17487/RFC7170'/>
</reference>



<reference  anchor="RFC7030" target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author initials='M.' surname='Pritikin' fullname='M. Pritikin' role='editor'><organization /></author>
<author initials='P.' surname='Yee' fullname='P. Yee' role='editor'><organization /></author>
<author initials='D.' surname='Harkins' fullname='D. Harkins' role='editor'><organization /></author>
<date year='2013' month='October' />
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference  anchor="RFC8366" target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author initials='K.' surname='Watsen' fullname='K. Watsen'><organization /></author>
<author initials='M.' surname='Richardson' fullname='M. Richardson'><organization /></author>
<author initials='M.' surname='Pritikin' fullname='M. Pritikin'><organization /></author>
<author initials='T.' surname='Eckert' fullname='T. Eckert'><organization /></author>
<date year='2018' month='May' />
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor="I-D.ietf-anima-bootstrapping-keyinfra">
<front>
<title>Bootstrapping Remote Secure Key Infrastructures (BRSKI)</title>

<author initials='M' surname='Pritikin' fullname='Max Pritikin'>
    <organization />
</author>

<author initials='M' surname='Richardson' fullname='Michael Richardson'>
    <organization />
</author>

<author initials='M' surname='Behringer' fullname='Michael Behringer'>
    <organization />
</author>

<author initials='S' surname='Bjarnason' fullname='Steinthor Bjarnason'>
    <organization />
</author>

<author initials='K' surname='Watsen' fullname='Kent Watsen'>
    <organization />
</author>

<date month='January' day='17' year='2019' />

<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this a remote secure key infrastructure (BRSKI) is created using manufacturer installed X.509 certificate, in combination with a manufacturer's authorizing service, both online and offline.  Bootstrapping a new device can occur using a routable address and a cloud service, or using only link-local connectivity, or on limited/disconnected networks.  Support for lower security models, including devices with minimal identity, is described for legacy reasons but not encouraged.  Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device but the established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-anima-bootstrapping-keyinfra-18' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-anima-bootstrapping-keyinfra-18.txt' />
</reference>




    </references>


<section anchor="changes-from-earlier-versions" title="Changes from Earlier Versions">

<t>Draft -01:
  * Add packet descriptions, IANA considerations, smooth out language.</t>

<t>Draft -00:</t>

<t><list style="symbols">
  <t>Initial revision</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

