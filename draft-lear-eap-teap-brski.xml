<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-lear-eap-teap-brski-02" category="std">

  <front>
    <title abbrev="BRSKI TEAP EAP">Bootstrapping Key Infrastructure over EAP</title>

    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="O." surname="Friel" fullname="Owen Friel">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 W. Tasman Dr.</street>
          <city>San Jose, CA</city>
          <code>95134</code>
          <country>United States</country>
        </postal>
        <email>ofriel@cisco.com</email>
      </address>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="Nancy Cam-Winget">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 W. Tasman Dr.</street>
          <city>San Jose, CA</city>
          <code>95134</code>
          <country>United States</country>
        </postal>
        <email>ncamwing@cisco.com</email>
      </address>
    </author>

    <date year="2019" month="June" day="07"/>

    
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>In certain environments, in order for a device to establish any layer
three communications, it is necessary for that device to be properly
credentialed.  This is a relatively easy problem to solve when a
device is associated with a human being and has both input and display
functions.  It is less easy when the human, input, and display
functions are not present.  To address this case, this memo specifies
extensions to the Tunnel Extensible Authentication Protocol (TEAP)
method that leverages Bootstrapping Remote Secure Key Infrastructures
(BRSKI) in order to provide a credential to a device at layer two.
The basis of this work is that a manufacturer will introduce the
device and the local deployment through cryptographic means.  In this
sense the same trust model as BRSKI is used.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t><xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> (BRSKI) specifies a means to
provision credentials to be used as credentials to operationally
access networks.  It was designed as a standalone means where some
limited access to an IP network is already available.  This is not
always the case.  For example, IEEE 802.11 networks generally require
authentication prior to any form of address assignment.  While it is
possible to assign an IP address to a device on some form of an open
network, or to accept some sort of default credential to establish
initial IP connectivity, the steps that would then follow might well
require that the device is placed on a new network, requiring reseting
all layer three parameters.</t>

<t>A more  natural approach  in such  cases is to  more tightly  bind the
provisioning  of credentials with  the authentication  mechanism.  One
such way  to do this is  to make use of  the Extensible Authentication
Protocol (EAP)  <xref target="RFC3748"/> and the  Tunnel Extensible Authentication
Protocol  (TEAP)  method  <xref target="RFC7170"/>.    Thus  we  define  new  TEAP
Type-Length-Value  (TLV) objects  that can  be used  to  transport the
BRSKI protocol messages within the context of a TEAP TLS tunnel.</t>

<t><xref target="RFC7170"/> discusses the notion of provisioning peers.  Several
different mechanisms are available.  Section 3.8 of that document
acknowledges the concept of not initially authenticating the outer TLS
session so that provisioning may occur.  In addition, exchange of
multiple TLV messages between client and EAP server permits multiple
provisioning steps.</t>

<section anchor="terminology" title="Terminology">

<t>The reader is presumed to be familiar with EAP terminology as stated
in <xref target="RFC3748"/>.  In addition, the following terms are commonly used in
this document.</t>

<t><list style="symbols">
  <t>BRSKI: Bootstrapping Remote Secure Key Infrastructures, as defined in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.  The term is also used
to refer to the flow described in that document.</t>
  <t>EST: Enrollment over Secure Transport, as defined in <xref target="RFC7030"/>.</t>
  <t>Voucher: a signed JSON object as defined in <xref target="RFC8366"/>.</t>
</list></t>

</section>
</section>
<section anchor="teap-brski-architecture" title="TEAP BRSKI Architecture">

<t>The TEAP BRSKI architecture is illustrated in
<xref target="brski-architecture"/>. The device talks to the TEAP server via the
Authenticator using any compliant transport such as IEEE 802.1X.
The architecture illustrated shows an Authenticator distinct from
the TEAP server. This is a deployment optimization and when so
deployed the communication between Authenticator and TEAP server
is a AAA protocol such as RADIUS or DIAMETER.</t>

<t>The architecture illustrated shows a co-located TEAP server and
BRSKI registrar. Not only are these two functions co-located, they
MUST be the same entity. This ensures that the entity identified in
the device’s voucher request (the TEAP server) is the same entity
that signs the voucher request (the registrar).</t>

<t>The registrar communicates with the BRSKI MASA service for the
purposes of getting signed vouchers. [[TODO: I guess we should
mention TEAP server talking to vendor default registrar in the
cloud]]</t>

<t>The registrar also comunicates with a Certificate Authority in order
to issue LDevIDs. The architecture shows the registrar and CA as being
two logically separate entities, however the CA may be integrated into
the registrar. The device is not explicitly aware of whether the CA
and registrar functions are integrated.</t>

<figure><artwork><![CDATA[
+--------+     +---------+     +---------+     +------+
|        |     |         |     |  TEAP   |<--->| MASA |
|        |     | Authen- |     | server  |     +------+
| Device |<--->| ticator |<--->|         |
|        |     |         |     |  BRSKI  |     +------+
|        |     |         |     |Registrar|<--->|  CA  |
+--------+     +---------+     +---------+     +------+

]]></artwork></figure>

</section>
<section title="BRSKI Bootstrap and Enroll Operation" anchor="brski-architecture">

<t>This section summarises the current BRSKI operation. The BRSKI flow
assumes the device has an IDevID and has a manufacturer installed
trust anchor that can be used to validate the BRSKI voucher. The BRSKI
flow compromises serveral main steps from the perspective of the
device:</t>

<t><list style="symbols">
  <t>Step 1: Device discovers the registrar</t>
  <t>Step 2: Device establishes provisional TLS connection to registrar</t>
  <t>Step 3: Device sends voucher request message and receives signed voucher response</t>
  <t>Step 4: Device validates voucher and validates provisional TLS connection to registrar</t>
  <t>Step 5: Device downloads additional local domain CA information</t>
  <t>Step 6: Device downloads Certificate Signing Reqeust (CSR) attributes</t>
  <t>Step 7: Device does a certificate enroll to obtain an LDevID</t>
  <t>Step 8: Device periodically reenrolls via EST to refresh its LDevID</t>
</list></t>

<t>Most of the operational steps require the device, and thus its internal state machine, to automatically complete the next step without being explicitly instructed to do so by the registrar. For example, the registrar does not explicitly tell the device to download additional local domain CA information, or to do an EST enroll to obtain an LDevID.</t>

<section anchor="executing-brski-in-a-teap-tunnel" title="Executing BRSKI in a TEAP Tunnel">

<t>This section outlines how the main BRSKI steps outlined above map to TEAP, and how BRSKI and enrollment can be accomplished inside a TEAP TLS tunnel. The following new TEAP TLVs are introduced:</t>

<t><list style="symbols">
  <t>BRSKI-VoucherRequest</t>
  <t>BRSKI-Voucher</t>
  <t>CSR-Attributes</t>
</list></t>

<t>The following steps outline how the above BRSKI flow maps to TEAP.</t>

<t><list style="symbols">
  <t>Step 1: Device discovers the registrar</t>
</list></t>

<t>When BRSKI is executed in a TEAP tunnel, the device exchanges BRSKI TLVs with the TEAP server. The discovery process for devices is therefore the standard wired or wireless LAN EAP server discovery process. The discovery processes outlined in section 4 of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> are not required for initial discovery of the registrar.</t>

<t><list style="symbols">
  <t>Step 2: Device establishes provisional TLS connection to registrar</t>
</list></t>

<t>The device establishes an outer TEAP tunnel with the TEAP server and
does not validate the server certificate. 
The device presents its LDevID as its identity
certificate if it has a valid LDevID, otherwise it presents its
IDevID. The TEAP server validates the device’s certificate using
its implicit or explicit trust anchor database. If the device
presents an IDevID it is verified against a database of trusted
manufacturer certificates. Server policy may also be used to control
which certificate the device is allowed present, as described in
section {pki-certificate-authority-considerations}.</t>

<t>If the presented credential is sufficient to grant access, the TEAP server can return a TEAP Result TLV indicating success immediately. The device may still send a Request-Action TLV including a BRSKI-VoucherRequest TLV in response to the TEAP Result TLV if it does not have, but requires, provisioning of trust anchors for validating the TEAP server certificate. Note that no inner EAP method is required for this, only an exchange of TEAP TLVs.</t>

<t>[todo] Question: as the device wants the server to reply with a BRSKI-Voucher TLV, does it really send a Request-Action TLV containing a BRSKI-VoucherRequest TLV, or does it send a Request-Action TLV containing a BRSKI-Voucher TLV?? The TEAP draft is a bit ambiguous here. Normally, if one end sends a Request-Action including XXX-TLV, it means it wants the far end ot send an XXX-TLV…</t>

<t>[todo] Question: general TEAP protocol question: does the device have to send a Request-Action w/BRSKI-VoucherRequest or can it send a BRSKI-VoucherRequest on its own? I’m not clear on this.</t>

<t>If the TEAP server requires that the device execute a BRSKI flow, the server sends a Request-Action TLV that includes a BRSKI-VoucherRequest TLV. For example, if the device presented its IDevID but the TEAP server requires an LDevID.</t>

<t>[todo] Question: to nit pick, the server should send a Request-Action TLV including a PKCS#10 TLV to tell the client to enroll. How does the server really know that the client has the correct trust established (as previously received by a BRSKI-Voucher)? If the client sends an IDevID, does server always send a Request-Action including both BRSKI-VoucherRequest and PKCS#10 TLVs? Whats the client behaviour? I assume client can spontaneously send BRSKI-VoucherRequest and/or PCSK#10 without being explicitly instructed to. Just need to get the language correct here.</t>

<t>The TEAP server may also require the device to reenroll, for example, if the device presented a valid LDevID that is very closed to expiration. The server may instruct a device to reenroll by sending a Request-Action TLV that includes a zero byte length PKCS#10 TLV.</t>

<t><list style="symbols">
  <t>Step 3: Device sends voucher request message and receives signed voucher response</t>
</list></t>

<t>The device sends a BRSKI-RequestVoucher TLV to the TEAP server. The
TEAP server forwards the RequestVoucher message to the MASA server,
and the MASA server replies with a signed voucher. The TEAP server
sends a BRSKI-Voucher TLV to the device.</t>

<t>If the MASA server does not issue a signed voucher, the TEAP server
sends an EAP-Error TLV with a suitable error code to the device.</t>

<t>For wireless devices in particular, it is important that the MASA
server only return a voucher for devices known to be associated with a
particular registrar.  In this sense, success indicates that the
device is on the correct network, while failure indicates the device
should try to provision itself within wireless networks (e.g, go to
the next SSID).</t>

<t><list style="symbols">
  <t>Step 4: Device validates voucher and validates provisional TLS connection to registrar</t>
</list></t>

<t>The device validates the signed voucher using its manufacturer
installed trust anchor, and uses the CA information in the voucher to
validate the TLS connection to the TEAP server.</t>

<t>If the device fails to validate the voucher, then it sends a TEAP-Error TLV indicating failiure to the TEAP server.</t>

<t>Similarly, if the device validates the voucher, but fails to validate the provisional TLS connection, then it sends a TEAP-Error TLV indicating failure to the TEAP server. Note that the outer TLS tunnel has already been established, thus allowing the client to send a TEAP-Error TLV to the server inside that tunnel to indicate that it failed to verify the provisionally accepted outer TLS tunnel server identity.</t>

<t><list style="symbols">
  <t>Step 5: Device downloads additional local domain CA information</t>
</list></t>

<t>On completion of the BRSKI flow, the device SHOULD send a
Trusted-Server-Root TLV to the TEAP server in order to discover
additional local domain CAs. This is equivalent to section [todo] from <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<t><list style="symbols">
  <t>Step 6: Device downloads CSR attributes</t>
</list></t>

<t>No later than the completion of step 5, server MUST send a
CSR-Attributes TLV to peer server in order to discover the correct
fields to include when it enrolls to get an LDevID.</t>

<t><list style="symbols">
  <t>Step 7: Device does a certificate enroll to obtain an LDevID</t>
</list></t>

<t>When executing the BRSKI flow inside a TEAP tunnel, the device does
not directly leverage EST when doing its initial enroll. Instead, the
device uses the existing TEAP PKCS#10 and PCKS#7 TEAP mechanisms.</t>

<t>Once the BRSKI flow is complete, the device can now send a PKCS#10 TLV
to enroll and request an LDevID. If the TEAP server instructed the
device to start the BRSKI flow via a Request-Action TLV that includes
a BRSKI-RequestVoucher TLV, then the device MUST send a PKCS#10 in
order to start the enroll process. The TEAP server will handle the
PKCS#10 and ultimately return a PKCS#7 including an LDevID to the
device.</t>

<t>If the TEAP server granted the device access on completion of the
outer TEAP TLS tunnel in step 2 without sending a Request-Action TLV,
the device does not have to send a PKCS#10 to enroll.</t>

<t>At this point, the device is said to be provisioned for local network
access, and may authenticate in the future via 802.1X with its newly
acquired credentials.</t>

<t><list style="symbols">
  <t>Step 8: Device periodically reenrolls to refresh its LDevID</t>
</list></t>

<t>When a device’s LDevID is close to expiration, there are two options
for re-enrollment in order to obtain a fresh LDevID. As outlined in
Step 2 above, the TEAP server may instruct the device to reenroll by
sending a Request-Action TLV including a PKCS#10 TLV. If the TEAP
server explicilty instructs the device to reenroll via these TLV
exchange, then the device MUST send a PKCS#10 to reenroll and request
a fresh LDevID.</t>

<t>However, the device SHOULD reenroll if it determines that its LDevID
is close to expiration without waiting for explicit instruction from
the TEAP server. There are two options to do this.</t>

<t>Option 1: The device reenrolls for a new LDevID directly with the EST
CA outside the context of the 802.1X TEAP flow. The device uses the
registrar discovery mechanisms oulined in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> to discover the registrar
and the device sends the EST reenroll messages to the discovered
registrar endpoint. No new TEAP TLVs are defined to facilitate
discover of the registrar or EST endpoints inside the context of the
TEAP tunnel.</t>

<t>Option 2: When the device is performing a periodic 802.1X
authentication using its current LDevID, it reenrolls for a new LDevID
by sending a PKCS#10 TLV inside the TEAP TLS tunnel.</t>

</section>
</section>
<section anchor="pki-certificate-considerations" title="PKI Certificate Considerations">

<t>Careful consideration must be given to PKI certificate authority handling when:</t>

<t><list style="symbols">
  <t>Establishing the TEAP tunnel</t>
  <t>Establishing trust using BRSKI</t>
</list></t>

<t>Additionally, consideration must be given to IDevID and LDevID expiration times.</t>

<t>These are described in more detail here.</t>

<section anchor="teap-tunnel-establishment" title="TEAP Tunnel Establishment">

<t>Because this method establishes a client identity, and for purposes of
partioning of responsibility, the peer uses a generic identity string
of teap-brsk@TBD1 as its network access identifier (NAI).</t>

<t>The client sends its ClientHello to initiate TLS tunnel
establishment. It is possible for the TEAP server to restrict the
certificates that the client can use for tunnel establishment by
including a list of CA distinguished names in the
certificate_authorities field in the CertificateRequest
message. Network operators may want to do this in order to restrict
network access to clients that have a certificate signed by one of a
small set of trusted manufacturer/supplier CAs. If the client has both
an IDevID and an LDevID, the client should present the LDevID in
preference to its IDevID if allowed by server policy.</t>

<t>In practice, network operators will likely want to onboard devices from a large number of device manufacturers, with each manufacturer using a different root CA when issuing IDevIDs. If the number of different manufacturer root CAs is large, this could result in very large TLS handshake messages. Operators may prefer to include no CAs in the certificate_authorities field thus allowing devices to present IDevIDs signed by any CA when establishing the TEAP tunnel, and instead enforce policy at LDevID enrollment time.</t>

<t>It is recommended that the client validate the certificate presented
by the server in the server’s Certificate message, but this may not be
possible for clients that have not yet provisioned appropriate trust
anchors. If the client is in the provisioning phase and
has not yet completed a BRSKI flow, it will not have trust anchors
installed yet, and thus will not be able to validate the server’s
certificate. The client must however note the certificate presented by
the server for (i) inclusion in the BRSKI-RequestVoucher TLV and for
(ii) validation once the client has discovered the local domain trust
anchors.</t>

<t>If the client does not present a suitable certificate to the server, the server MUST terminate the connection and fail the EAP request. If the TEAP server is unable to validate the client’s certificate using its implicit or explicit trust anchor database it MUST fail the EAP request.</t>

<t>On establishment of the outer TLS tunnel, the TEAP server will make a policy decision on next steps. Possible policy decisions include:</t>

<t><list style="symbols">
  <t>Option 1: Server grants client full network access and returns EAP-Success. This will typically happen when the client presents a valid LDevID. Network policy may grant client network access based on IDevID without requiring the device to enroll to obtain an LDevID.</t>
  <t>Option 2: Server requires that client perform a full BRSKI flow, and then enroll to get an LDevID. This will typically happen when the client presents a valid IDevID and network policy requires all clients to have LDevIDs. The server sends a Request-Action TLV that includes a BRSKI-RequestVoucher TLV to the client to instruct it to start the BRSKI flow.</t>
  <t>Option 3: Server requires that the client reenroll to obtain a new LDevID. This could happen when the client presents a valid LDevID that is very close to expiration time, or the server’s policy requires an LDevID update. The server sends an Action-Request TLV including a PKCS#10 TLV to the client to instruct it to reenroll.</t>
</list></t>

</section>
<section anchor="brski-trust-establishment" title="BRSKI Trust Establishment">

<t>If the server requires that client perform a full BRSKI flow, it sends a Request-Action TLV that includes a zero byte length BRSKI-RequestVoucher TLV to the client. The client sends a new BRSKI-RequestVoucher TLV to the server, which contains all data specified in <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.2. The client includes the server certificate it received in the server’s Certificate message during outer TLS tunnel establishment in the proximity-registrar-cert field. The client signs the request using its IDevID.</t>

<t>The server includes all additional information as required by <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.4 and signs the request prior to forwarding to the MASA.</t>

<t>The MASA responds as per <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 5.5. The response may indicate failure and the server should react accordingly to failures by sending a failure response to the client, and failing the TEAP method.</t>

<t>If the MASA replies with a signed voucher and a successful result, the server then forwards this response to the client in a BRSKI-Voucher TLV.</t>

<t>When the client receives the signed voucher, it validates the signature using its built in trust anchor list, and extracts the pinned-domain-cert field. The client must use the CA included in the pinned-domain-cert to validate the certificate that was presented by the server when establishing the outer TLS tunnel. If this certificate validation fails, the client must fail the TEAP request and not connect to the network.</t>

<t>[TBD- based on client responses, the registrar sends a status update
to the MASA]</t>

</section>
<section anchor="certificate-expiration-times" title="Certificate Expiration Times">

<t>[802.1AR] section 7.2.7.2 states:</t>

<t><list style='empty'>
  <t>notAfter: The latest time a DevID is expected to be used. Devices possessing an IDevID are expected to operate indefinitely into the future and should use the value 99991231235959Z. Solutions verifying a DevID are expected to accept this value indefinitely.</t>
</list></t>

<t>TEAP servers SHOULD follow the 802.1AR standard when validating IDevIDs.</t>

<t>TEAP servers SHOULD reject LDevIDs with expired certificates and SHOULD NOT allow clients to connect with recently expired LDevIDs. If a client presents a recently expired LDevID it SHOULD be forced to authenticate using its IDevID and then reenroll to obtain a valid LDevID.</t>

</section>
</section>
<section anchor="channel-and-crypto-binding" title="Channel and Crypto Binding">

<t>As the TEAP BRSKI flow does not define or require an inner EAP method, there is no explicit need for exchange of Channel-Binding TLVs between the device and the TEAP server.</t>

<t>The TEAP BRSKI TLVs are expected to occur at the beginning of the TEAP Phase 2 and MUST occur before the final Crypto-Binding TLV.  This draft does not exclude the possibility of having other EAP methods occur following the TEAP BRSKI TLVs and as such, the Crypto-Binding TLV process rules as defined in <xref target="RFC7170"/> apply.</t>

</section>
<section anchor="protocol-flows" title="Protocol Flows">

<t>This section outlines protocol flows that map to the 3 server policy options described in section <xref target="teap-tunnel-establishment"/>. The protocol flows illustrate a TLS1.2 exchange. Pertinent notes are outlined in the protocol flows.</t>

<section anchor="teap-server-grants-access" title="TEAP Server Grants Access">

<t>In this flow, the server grants access as server policy allows the client to access the network based on the identity certificate that the client presented. This means that either (i) the client has previously completed BRSKI and has presented a valid LDevID or (ii) the client presents an IDevID and network policy allows access based purely on IDevID.</t>

<figure title="TEAP Server Grants Access" anchor="flow-1"><artwork><![CDATA[

                      +----------------+
+--------+            | Authenticator/ |    +------+
| Client |            |   TEAP-Server  |    | MASA |
+--------+            +----------------+    +------+
    |  EAP-Request/           |                |
    |   Type=Identity         |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=Identity         |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
    |   TEAP Start,           |                |
    |   Authority-ID TLV      |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
    |   TLS(ClientHello)      |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
    |   TLS(ServerHello,      |                |
 (1)|   Certificate,          |                |
    |   ServerKeyExchange,    |                |
 (2)|   CertificateRequest,   |                |
    |   ServerHelloDone)      |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
 (3)|   TLS(Certificate,      |                |
    |   ClientKeyExchange,    |                |
    |   CertificateVerify,    |                |
    |   ChangeCipherSpec,     |                |
    |   Finished)             |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Request/           |                |
    |   Type=TEAP,            |                |
    |   TLS(ChangeCipherSpec, |                |
    |   Finished),            |                |
    |   {Crypto-Binding TLV,  |                |
    |   Result TLV=Success}   |                |
    |<------------------------|                |
    |                         |                |
    |  EAP-Response/          |                |
    |   Type=TEAP,            |                |
    |   {Crypto-Binding TLV,  |                |
    |   Result TLV=Success}   |                |
    |------------------------>|                |
    |                         |                |
    |  EAP-Success            |                |
    |<------------------------|                |


]]></artwork></figure>

<t>Notes:</t>

<t>(1) If the client has completed the BRSKI flow and has locally significant trust anchors, it must validate the Certificate received from the server. If the client has not yet completed the BRSKI flow, then it provisionally accepts the server Certificate and must validate it later once BRSKI is complete.</t>

<t>(2) The server may include certificate_authorities field in the CertificateRequest message in order to restrict the identity certificates that the device is allowed present.</t>

<t>(3) The device will present its LDevID, if it has one, in preference to its IDevID, if allowed by server policy.</t>

</section>
<section anchor="teap-server-instructs-client-to-perform-brski-flow" title="TEAP Server Instructs Client to Perform BRSKI Flow">

<t>In this flow, the server instructs the client to perform a BRSKI flow by exchanging TLVs once the outer TLS tunnel is established.</t>

<figure title="TEAP Server Instructs Client to Perform BRSKI Flow" anchor="flow-2"><artwork><![CDATA[
                          +----------------+
+--------+                | Authenticator/ |    +------+  +----+
| Client |                |   TEAP-Server  |    | MASA |  | CA |
+--------+                +----------------+    +------+  +----+
    |  EAP-Request/               |                |        |
    |   Type=Identity             |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=Identity             |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
    |   TEAP Start,               |                |        |
    |   Authority-ID TLV          |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   TLS(ClientHello)          |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
    |   TLS(ServerHello,          |                |        |
 (1)|   Certificate,              |                |        |
    |   ServerKeyExchange,        |                |        |
    |   CertificateRequest,       |                |        |
    |   ServerHelloDone)          |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   TLS(Certificate           |                |        |
    |   ClientKeyExchange,        |                |        |
    |   CertificateVerify,        |                |        |
    |   ChangeCipherSpec,         |                |        |
    |   Finished)                 |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
    |   TLS(ChangeCipherSpec,     |                |        |
    |   Finished),                |                |        |
    |   {Crypto-Binding TLV,      |                |        |
    |   Result TLV=Success}       |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   {Crypto-Binding TLV,      |                |        |
    |   Result TLV=Success}       |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
  ** At this stage the outer TLS tunnel is established ** 
  ** The following message exchanges are for BRSKI     **
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
 (2)|   {Request-Action TLV:      |                |        |
    |     Status=Failure,         |                |        |
    |     Action=Process-TLV,     |                |        |
    |     TLV=Request-Voucher,    |                |        |
    |     TLV=Trusted-Server-Root,|                |        |
    |     TLV=CSR-Attributes,     |                |        |
    |     TLV=PKCS#10}            |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
 (3)|   {Request-Voucher TLV}     |                |        |
    |---------------------------->| RequestVoucher |        |
    |                             |--------------->|        |
    |                             |    Voucher     |        |
    |                             |<---------------|        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
 (4)|   {Voucher TLV}             |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
 (5)|   {Trusted-Server-Root TLV} |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
    |   {Trusted-Server-Root TLV} |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   {CSR-Attributes TLV}      |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Request/               |                |        |
    |   Type=TEAP,                |                |        |
    |   {CSR-Attributes TLV}      |                |        |
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   {PKCS#10 TLV}             |                |        |
    |---------------------------->|                |        |
    |                             |   PKCS#10      |        |
    |  EAP-Request/               |--------------/ | \----->|
    |   Type=TEAP,                |                |        |
    |   {PKCS#7 TLV,              |   PKCS#7       |        |
 (6)|    Result TLV=Success}      |<-------------/ | \------|
    |<----------------------------|                |        |
    |                             |                |        |
    |  EAP-Response/              |                |        |
    |   Type=TEAP,                |                |        |
    |   {Result TLV=Success}      |                |        |
    |---------------------------->|                |        |
    |                             |                |        |
    |  EAP-Success                |                |        |
    |<----------------------------|                |        |



]]></artwork></figure>

<t>Notes:</t>

<t>(1) If the client has not yet completed the BRSKI flow, then it provisionally accepts the server certificate and must validate it later once BRSKI is complete. The server validates the client certificate using its trust anchor database.</t>

<t>(2) The server instructs the client to start the BRSKI flow by sending a Request-Action TLV that includes a BRSKI-RequestVoucher TLV. The server also instructs the client to request trust anchors, to request CSR Attrites, and to initiate a PKCS certificate enrolment. As outlined in <xref target="RFC7170"/>, the Request-Action TLV is sent after the Crypto-Binding TLV and Result TLV exchange.</t>

<t>(3) The client includes the certificate it received from the server in the RequestVoucher message.</t>

<t>(4) Once the client receives and validates the voucher signed by the MASA, it must verify the certificate it previously received from the server.</t>

<t>(5) As outlined in <xref target="RFC7170"/>, the Trusted-Server-Root TLV is exchanged after the Crypto-Binding TLV exchange, and after the client has used the Voucher to authenticate the TEAP server identity. This is equivalent to section [todo] from <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<t>(6) There is no need for an additional Crypto-Binding TLV exchange as there is no inner EAP method. All BRSKI exchanges are simply TLVs exchanged inside the outer TLS tunnel.</t>

</section>
<section anchor="teap-server-instructs-client-to-reenroll" title="TEAP Server Instructs Client to Reenroll">

<t>In this flow, the server instructs the client to reenroll and get a new LDevID by exchanging TLVs once the outer TLS tunnel is established.</t>

<figure title="TEAP Server Instructs Client to Reenroll" anchor="flow-3"><artwork><![CDATA[
                      +----------------+
+--------+            | Authenticator/ |    +------+  +----+
| Client |            |   TEAP-Server  |    | MASA |  | CA |
+--------+            +----------------+    +------+  +----+
    |  EAP-Request/           |                |        |
    |   Type=Identity         |                |        |
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=Identity         |                |        |
    |------------------------>|                |        |
    |                         |                |        |
    |  EAP-Request/           |                |        |
    |   Type=TEAP,            |                |        |
    |   TEAP Start,           |                |        |
    |   Authority-ID TLV      |                |        |
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=TEAP,            |                |        |
    |   TLS(ClientHello)      |                |        |
    |------------------------>|                |        |
    |                         |                |        |
    |  EAP-Request/           |                |        |
    |   Type=TEAP,            |                |        |
    |   TLS(ServerHello,      |                |        |
    |   Certificate,          |                |        |
    |   ServerKeyExchange,    |                |        |
    |   CertificateRequest,   |                |        |
    |   ServerHelloDone)      |                |        |
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=TEAP,            |                |        |
    |   TLS(Certificate,      |                |        |
    |   ClientKeyExchange,    |                |        |
    |   CertificateVerify,    |                |        |
    |   ChangeCipherSpec,     |                |        |
    |   Finished)             |                |        |
    |------------------------>|                |        |
    |                         |                |        |
    |  EAP-Request/           |                |        |
    |   Type=TEAP,            |                |        |
    |   TLS(ChangeCipherSpec, |                |        |
    |   Finished),            |                |        |
    |   {Crypto-Binding TLV,  |                |        |
    |   Result TLV=Success}   |                |        |
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=TEAP,            |                |        |
    |   {Crypto-Binding TLV,  |                |        |
    |   Result TLV=Success}   |                |        |
    |------------------------>|                |        |
    |                         |                |        |
    |  EAP-Request/           |                |        |
    |   Type=TEAP,            |                |        |
 (1)|   {Request-Action TLV:  |                |        |
    |     Status=Failure,     |                |        |
    |     Action=Process-TLV, |                |        |
    |     TLV=PKCS#10}        |                |        |
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=TEAP,            |                |        |
    |   {PKCS#10 TLV}         |                |        |
    |------------------------>|                |        |
    |                         |   PKCS#10      |        |
    |  EAP-Request/           |--------------/ | \----->|
    |   Type=TEAP,            |                |        |
    |   {PKCS#7 TLV,          |   PKCS#7       |        |
    |    Result TLV=Success}  |<-------------/ | \------|
    |<------------------------|                |        |
    |                         |                |        |
    |  EAP-Response/          |                |        |
    |   Type=TEAP,            |                |        |
    |   {Result TLV=Success}  |                |        |
    |------------------------>|                |        |
    |                         |                |        |
    |  EAP-Success            |                |        |
    |<------------------------|                |        |

]]></artwork></figure>

<t>(1) The server instructs the client to reenroll by sending a Request-Action TLV that includes a PKCS#10 TLV.</t>

</section>
<section anchor="out-of-band-reenroll" title="Out of Band Reenroll">

<t>This section shows how the device does a reenroll to refresh its LDEvID directly against the registrar outside the context of the TEAP tunnel.</t>

</section>
</section>
<section anchor="teap-tlv-formats" title="TEAP TLV Formats">

<section anchor="brski-tlvs" title="BRSKI TLVs">

<t>BRSKI defines 3 new TEAP TLVs. The following table indicates whether
the TLVs can be included in Request messages from TEAP server to
device, or Response messages from device to TEAP server.</t>

<figure><artwork><![CDATA[
+------------------------+----------+
| TLV                    | Message  |
+------------------------+----------+
| BRSKI-VoucherRequest   | Response |
| BRSKI-Voucher          | Request  |
| CSR-Attributes         | Response |
+------------------------+----------+

]]></artwork></figure>

<t>These new TLVs are detailed in this section.</t>

<section anchor="brski-requestvoucher-tlv" title="BRSKI-RequestVoucher TLV">

<t>This TLV is used by the server as part of a Request-Action TLV to
request from the peer that it initiate a voucher request.  When used
in this fashion, the length of this TLV will be set to zero. The Status field of the Request-Action TLV MUST be set to Failure.</t>

<t>It is also used by the peer to initiate the voucher request.  When
used in this fashion, the length of the TLV will be set to that of the
voucher request, as encoded and described in Section 3.3 in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD1-VoucherRequest   |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                              Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>The M and R bits are always expected to be set to 0.</t>

<t>The server is expected to forward the voucher request to the MASA, and
then return a voucher in a BRSKI-Voucher TLV as described below.  If
it is unable to do so, it returns an TEAP Error TLV with one of
the defined errors or the following:</t>

<figure><artwork><![CDATA[
TBD2-MASA-Notavailable  MASA unavailable
TBD3-MASA-Refused       MASA refuses to sign the voucher

]]></artwork></figure>

<t>The peer terminates the TEAP connection, but may retry at some later
point.  The backoff mechanism for such retries should be appropriate
for the device.  Retries MUST occur no more frequently than once
every two (TBD) minutes.</t>

</section>
<section anchor="brski-voucher-tlv" title="BRSKI-Voucher TLV">

<t>This TLV is transmitted from the server to the peer.  It contains a
signed voucher, as describe in <xref target="RFC8366"/>.</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD4-Voucher          |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                              Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>Upon receiving this TLV the peer will validate the signature of the
voucher, using its pre-installed manufacturer trust anchor (LDevID).
It MUST also validate the certificate used by the server to establish
the TLS connection.</t>

<t>If successful, it installs the new trust anchor contained in the
voucher.</t>

<t>Otherwise, the peer transmits an TEAP error TLV with one of the
following error messages:</t>

<figure><artwork><![CDATA[
TBD5-Invalid-Signature  The signature of the voucher signer is invalid
TBD6-Invalid-Voucher    The form or content of the voucher is not valid
TBD7-Invalid-TLS-Signer The certificate used for the TLS connection
                       could not be validated.

]]></artwork></figure>

</section>
<section anchor="csr-attributes-tlv" title="CSR-Attributes TLV">

<t>The server SHALL transmit this TLV to the peer, either along with the
BRSKI-Voucher TLV or at any time earlier in a communication.  The peer
shall include attributes required by the server in any following CSR.
The value of this TLV is the base64 encoding described in Section
4.5.2 of <xref target="RFC7030"/>.</t>

<figure><artwork><![CDATA[
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R| TLV=TBD8-CSR-Attributes |         length                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Value...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork></figure>

<t>Again, the M and R values are set to 0.  In the case where the client
is unable to provide the requested attributes, an TEAP-Error is
returned as follows:</t>

<t>TBD9-CSR-Attribute-Fail Unable to supply the requested attributes.</t>

</section>
</section>
<section anchor="existing-teap-tlv-specifications" title="Existing TEAP TLV Specifications">

<t>This section documents allowed usage of existing TEAP TLVs. The definition of the TLV is not changed, however clarifications on allowed values for the TLV fields is documented.</t>

<section anchor="pkcs10-tlv" title="PKCS#10 TLV">

<t><xref target="RFC7170"/> defines the PKCS#10 TLV as follows:</t>

<figure><artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |M|R|         TLV Type          |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           PKCS#10 Data...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-

]]></artwork></figure>

<t><xref target="RFC7170"/> does not explicitly allow a Length value of zero.</t>

<t>A Length value of zero is allowed for this TLV when the TEAP server sends a Request-Action TLV with a child PKCS#10 TLV to the client. In this scenario, there is no PKCS#10 Data included in the TLV. Clients MUST NOT send a zero length PKCS#10 TLV to the server.</t>

</section>
</section>
<section anchor="tlv-rules" title="TLV Rules">

<t>BRSKI TLVs can only be transported inside the TLS tunnel. The following table provides a guide to which TLVs may be encapsulated in which kind of packets, and in what quantity. The messages are as follows: Request is a TEAP Request, Response is a TEAP Response, Success is a message containing a successful Result TLV, and Failure is a message containing a failed Result TLV.</t>

<t>The following define the meaning of the table entries in the sections below:</t>

<t>0   This TLV MUST NOT be present in the message.</t>

<t>0+  Zero or more instances of this TLV MAY be present in the
    message.</t>

<t>0-1 Zero or one instance of this TLV MAY be present in the message.</t>

<t>1   Exactly one instance of this TLV MUST be present in the
    message.</t>

<t>Request Response Success Failure TLVs
0       0-1      0       0       BRSKI-VoucherRequest
0-1     0        0       0       BRSKI-Voucher
0       0-1      0       0       CSR-Attributes</t>

</section>
</section>
<section anchor="fragmentation" title="Fragmentation">
<t>TLS is expected to provide fragmentation support. Thus EAP-TEAP-BRSKI
does not specifically provide any, as it is only expected to be used
as an inner method to TEAP.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>The IANA is requested to add entries into the following tables:</t>

<t>The following new TEAP TLVs are defined:</t>

<figure><artwork><![CDATA[
TBD1-VoucherRequest   Described in this document.
TBD4-Voucher          Described in this document.
TBD8-CSR-Attributes   Described in this document.

]]></artwork></figure>

<t>The following TEAP Error Codes are defined, with their meanings
listed here and in previous sections:</t>

<figure><artwork><![CDATA[
TBD2-MASA-Notavailable  MASA unavailable
TBD3-MASA-Refused       MASA refuses to sign the voucher
TBD5-Invalid-Signature  The signature of the voucher signer is invalid
TBD6-Invalid-Voucher    The form or content of the voucher is not valid
TBD7-Invalid-TLS-Signer The certificate used for the TLS connection
                        could not be validated.
TBD9-CSR-Attribute-Fail Unable to supply the requested attributes.

]]></artwork></figure>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>There will be many.</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>The authors would like to thank Brian Weis for his assistance, and
Alan Dakok for improving language consistency.  In addition, with
ruthlessly “borrowed” the concept around NAI handling from Tuomas Aura
and Mohit Sethi.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>





<reference  anchor="RFC3748" target='https://www.rfc-editor.org/info/rfc3748'>
<front>
<title>Extensible Authentication Protocol (EAP)</title>
<author initials='B.' surname='Aboba' fullname='B. Aboba'><organization /></author>
<author initials='L.' surname='Blunk' fullname='L. Blunk'><organization /></author>
<author initials='J.' surname='Vollbrecht' fullname='J. Vollbrecht'><organization /></author>
<author initials='J.' surname='Carlson' fullname='J. Carlson'><organization /></author>
<author initials='H.' surname='Levkowetz' fullname='H. Levkowetz' role='editor'><organization /></author>
<date year='2004' month='June' />
<abstract><t>This document defines the Extensible Authentication Protocol (EAP), an authentication framework which supports multiple authentication methods.  EAP typically runs directly over data link layers such as Point-to-Point Protocol (PPP) or IEEE 802, without requiring IP.  EAP provides its own support for duplicate elimination and retransmission, but is reliant on lower layer ordering guarantees.  Fragmentation is not supported within EAP itself; however, individual EAP methods may support this.  This document obsoletes RFC 2284.  A summary of the changes between this document and RFC 2284 is available in Appendix A.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3748'/>
<seriesInfo name='DOI' value='10.17487/RFC3748'/>
</reference>



<reference  anchor="RFC7170" target='https://www.rfc-editor.org/info/rfc7170'>
<front>
<title>Tunnel Extensible Authentication Protocol (TEAP) Version 1</title>
<author initials='H.' surname='Zhou' fullname='H. Zhou'><organization /></author>
<author initials='N.' surname='Cam-Winget' fullname='N. Cam-Winget'><organization /></author>
<author initials='J.' surname='Salowey' fullname='J. Salowey'><organization /></author>
<author initials='S.' surname='Hanna' fullname='S. Hanna'><organization /></author>
<date year='2014' month='May' />
<abstract><t>This document defines the Tunnel Extensible Authentication Protocol (TEAP) version 1.  TEAP is a tunnel-based EAP method that enables secure communication between a peer and a server by using the Transport Layer Security (TLS) protocol to establish a mutually authenticated tunnel.  Within the tunnel, TLV objects are used to convey authentication-related data between the EAP peer and the EAP server.</t></abstract>
</front>
<seriesInfo name='RFC' value='7170'/>
<seriesInfo name='DOI' value='10.17487/RFC7170'/>
</reference>



<reference  anchor="RFC7030" target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author initials='M.' surname='Pritikin' fullname='M. Pritikin' role='editor'><organization /></author>
<author initials='P.' surname='Yee' fullname='P. Yee' role='editor'><organization /></author>
<author initials='D.' surname='Harkins' fullname='D. Harkins' role='editor'><organization /></author>
<date year='2013' month='October' />
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference  anchor="RFC8366" target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author initials='K.' surname='Watsen' fullname='K. Watsen'><organization /></author>
<author initials='M.' surname='Richardson' fullname='M. Richardson'><organization /></author>
<author initials='M.' surname='Pritikin' fullname='M. Pritikin'><organization /></author>
<author initials='T.' surname='Eckert' fullname='T. Eckert'><organization /></author>
<date year='2018' month='May' />
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor="I-D.ietf-anima-bootstrapping-keyinfra">
<front>
<title>Bootstrapping Remote Secure Key Infrastructures (BRSKI)</title>

<author initials='M' surname='Pritikin' fullname='Max Pritikin'>
    <organization />
</author>

<author initials='M' surname='Richardson' fullname='Michael Richardson'>
    <organization />
</author>

<author initials='M' surname='Behringer' fullname='Michael Behringer'>
    <organization />
</author>

<author initials='S' surname='Bjarnason' fullname='Steinthor Bjarnason'>
    <organization />
</author>

<author initials='K' surname='Watsen' fullname='Kent Watsen'>
    <organization />
</author>

<date month='May' day='11' year='2019' />

<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this a remote secure key infrastructure (BRSKI) is created using manufacturer installed X.509 certificate, in combination with a manufacturer's authorizing service, both online and offline.  Bootstrapping a new device can occur using a routable address and a cloud service, or using only link-local connectivity, or on limited/disconnected networks.  Support for lower security models, including devices with minimal identity, is described for legacy reasons but not encouraged.  Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device but the established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-anima-bootstrapping-keyinfra-20' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-anima-bootstrapping-keyinfra-20.txt' />
</reference>




    </references>


<section anchor="changes-from-earlier-versions" title="Changes from Earlier Versions">

<t>Draft -01:
  * Add packet descriptions, IANA considerations, smooth out language.</t>

<t>Draft -00:</t>

<t><list style="symbols">
  <t>Initial revision</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAGRN+lwAA+19a3fbxrXo9/kVs+oPtRqSsSy/onXSHFpSbtQ4tq+oOL0n
yToLJIcijkmABUAprO3+9rtf8wJACpLtpIkP67YiiHnt2e+9Z0+/31dVWi3M
oX6a51VZFclqlWYX+luz0afZrEjg0XpSrQuj80tT6JPhS5WMx4W5hBZno29P
9Tk8osfTfJIlS+hpWiSzqr8wSdE3yapf4f+Mi/J12r93X02SylzkxeZQl9VU
qXRVHGoYoqzu37v3Bfz+2myu8mJ6CKNXpshM1T/G7pQqqySb/neyyDMYYmNK
tUoP9Y9VPunpMi+qwsxK+GuzxD9+VipZV/O8OFS6rzR80qw81CcD/QxmRQ94
qieLNK/8w7y4ONRHaTnJ9WhTVmZZ0mOAgTHVoT5LJ/MqRSCVpdGP6bdJPoV+
jr7pPzm494CfpBWs7odksUhLs1iYTN5bZxUue3SVVv80xQJWQz+s5rSizx7s
6wcP9JPHT/QXAAr6ySyTdHGoEZL/OcFZDSb5MlrRi4H+ukjNIljSiyuTBQ+v
WdL+43v6h4E+T8plkunjYhAs6ouH+wfhkkbwxt/y0vT00TBe0/dZWpmpHlWw
uWU49XyGE9ky+ecDfZQs+z8AvpkqWMHzJJts6j/9tuvIJsnyCiYTrET1+32d
jBEbJoCep5memKJK0kyb7DIt8mxpsgpQEh4APgPpzPJCJ3pqLtOJ0VWuDWD0
GHBkrpNsoxfJxhSqmsNyYD7L5TpLgVTSPMMuKp2WOjMTU5ZJsaGeqnlSBZ2N
jV4V+QrwaqMmhZnC2GmyMNOB1udzaAz/El2YBXR5aRYbbZJygy3GC7PE9mW+
uDT6ag64kyjpFtuUZT5JEwQKoC3MVM/XCOCxQSYBKKznSanHOfyUZqt1RY+m
abmC5ajZOpvQCmASp7SEBSyAh6aRqrnh/nrcutfeXCfAfTKg01VhSlgYrinX
yXRaYHcVLm+S4HbSn0uzhOWszCSdpbCJ5pfKZCV1A8vEEc/XWWYW+oR/AADo
IfAKBBgDXL8scmAr+ULfRd62p5YGWMmUIb4wwAWTC1PW+OUZjFoZPTITZJVN
7lmqu8Qu9zw+wHRgAy7TqQGw+j3D5w5NcEREDF1d5QN1DrMfJyUsMp/xYoFV
vkbA0twSDaBczxIasIANWyxgtKrIp2tEkrmxG4tQRkgs8gmMNzWrRb5BbIWH
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
ViBTFhvvhIANkFIDSrd+fIECW6egXtLA1UGIirh8zoURgvoJHDIKKidI8QRK
JhyFhR1cPYj2kZpTikaSfrFXsck+r40Yfd7aBhore315anHgugb/UZ+F/ewY
of2zvQGvgRWiz7s0uOEati3hrx98DTfeBz6G3bEB8Q904PS6NXClXvpAOciu
dzb4N97pG0Hp2ehuELbd293gj4IasGjmLbTo3vYGd/f38HFgPgRj7BiBe//W
bE5cUtO2Ee7XR5DF97qMQPM/zjNzzcb93rH17sGew9bGXuwYgVG7yz7YBr73
V2QwXduAuj1KVyDkR6Da9q6b0tdgT2GKwV78+5YGfyCKa0KqC5S6jvCmqW/3
djbwh7a/lPjPux0j/N4JSP8qUPq1sFWm0qXBTTaOlV6sroWWRX8/qqjVZopg
TS08VoMeIhAVLXkzXrGPo0hOw6cgNB5GxZJGyHiyOCTLJdbJpxb5+kKPlnPc
uypWNsO0OaFm0kA8MX/aqO3YTRQ+CKdACdrRJNNKDohQJN4VhbHjgo0Boq95
6pSt81tmXLnoRFsq1VZrrnkmvVkdA6d7sBcmxlIE1KYD+FThXlCvJMdaTXjs
cUvaU++avKeaFXzq8qmPnPX6UuJfDF90Euwwj+OEbG8C+yBagKDjjTXinfPH
5VQ0oj7o+vTHxWylwK3U3d2AZNLeZUTKX9uMScsbthuU+NfRdsOyfbqtMwg4
VIs8bedSNXalt1lrnVpvZXbtDK859vZPh9Zb5FfH1u+z7l3LbpE9zbG3fzqv
+/32uyHEO7duNXO7tm63eTu1/v3j2u1h3mo0d2r9KWNqq9V9beudJnjXsdvt
8a6t243zm41dt9Q7tf7UaSxQMG/Wut3u79y61QnQuXWrR6Br63b3QKfWnzhv
6eqJabZudzZ0bd1uU3dt3W5gd2r9CXOH3wzmvxmN/eUv2h6pBkPropMdho24
KdqtPn5trWRfehWDshj/lzLnGhv9ntmCeNXfNBM/D7uPremyvXX55decDXcz
Rq4lZfbLlxz17zsc7dYasdNO/5XNTbtR65YCJL3ureMqHTedueQDv2t9eVvr
T5GhSWTjTW2rEYjvuo19DUuqpSDfDGpbOVxnmNtx22a+u3UdG/5teMsD3rHG
TnUe+5PE84cMtS1Vkd79G4ve3xDX5Ot7QO1TxDX5+qZZaOpdx9afMq7dHmqf
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

-->

</rfc>

